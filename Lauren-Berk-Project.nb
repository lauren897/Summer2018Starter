(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    323597,       6646]
NotebookOptionsPosition[    302522,       6282]
NotebookOutlinePosition[    307636,       6401]
CellTagsIndexPosition[    307421,       6392]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Last modified on: Tuesday, July 10, 2018 at 19:23", \
"TemplateInstructions",
 Deployed->True,
 Background->RGBColor[0.75, 0.75, 0.75],
 CellTags->
  "LastModified",ExpressionUUID->"73a75361-035f-4cef-9b11-0db0d08ce299"],

Cell[CellGroupData[{

Cell["Author Info", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.736188040860998*^9},
 CellTags->
  "AuthorInfo",ExpressionUUID->"47541fce-e5a1-4793-b8e1-e1340b437ca6"],

Cell["Lauren Berk", "TemplateAuthorInfo",
 ShowCellBracket->False,
 CellFrameLabels->{{
    Cell["Name:", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{35, 0}, {0, 0}},
 CellChangeTimes->{
  3.736536207540806*^9, {3.740247188523435*^9, 
   3.740247191630678*^9}},ExpressionUUID->"2214bf82-cb91-41b2-a79f-\
ecd872282532"],

Cell["Carl Woll", "TemplateAuthorInfo",
 ShowCellBracket->False,
 CellFrameLabels->{{
    Cell["Mentor: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{25, 0}, {0, 0}},
 CellChangeTimes->{
  3.736536216260921*^9, {3.740247194803125*^9, 
   3.740247195977263*^9}},ExpressionUUID->"1d803eb4-64f6-4601-a1a0-\
49b5afc9692c"],

Cell["MIT", "TemplateAuthorInfo",
 ShowCellBracket->False,
 CellFrameLabels->{{
    Cell["Affiliation: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{8, 0}, {0, 0}},
 CellChangeTimes->{
  3.736536278299572*^9, {3.740247198626972*^9, 
   3.7402471990912046`*^9}},ExpressionUUID->"f3f2c56d-6554-49c0-a8f0-\
7c8d2bae5215"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Poster Session Content", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.7361879449416428`*^9},
 CellTags->
  "PosterContent",ExpressionUUID->"e3c11918-b62c-4e4f-bc19-a4aa32cba637"],

Cell["Clustering and Visualizing EIWL Submissions", "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Title of \nproject: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{17, 0}, {0, 0}},
 CellChangeTimes->{
  3.7365364091022453`*^9, {3.7402244282744827`*^9, 3.7402244355609493`*^9}, {
   3.74024722766072*^9, 
   3.740247246205814*^9}},ExpressionUUID->"16215b85-c481-4f11-8175-\
b0652d7bbfad"],

Cell["\<\
To create a function analogous to \[OpenCurlyDoubleQuote]Classify\
\[CloseCurlyDoubleQuote] that takes in a programming problem and student \
solutions (some correct, some incorrect) and builds a classifier that can \
determine if a given program is correct or incorrect, and more specifically, \
why the solution is correct or incorrect.  (If correct, which approach was \
taken.  If incorrect, what was done in error or misunderstood?)  We will \
develop this function using data from EIWL problems and  Wolfram Challenges.\
\>", "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Goal of \nthe \nproject: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{18, 0}, {0, 0}},
 CellChangeTimes->{
  3.736536691820487*^9, {3.740155118117497*^9, 3.7401551204584227`*^9}, {
   3.7402473071772633`*^9, 
   3.74024731039001*^9}},ExpressionUUID->"c662dd0a-9849-40e8-bc89-\
a9f688107475"],

Cell["\<\
Add the most representative image of your project here. (We recommend just 1 \
image, if you add more, we will make a collage of the images.)\
\>", "TemplateInstructions",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.736704649824739*^9},ExpressionUUID->"ec924e65-f9fc-4678-8fe3-\
95cd292f053c"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[{
    {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
     ArrowBox[{{0., 2.}, {0., 1.}}, 0.02261146496815286], 
     ArrowBox[{{0., 2.}, {1., 1.}}, 0.02261146496815286], 
     ArrowBox[{{0., 1.}, {0., 0.}}, 0.02261146496815286], 
     ArrowBox[{{0., 1.}, {-1., 0.}}, 0.02261146496815286], 
     ArrowBox[{{1., 1.}, {0., 0.}}, 0.02261146496815286], 
     ArrowBox[{{1., 1.}, {1., 0.}}, 0.02261146496815286]}, 
    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
     0.7]}], {DiskBox[{0., 2.}, 0.02261146496815286], 
      InsetBox["ListPlot", 
       Offset[{2, 2}, {0.02261146496815286, 2.022611464968153}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {DiskBox[{0., 1.}, 0.02261146496815286], 
      InsetBox["Join", 
       Offset[{2, 2}, {0.02261146496815286, 1.0226114649681528}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.02261146496815286], 
      InsetBox["Reverse", 
       Offset[{2, 2}, {1.0226114649681528, 1.0226114649681528}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.02261146496815286], 
      InsetBox["Range", 
       Offset[{2, 2}, {0.02261146496815286, 0.02261146496815286}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {DiskBox[{-1., 0.}, 0.02261146496815286], 
      InsetBox["100", 
       Offset[{2, 2}, {-0.9773885350318472, 0.02261146496815286}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {DiskBox[{1., 0.}, 0.02261146496815286], 
      InsetBox["99", 
       Offset[{2, 2}, {1.0226114649681528, 0.02261146496815286}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}}},
   FormatType->TraditionalForm,
   FrameTicks->None,
   ImageSize->{266.046875, Automatic}], 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsvXt8JGWdtx1xXfcPfXd91d397PFZXQ/oGHDF42ow667H+ERd3CcvxlWj
BsEBIwY064gPMbgbRlYSFYOniBrFBGEiDFHGDGN0IIyTAZMZM0hg24EGEkiY
ZJK0EPT39l3d1X1XdVWfu+t0XZ/PlU5XV1dXd1d339+q+3fX33V85B2dJzU0
NHzsj5J/3vG+jzeff/77ev71T5JX3nnex84+67wPfuBN53V/8KwPnv+Kjicm
Jz6cnPdZyX/+IPn/xsaGICIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiRtX19XXDhYUFw+npacOb
brrJojndnM+8n9frj4iIiIiIwZMcgoiIiIiI9dLMEYcPHza84YYbStK8H3kE
ERERERGLlRyCiIiIiIj11uxf5ZYzjh8/btFtPnM5Xj8fRERERET0v+QQRERE
RESst2bdeaU5xFyO188HERERERH9LzkEERERERHrrTker1vuKKR5P3M5Xj8f
RERERET0v+QQRERERESst+QQRERERESst+QQRERERESst9SpIyIiIiJivSWH
ICIiIiJiveU8hoiIiIiIWG/JIYiIiIiIWG/X19cNDx8+bOiWM9w072cux+vn
g4iIiIiI/pccgoiIiIiIXmnmCLN/lVl3bo7Ha2pON+cjfyAiIiIiYrmSQxAR
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERsRaeOHFCjh8/LisrK4iIiFhFH3nkEeM3Vv3Wev17j4joF5eX
l+Xee++VX//61zI3Nyd33HEHIiJiZHzPt9bkPd+uvZ3fWZaLdi3K9/Y/IHfd
+7Dnv/+IiF65vr4uDzzwgMzPzxsZ5MEHH5REIiEAAABR4j+uX6+LHx9fl/Ov
XZdzRtflfd9Zk72/fMD4Lfa6PYCIWG9VBjly5IhxCQAAEFV6frguPcmc8Al1
+cPUpak+vSczbUMz935q+ifsy9GWpez6wbq8fySVRbxuDyAi1lPVF0sdByGD
AABA1FG5QB2rsPuJH24YZq87z6ffXso8H7lmXf79Wyfoo4WIkVLVgxw9etTr
r34AAADPuXDXulw4vpFS/Z/24+Z1ffq4dl2b/nHbfS2OO1xPL+es752QkZ9x
TAQRo6Eaq0PVg3AsBAAAQKT7uvWsuzasl3b16fZ51aXT/ZLTLkhPv8A2z/ax
dfnkNYuMo4WIkVCNG6jGB9nc3PT6qx8AAMBzzr9uI+W1G/LRa9eNy/OvTdWU
p6an/v9o2ux0bT7Nj9pU81qWqy2z65p1ec/Xl43fZq/bB4iItVaNY37w4EGv
v/YBAAB8gaoZT7mRurxmPXt5jTY9M8+GNm1Dm0ebz1yGRftyUv+/8ysnjPOL
eN0+QESstSqH3HbbbV5/7QMAAPiC88bW5bxrNqyqafbp5vX05UeS7r3rMXn8
dyI3Jy8dl+NwP/v0M4ZOGL/NXrcPEBFrrfqum56e9vprHwAAwBd8OJkHPjy2
IdvTmtdTlym3a7ebTt39mGU5P114LH3/DdfLDzss5+1XkEMQMRqSQwAAALKo
8woqz/7+uuP/umq68qajjzku6yd3PuZ4P/2+9ulv+xI5BBGjYZBziDrf+5bX
KwFQALZTKIqtRHJbYUvxA2d9fyPpupx19bp0Xp26NM1c/372/xt/9Wjmvr//
vci+ux4zLk3U7eZ9O9P3NR4js6wNbfq6vPULa+QQRIyE1cshCVmYmZKJ8TEZ
G5uU2Fqpt5fCmoz3NEtDQ0PSdpla4rc7rKzMTyW3lzGZmJiS2YWlOjwi26ki
PjUsXV090tUzLLE6rnaw3+/yWZsfk0ZjO2mQ1oGpipdX6HWs/+scLD74vXXD
D3x3PfO/1Y3M7buPWDPIV275rTH9K/sTliyi5tOXay47dblhua1lkOMhiBgN
q5JDtmLS39yQbm+l7J9eKeL2NRnpTLbTGhukuXNEim4CrE1Ls7aszpH5yta/
bqSeb2NjszQ3O9uYtLNnSKYWVgovLgLMDDRbtpvWgRoeuwvNdpqQiZ7W5Pq6
bWeNSVulZ2BM5lecQ8bMQGt6vZtluo5tc3+83/lYk7Gu1LbQWMq2UIDs663s
lPlEpcvL/zrW9XUOIB0jG9Lx3aQj66n/k5fvy/yfnX7drJZBkg79/LeW24d+
bs0i43OPpm9La3sMc9qbPs/xEESMhtXIIbGxLstvmnJodq2I29dkqDU9rXlI
im55by1IV0lth6IWKpMDndLa2irtPeNSYTPABe35FmFr/0TV2jlBZX640/a6
NMpEvDY76MOznZa2nfVPLOQsYXaoPX17q8xUdSPMv/7+eL/zUea2UMq6NA5U
vNxCr2M9X+cg8t7vbMh7vr1uaP6vLvXp35151HKf4enf5syr/Hpyus73kvfL
LmfDMq85/Y2XcTwEEaNh5TkkISPt2d+y4emYJLa2irx9TYa13/RSmjuJ2IxM
TE7K5NR8lfreJ9sXzdVvX9gfY1hrH7b39EpPT09a9X9npm9GJosMzdRkTYLE
ViK5jWrtpt7JWvQjCdN2mmc7603+39kq9vb3gC0j1S6HFF5/79/vfJS/LRRa
7ozaTiYmZb5K/fcKvY71eZ2Dybu/tSHtV63nXKb+T11u/S47v8oaxjxJjduN
y6x6FlH3c1puu/b/6z+3Tg5BxEhYeQ7R9g+2Djnsn813e61+08shkV2X1lqt
i/Z8W4ed92VvrchEf7vWRmyVquxGDzqJWWlNvybNA7XIZmHaTgtvZ1trCzLU
2ajtg+8XvRVauxxS5OfM0/c7//38sy0UQaHXseavczA585sbSdeNy3fl/J+6
vv+eLSNTfPWW38q7rtqw3b5hWYZSzffY42LcT1+Ouu+7bPd9XT/HQxAxGlYj
h+T/Xc53e/m/6VtrSxKLxZIuue5nXltakKnJcaMec2xsXCanZmUp50G2ZCUe
k3h8RnoazTZZj8zG46nlx6sZAqzP133J1v3Z9n3V5nrHF2Zkctx8fmMyOT0r
Lt39RbX/4sbrFZO19DxLsdns/ccnZKbIetUVtY9/PPWY4xOTWp3rVnKZqcdY
WnNbkeR6z0/LeHqd1fsyNRsr3A5MzEh7pi97bdql4dlOi93OYtllJR1byL4L
xeUQ9V5mt4X822CJnzNP3+/K77e1FpeZyYnM6zI2nvycxPJ9lyRcPzuJFfM1
Sj9aYklmpyYzn6GJqRlZcvsAFXoda/46B5O24Q35P9/IVZ9u/q9f6urTnJbl
tFzzsvk/OR6CiFnjC0fl0KFDMjc3J7HF1dx5VhdkdHBQRvYteL6upVrdHOLU
rznf7eW377J1lg51tGsLMtyV2/fEtGtoMvtYyd/hZpf5qtVXW1uxop/v7HD2
mMjAjHUN4tMj0t7ots6N0j+eWw+9NjuUXV6y3TKs7wvXbOwcch8faSuefF2b
nR+3tTeZY6YzbZrG/tw2TSI+JV3Nbq9zp0zG8qSRurZLg76dlrCdDTlvZ4Vy
SN73Um2DE7ZtsNTPmafvd7H3c3ptEzI13OP6PBvbB2Te6Q3RxjSwfna0fmyt
QzI7PZzTd9N8zYemYrnLJYeUxTu/tiHv/LrVM9Q0Y/qmdVpmHvv0zeztX7Mu
R1+WeV1f1umf5XgIYhBcPDDk/rum2zYsi2UsP3ZgVDqacpfXtmNYFla1eRf3
S1Ny+ra+fZ6/JqVazRzS3Os03mS+28tv37m3k5ak395Gb2zM+e1u7k+vi9Yv
wVc5xKV9uDY7XNQ23zMZtz7ybJGfFWX7mMPxidyxhfJpb9OszY8Udb8Rtzrh
OrZLg7+d1jaHrM0W9162Jtc9E2lL/Zx5+n4Xd7/c13ZFRjqL+Xy0yqS9Jtz1
+VqPjRb8/NgH2iKHlMU7vrIh7/jqZtqN9HXTzezlV/TrG/KvX9Xn05exmb5t
0+F222MlfU0fx0MQg+DioVTbatu2bYb697E5bZv6v6P0HLI8p7X3trVI944+
6d7ekp3WNCgxc/7l/dKSnNa0c7/nr0mpVp5DljLtU+ea6ny3V799tzTdn32P
mntkKtMXIiEL08PaPtlmmUrflFhbk0RCa2c390sskZC15PQ11/5F5VBsf5kl
GdDa/AOZJ6jtG03a3j8mC0trRltP9QOZGNDGwGnsFT2J5OaQdhkzanNVveqS
TA1bxw4aWbC2Z/TjM8resZlU/64t9bqO5LQxrW2amPRot6ljLvNqvbe2ZG1p
XgYsdQrW9c4+gZnMY9Smdj9M22nx6zvZmz2+VVwOsY4B1tDcK9PJdXfcBpMO
aXcu6XPm6fudD/fXNjZu/Qz1jEzLinFewi2Jz45Lp/662WtjSsghrb1jEltJ
GMtdWrAdl+q07UMo9DrW/HUOJm+7ckNar9zMaF5Xl07a53GaV59mX679/1dd
TA5BDKKL+weN79OWivPAquzqTuWalh27LBlmNbZP2tLf2zv3L6amRzmHrE3n
r3PMe3v123cL2viXvQ4nPlgYH5DOrq6k/WLd9a7X9tahTr3ZuTZ2ay1m6/vU
o/WTWku289S55bqkK9kWyc0xWzKWadO3WvoBWXNIszgNjTPdn+0jNGBpfMYs
bU/HepWlKUsW0dtSS1O97u0kgxXLOLP90051KvHs8QO3Gv9KCNV2Wty2bD2u
YR0PwTU/TWrvZeuAOL1T8yNae7zdfo6NYj9nXr7fee/osi3EpVc7vjUw5fDK
JGYtn6Nh/Y0tMoc4HrtZmcrm1pzts9DrWOPXOaCQQxDD6LLs6muTpradcmjh
kAx1t6WPWSTb7207ZM/RZdv8q3Jo16C0NZnHObZJS0dfcr5F18dYPFA4h6zG
Dsjg9jbjOEnqWEeT7BjeYzteEpfBdH+swUO59SBzu3ZKR0e37Jqz5pCWwX1y
aPegtJjHZoxl75PlUtdhdU762pqkZfuwxPXHHd0hTU0tsnO3XoeyIIMdLdLU
MZQ9PlOCleYQfR9gz0Tunuz8t1e/fTc/kt0f29o7LsUPgVmPcXBsbYrWVuM8
Chmbc2sv+qccjw64sjDs/LroOSTT18dGQpunfWg2O31eOzaYbFe6tVX0cxJk
21JbMt5lZqNk/nE5CLSlPUaz4znV1HLy56hKCNd2qs3T2C8LawlZS37O1Wdd
HXtYiS/IxJC1hqGxZ8JSR++83gntvcx3rg09t7ba6mKKfS29fL/z4bz+W7Ex
LZ8Nuz4v/XEt+aeoHJI9Nua6Tg3tMmP5gBZ6HWv7OgcVcghiGF2UwRZrG2tb
U1O2LZ7MGSNzZhZZld07mlzmS/7+HXDOIoVyyOrRUcvjtbRkH6OhRetnlcxM
w22p6U3bB+VQ3J6RbCZzSJu2fipXtGh1JS2DB0pch5jsNO7fJHvi2ddvyHz9
OkZk1XzshV2p5bUMlVUDU24OWYvPy8Swtm/Utj+10O3puarevrO0BwwbpbOn
X8YmpmQhvpLnHA71zyGFdDq/XGZJSzGZmZ6SyYkJGR8bkeHhIRkY6JfO5kbH
10XPIW79wN3m0ae3D7ufEzyxMOJwf+s59bqGRmRkxO6YjAw4ZRgrK9MD2den
sVNGJqclXmG/uXBup6VtZw0NXTnn73Zeb/29tLd3rWTPD95u69dV/Gvp3fud
dwmO6782o312tAyfe/fscRhLP6iicojb2GXWeeyH1wq9jrV4nYMOOQQxjGrt
6IaW7LGE1QUZ3p4+fpBuS2frz7fJ8P5Y+v7LsmdnW2Y++zGGjY1COST7+E3d
IxJL15kvH90jHenv4O5d2eMMZh8v06a2Dtk5NCr75xZyH1vLIR1D+zMZYW60
O51LdshCietwYDD1XPv2pJ//YuqYS2p9OuTAcuq+C7tSj9ExMlfW+1JuDsmO
A5RqQ43NrpR0e4pa1P+KzI/3Wt47q83SOzJV4vjC1cJ2frmuHunq6kqavGy3
HgsZWXBpB6yoegqXMass1iaH5D3fdGLWoS1Vaps4/+s/YzsPdKXnKA/ndlr8
a97aMyJOp9F2yyHF9l3U69+t20xpr6U373c+XHKIPh5dvhOuaHnDctykijnE
aZ5Cr2O1X+egQw5BDKPZNviO3THrbcsH0u34Ftm3qNrgqXrwjuFDtmXEZNfw
kAyP7i89hyyb7fjtMrdqvS2+b2fq+7dt2LJcNV7WdofxstR6Du9fsCzbWP9t
fba+UQuyY1v2eZWyDsuHUv1Umvr2pG/vS11PHz8ZTB8T2p2uYxk96jCecBFW
J4ck280z+XJI7u0patO+U2wtzcv4cL90trq02duHqzY2a/HkO7/clqXPS2PP
pMOTWrDUexs2Nhp9uto7O6Wnt0erb65NDukZdxgb1CQ+kRnvyS2HtLZ3Smen
u+3trdI5MOlyPGBLpoes9fLVbZeGZTu19tMZM87TPSETmpNT0xJzPelEETmk
ud+xNiT3/o2W85KU9lp69X7no3AO6XeqDTHRsnpj13j2O6CmOaTQ61j91zno
kEMQw6iZQ1pk/2K+25ZlNH18ZOiQey2Ik/lySKY/lC1rGJo5omnQUo9huhxf
kAN7dslg33Zr/7BD1vqQbTt2533OJa3D6pxsT2cbdYxozw71mnTI/qN7tJr4
mOww1sU83lK65eaQxFJMpsYHtHFGrb9/hW5PUbv2nc5WYkVi89My3Gv9rXXd
T1unOvWcX3qtHa8cs41ZZe0/0SWTDucdXBgpXB9Scg7R+pw45qM0eg1z9v4r
2hhf7TJbQXeP+IRW09DcJRPTs+7nbyuScG6nhc+nXt566+9lbv8f7ZnIZE+z
y/Mu/nPm3fudD7d+WdnPZnN/nu9TPavXqF+WfZ5Cr2MtXuegQw5BDKNam3w5
z23JHDLSYbbzC9Rl2MyXQ8zjC84Z4EDeHGKd96jsNGtHzPOFZOrU7Y9rzSGl
rcOq7DLyWIvsix2VPuN+I8YyjRr65HwLsd1Grmnasafs96XSOnW97dnlsK88
/+3FjmObi2v7bmtLEomEMR6tE7Hx7G9uu6Ufd/H7esuncHt2ShtHVe0L1+eZ
GXIbzyq7/JF25/ZIJTlEH9tTLde5VnbJcn4R/f76c8q3rzhhjN+65tJutj43
53Uon3Btp5Uf23Nbb/29dK3vtmwv9jqSYj9nXr3fMRlob5bm5kZpH3AYz0E7
nmHZFpYms8ci3caeFr1uxlZHUrMcUuh1rO3rHFTe+uWNrEOb1utu02y2mPMV
Ma99ma/4NDkEsfpm+2UN7rcf50jv+7f1y9o+etQ237LMHTogB+YWsnXamsX1
y+rOOXawnD4PSabWe/WoMQZVm228qszjpPtIZR7Hddxe2zGgUtYhaWz3DmNa
984+I29sH03VgBwYUrUjTdK3c7tx+8598bLfl4rH7U1o48+7nCfL/fby99sW
7DfS0CxOzSS9fWc9159eg9sq024rs5UwXjOlWxvSnSLah1odq5E3tP4R+nhU
XWO5NewL49b626rlENmSiR79HB89MqMP8JSI55yf3a1fV0NDpzh1hdH7p3c6
PDfLvninMbsqel8kZNtp7XKI9Tya7TKVU1yyImN6/8Je+/GzIj9nXr3f2nnN
1bY6b1t2fEIft1jfT2Cr/RqYyulbqMZJzh6HsY1NVbMcUuB1LHh7NHnLFRuG
b/6S6bphalr2Ut1mzme9TN325iuy980uR1vuFbbLtC/7FDkEsfpqderbuuVA
pm/Warb+vGmnUV9h1kI0NLTJ7oVs3cPC7vT0bTsdx4bKX6cek75tqcfvGNTO
e748JzvSNSCZWu/lA5ma8O5RW43K4pz05cxfZA4pZR2U8T3GedpTr8U22ZV+
LSznWEy+Rrn93Iq3mucxdB6vMt/t1vZY78CADLjY398v47PZH263dtJkr94e
bpXhiRmJL63IUmxexgf084w1Jtt/ekshIeNaW7qxtVcmpqZketZ2XnJL/4tS
z/tVXPtQr/HV961axs9VWWRoXGbn52V+dkqGulott1U3h4h1f6/Z1jJqOtpz
zgGee3/r+UHUez00Pi2xWEzmZyZlwHK+FJe2VoHzrVX2vhhPMETbae1yiH38
M7V+/WOTMjs7KzPT49Zz6ql1zxmQuLjPmXfvt/W4nho/amxqVuJqrONh61jH
9uNB9nOFNrb3y+TMbPK1mZHxIes5DnP6N9Yqh3Aew7J4wxc35I1p35D2jbZp
e3+9JY89LvLfNz9quc0+n/m/mu/R5Pzqfvbl2X3Jf5wghyBWXX28rFS7uqOj
Q9q0OvDsfv3kvG3Z6R3d3bK9LTu+bbfl/BlZC43bG9fGwNrW0ibbt3do7fxu
S+34oeGO7Lpua5Puvj7Z0a1NS7b/zTGrzLGsch/XHKs4Xade4jqo85jsNF8f
Sw38Uek27+PUx6sEK88hhfqs5Lvd3qbJr97vejbTR8nWT31t1nreYhfbHX5z
l6b6c+dtHLCss35e8d589agur9VQMf17tuYtzyF77EPvQ1FI23kMZyrMIer2
hfGc86br2WJkMnvO6Jz7r8xIV2Ph9e6ZcKmDd22npajsfTGeXYi20yK3szy4
rnd63XuKeC+HXM59U8znzMv3OzE/UvC5NTQ7n8Nxdqyn8H3bh3L7ba25HY+z
HT9yySGu8xR4HQveHlFe/4UN+ZcvbCbdSP+/kfnfdOt32fkv2/toZrq63+tt
86rbTdT9/sVlmeb1f/gPjocgVl8zh7TJyK5hadumfzc3ydA+e7aIy66+Dtt3
eIsM7rKPoZXVrL/IHWcra/zAqHRss/4utGwfkqM5NSvJLLJrp5YRsjZ17JT9
Ma12ZfmQMe6uUw5J5ansOLulrkOqD1busvekz6+yvczxek2rnUNKG2c0eVvR
7Wrr/rrs+ag7ZdbemSARl7GBLsf99I2tPTI+49Z7e0tmx/ut+/0t66z6J2Xr
b0vvS60933anY0dZ9H45qs2TfagVmbTtW02149plJPm8FjL3s/bLT8TGM8+r
c8T5HCCJhbHMa+Y2j2wtyeRIv3S2t0t70s7OLhkYnpCYejJbBfroJVtu4wOd
zu9tZ79MLeR5QfO2lyp9XxRh2k6L387cyK6323lCXLbDpM3J93Imnq+HT6H1
F4/fb5W5J2zHdrT3t3cs73knV+aT921tdLhvs/SPzTj3fdqaz5z7sX1YrwdK
yESvmQkdtqH0PGOZY0y2ecghZfHPg5sZXzewYahfV5dfnHrUcp/PTT6aM4+6
vPQnv7XM96Xk/ezLsz/GKR8nhyBWX3ud+qosxuMST5p3f/7yojFPPL7oWBNS
ruqxFxeTy10sNN7tssQWjsrc3JwcShordE7DmqxD7fQ2h9QY1Yd8KZ7efuKy
slZ87+et5H1z64i1/kWt5e1nrhpba6nntLIkS0v1eFXTddV5OuMniuj7lZox
ue6xWPp9WZK1Yjr4520vVeN9CdN2Wke2Uu/lUvJ7xLgsYd2Nu7utvy/e7y1Z
WpiVqakpmVJjH0/N5B3rOOcRVuLJ34sl471Vl57UXpBDyuK1n9+Q5ss3bW4Y
003VtK/f+ljmPr9P+n9v/G36ttQ86vrvfp9d7vD0Yy7L3rQs+0UXkEMQq2++
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
zl730+VZ5v/auqtLfbqaD6ILOQQRERGD4v6dTdLQ0CT7Fr1fl3qo2mhvHVyT
zmR7/YPf20i6HihT623X+jwgupBDEBERMSgeGGxJ5pAW2R+hHPLmy0/I+7+7
kXRd3j+yblx2jJj/J6ePbEjHd1P/O122f+mo/OvnDsm/fv6ovOsq9/lKvXzv
VxfSy52Ttq8+7Difsa7Gem+kr29o65+67lcSK3FjXNn5hQWJryS8Xh1XVuIL
6fWMyVrAHpccgoiIiEExijnkTZ8/Ie/9zoa859vrxmXK9bSp/83b9Mt3X75b
XnByQ/L1svri8/Y7zl/85bK8/t0dOcv9m/89JGd8Yz3/un7bOk3NVx5LMtCc
+9xM24dny1yuIiGTA505y2ztGZZYnePIwuSANBqP3y4z9sb+VlyGOxtt69ku
EwuVr2S9HpccgoiIiOW5LLv62qSpbaccWjgkQ91tsm3btqQNyWk7ZM/R5cy8
q0d3SVtTk+wY3i2jO7fLNqPt0qbliVU5sGswOc+2TNumqUMtY9HymKkc0ib7
FuZkeEdHejkNsq1lu+w6FLfMaz5m3+g+2TO8Q5q2pdtM29pkcPec5XmM7lDP
o0/mbHUnc6PJ+zW1ya70c8kuc4/sGuzOPH5LR/I1SD6X5bnd0t3WlH4O26Rj
x4gsrJb/Gqs22hsuW5d/T7bf//1bG/Lu5OW7v5XMGFelTf6vphu3pf83Lr+4
R/7cbCOe3CEvee9O2faq7Gv7ou6j1vmLvlyW1701u5znvmOnvPQdWiZ51bCc
qc2fWVdj3XOnq+tlsTYjrenHbGxstKimdY7Ml7fcZAaZ6Mm2sTt7B2SgV8sk
7SNSlyiSbOuP9DRr7fxWWx5YkeF287Zm6R0akp7Wxsz1yfhWIB6XHIKIiIjl
uSiDLdZ9xtuSbfRtmevbZGQu1X5f3D/osN/azCHJPNPdpC2jRZq0+Qb3xTKP
eWCwzbaMbZbrg/uzWSTnMbc1ZbNI0h17Yrbn0ZJTd5LKPQ2yM71c+zLV83Va
lyYtTzV07yr7NVZttH++9IS865sbSdfTl06uWy7f9K7Uev/Zv+2WM7Xpb93+
4XQ2GZB/c7hfoct/6xtIP68Wab50OXv7F26Sv0o/39dctmpbV6f1zk4ri8Ss
tCcfq3lgprz7u7A2O5Rpf1v27y9NZXLPWKzMNn6xbC1Il7ntNDZm1kfPAyvT
5vvQLtMr5tSEjHelM0TXRCAelxyCiIiI5bkoQ5kc0iK75tLHLlYXZHh7uh3e
MiSLyWmLBwYzbfW+0QOyrB0jyN7WJCMHzGywLHsGzf3sO2QhPW82hzTJcGbe
uOza0ZLOGn0Sy1lug/Ttmssud2ebZd2yzyO3v5f5eJkcoq3r0L6F1HyLB6Tb
zDctfTKXXkb8wHA6k+2Qo2W+xqqN1vyfJ6TtGxvSNryRujQd1i6HrdPeeFa3
/OWLO6T586vWeQd3yZ+odXr+TnmHfRkFL1fl9JbU+/qC8xdybn977z45/cI9
8tYrbOvkpHZbOSTmR4z1qG4O2cocC+mZiOfcujQ7LROTUxKrdRHG2rTRJ6q5
Z0xWkm38kXZ7HkiuZ5fLeibvm8pLnTJfalzy4HHJIYiIiFie2RyyY3fMetvy
AWlryB5jyLTf24Zl1bYc85hDx8icbflx2dmUWv7QocX0vKlc0DFsn/eodKfz
wZ54apr5mNu2j9rWbb+0qHmbBiVueR4l5JCOEcvzMOfr26f3DYtJX5PzcZZi
VW200z97Qt759Q0542sbyctNQ/W/cd2Ylp7+tcKXb+zcnlr/t4wXNb/1Mi6n
Pj91HOufv7Qib/r4qJz6zk/JC1t3yKkdY/KWL9rm/3p63dLXz8isq9VyMI9b
9IzNyPz0uAwN9Et/f7+MTMxUUKu9kq45UTURCVmYGpeB/l7p7e2VgeHx2ucP
k62lZPt8IX1lTYZa7XlgTYZbU/2gplbsdzbnb5CxUus1PHhccggiIiKWp3v7
3X6b2X5vGTxgm29VRtPHTsysoWvPAeb10aOrOfPu3tHkmBlyHjOZQ4yM1DJY
9vEQ+zKz8y0W+foUp2qjvaZvXd7xlQ15x1c3k5qXm+lpBRxakFe2D8pL3jso
z3tFug/ZX22X1+5cLXxfu1/YL39h3L8tuSxrfzjzWNeLe2LZ+c11tqznZs5y
y2Fpst/h8c0+RV0yW05mMGtOGtulp91eh61slKHppbLWt3zMtr+WBzL9p1pl
2uF5zgy1Gus7MJMTFnz3uOQQRERELE+tnZ1zXkGXHLJzv22+ZRnuSLXzhg8t
5zzGgSF7Dmkx2ru7FnJzyL6dtloOt8esRg6xLdM+n9NrUM5rrNpor+pdl7dd
uVHQ1is3cy+/uE/+H3t7+uVfkNd/0WX+fJdfvEX+WlvO//o/Y/L6z8Xljf95
QE59jVkn0yanD+Te39S+rspymBlozmSDgfFpiS8tSWxmXDob0+tXTj15Ysao
OTGfX+fAuMSWVmQpNitDnebjOYwfVVMc8kAmL/VKzOEes0PttckhNXhccggi
IiKWZ7Zf1uB++7GMOdnu0C8rN4dk+2V171qw3ZbMKG3p5R+w9svKnTcmO7al
+mXtjqWmlZVDbHlqj9sxljrmkFd8el3e+uUNZ4c23W9L+8b/Oir//F8L0tyz
S553inkcY4f8S4H75Xj5/swYXH/1b/ttt8fl1Jelbjv5wph1/Uy1+Vu0/8sh
Pj0ivT29MmZv866Y9eTO++zzoo3B1Z5Td5IdJ6q/rsdEnI5LzBc4LlGjHFKD
xyWHICIiYnlqderbuuWANgZvpha8aadRN54vh8T29KXbxh2yL5Y9zjG3a0d6
+naZS9e1Z+vUrfMeGE7XPTR0Z2rCS8khg+k6lL7d2XyzeGgkM26XlznkZZ9a
lzd/aUPefIXml9YzvsW4XqwL8ty/TD2nF3xisYT7KY9m7rvtk7n3fc3/l8qT
T3/nPof1Ndc59f9btOnVJZHbfi6amPSmj6cMOXTsmk33O2oemK7KmhaHQx7Q
pjnVaQyn6zRG5isZYbg+j0sOQURExPLUx8tK1Qd0dHRIW1N22s59BfpIGca1
8X+3SVvHduloy46H2z16NDOvfdzeju4dsr0lW6vQvSs7r+tjLtrr1JOZZyR7
Doymjm7p7mixPE65OcRtPOBiVW200z55Qt74xQ15Q1Lz0vz/jV9YT11aXJbT
3rZd/qJ5p5w+aL9tQ176+tRre/LH4w73zeeynPLS1OvxvO7c+77qjNRr9r/e
P5eZ9gaH9X6Ddh/1f+kkZKK/U5qbO2Uq59DEkvQ3l3k8JDNGlDrmkbtPf2Yg
lUO6xhYc7lsrnPLAloy7jltlHtNpl9mKTnRSn8clhyAiImJ5mjmkTUZ2DUvb
Nj2TaOPaJl0+NGxMb8upUzeNyWif/RzdLTK456hlvlR7v012798t3U3WDLRz
l3UMLdfHXD4gHcbxEHPc3tRzUedk1B+/qXtQhnem1mko3S/MbZkHhqzzZV6f
ttSxmwM59TPFqdpoL+5Zl3/5wmbSDQc3Hf5fkpOfk3oOf/f+Q9r0TXndp0fl
/02/Xqf2rdnuV/jy9HPTx6j+olte+bns9H/aYS63QV64Y6XAelqnlcNkenzd
5t5J0YeJXRjvSb9/XbJQxmk+liZ7U/dv7LHUuq/Nj0tz+vkNV3ScoVSc8oA6
j4dZp99pHVe3N13H0jkulZ3lpD6PSw5BRETE8rTXVazKYjwu8aTL5S5zeVHi
i4vGMuzj+zq5mJx3cTEuixWcs1x3NbmsmHoOi7l18F6o2miNF67L6wY25J/S
vm4wmScGNi3TzOnm5avP68vkqae8aLs858wh+ft/0XLWq0bln7T5i7+MyfNf
lM2af/3mHfKs12rLfe2oNKfnt6ybZvY5pK6Xw1ZsPPuYzZ0yMDwsvZ3Z84D3
Tuae/6M4ljLjz6rxabt6e6W3qz37WF3j9Tmfegan8XPt69kqvQMD2hhfjTJe
8bkW6/O45BBEREQsz8rrHzC/qo32ogvW5fT/3pDXft50M3t5+aY0X64uzevZ
y1ece6U8w3J8KV1j/s4b5dUO8xd/+Rt54Zvs57VvkL94+7htuVmb0+tprKv2
HNT1clmZ18bHashmh4HJSvtNLclYb3vO8+scmJBKKr/LIyFjnS71LlsxGeq0
jy/cKuPz1RjQqz6PSw5BRETE8jTru5vKrn/A/Ko22gs+tiFNl20ks8hm8jKt
8f9G+jKfa/LKTx+W0z5+WF7ac1Re9V+5t7+q7/6Cvnpn7rJf3Xe3vHyH8qi8
8rNrzo//39q6Zqan/jefT2VsyVIsJrGkCwsxWcvZHb9lvIaFTDjsxk+sxJPL
jRvLXspdsG9YiS3IQg2ef2WPWxzkEERERCzXVdWPKr5YVB8qLF3VRjv5o+vy
j8kc8OrP2d2wXZbhJT/N2e/v5N+cd39Zy//HnRvGujuvf8qasjZd1PPrdahL
DwU+f/7kEERERER/qtpoz+3akFddqtx0d2e5lytyWs9Recmn7pbTdiR1uHxJ
z93yss+WuXz7eu/czFn32pKQuDpekq5bclId81ipb9FHHfH38yeHICIiIvpT
1Ub7+/M25BX9mzm+/L9Sl69Mq6776dJpnV/Rn8h5DhBdyCGIiIiI/lS10Z59
bqq9bvqy/0wk3TTMTvOnqfXT1zeRvp6dBtGFHIKIiIjoTx955BF5zvYTctpn
E4YvTXvaZzcz0/zuSx2vZ9cfosnW1pYcOHDA2Ma9/pwhIiIiotW1tTV57Scf
klM+vSkvuSSR8rOJ7P8hEKLJQw89JHfccYexjXv9OUNERETEXM//ygPy/As3
5R+SbfZ/6AufEE1+9atfyZ133un55wsRERERnd1z4AF5dtembNuxKS/+TMLi
qb2JnGl+1FxPdWlq3gbRY2lpSW677Ta57777PP98ISIiIqKzDy8/Ihddda/8
/fmb8sJPJrNIX7Idb2vTK0+5eNNXl/p6nWKbforpxdSpRw2VQQ4ePChzc3Ny
/Phxzz9fiIiIiOhu7N4H5eJvxeTvPrIpz/v4pmz7VKptr/KI2aY3//fLpfl/
PtU8EH4ef/xxWVxclPn5edm/f79RF6Kue/25QkRERMT8njhxQn6TzCIjP45J
5+XH5BUXPCh//oE1+ZsPb8rfbt/07WUx/uM5ew0nJydD6dDQkKHX6+GVe/fu
lX379snU1JTRF0vVhagMQn06IiIiYjBUWUT1afn1PXGZOXxMpn6xIJO3/jrw
jvxgr+GRI0dC6Y9//GNDr9fDK1XuOHr0qNxzzz3G+dvVOFlkEERERMTgqdpw
6pwLy8vL8vDDDxuqtl1QjcVihmofeRhV7W+l1+vhhSo3K9X7rM5XuLq6Kuvr
655/hhARERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
EREREREREREREREREREREREr9ec//zkiIiIiImJJkkMQEREREbHeViuHAAAA
AAAAFIIcAgAAAAAA9YYcAgAAAAAA9YYcAgAAAAAA9YYcAgAAAAAA9YYcAgAA
AAAA9YYcAgAAAAAA9YYcAgAAAAAA9YYcAgAAAAAA9YYcAgAAAAAA9YYcAgAA
AAAA9YYcAgAAAAAA9YYcAgAAAAAA9YYcAgAAAAAA9YYcAgAAAAAA9YYcAgAA
AAAA9YYcAgAAAAAA9YYcAgAAAAAA9YYcAgAAAAAA9YYcAgAAAAAA9YYcAgAA
AAAA9YYcAgAAAAAA9YYcAgAAAAAA9YYcAgAAAAAA9YYcAgAAAAAA9YYcAgAA
AAAA9YYcAgAQfh566CEZHx+XT3ziE8bl/Py816sEAAARhxwCABBuVAZR+aOz
szNHcgkAAHgFOQQAILyofGHmDT137Ny50zGTqOnqdpVdAAAAagk5BAAgnKg8
YeYLlSvM/3XM/lpuuUTdpgQAAKg25BAAgHBhZguVJVS+MDHzRb77qeMnZh0J
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
l14q5557rtx6661GW1ZlmXPOOcd47EQiUe7TrRthzSGPP/54Jh+eddZZ8pvf
/MZxPvVel5o9Tb785S8b911dXS35vtddd11mm929e3fJ9/caxswKNur3pZRz
k+gZhgwCABBO+J7PxWk/tep7pes2lmUxWU7tM//a175mzF9qDtm3b58xv7rU
MY+r2Kf7kbDmkKNHjxrvwdjYmNFvzo1KcojKD1/4whdkc3OzrHVU+aW3t1cu
vPDCsu7vJeSQcGB+d7plEnU7GQQAIPxQU+3MzTffbFgspR4LueSSS4z5r7zy
SrnllltKapOq+6rssr6+bpmu2qXqmEhfX1/R6+0VYc0hP/vZz4z3UuWRfFSS
Q6qB6jOmHv/RRx/15PHLhRq28OG2P4cxBwEAwg01Ic7s3btXRkdHDefm5grO
X06WGxkZkSNHjhj/q75ZxbZJVb8flUEuvvhix9vVfm51u5rPz4Q1h5jHqlQN
Rz7y5RA1XoGqL7n66qtlcnIyp2+Xyjgqu5oZQl1XYxUo1LxqmaoG5LbbbpPH
HnvM8fHV7erx1XG5IMGYWeFGfZfaj5F4fb5EAACoDUHp46D2+6s6CNUuU/ub
H3nkkZo9lp5B1P/FYO7HK7e2ppQcovrU5GuHXXbZZcbtKysrZa1LvQh7Djl2
7Fje+dxyiDpOoepK1G0XXHBBph2mppvZ0l4fcsUVVxjzmss0769UudQpa5g5
5Pjx41V65vXDfG5uNQUQXPR9Y+pz7fX5EgEAoDYEpX/DN7/5TXnmM58pDQ0N
GZ/ylKfI5ZdfXvXHWlxcLDmDVON1LCWHqLoVNa9qizphtlH9Po5vWHOImQWW
lpaKmk9/z80+XWrbNvOByhCqFkSf1ymHqOvnn3++kYPU66Lub97PqR79hhtu
CMR24oRTuxSCj55B7PnSD+dwBwCA6hCUmpAf//jH8oQnPEH+9m//1qiJUGOO
qjbac5/7XCOPXHXVVVV7LD2DKIuhWv3aSskhahxYNa9qezphtkn93n8hrDlE
5eZi+sXZc4gaA+0jH/mIdHV15dSfq/HPPvaxj8n27duN/91yiH18gng87rqt
HDhwwLgtiOP3mscfVfY3/4dgU8p3ab5zk5BJAAD8TZDG6D399NONvPGjH/3I
Ml31e1fTTz755Ko8jj2DqOvFUK1+baXWh+Trl2W2y/ze7z9sOUSNjXX48GEj
K3zlK18pOL89h5j7Br7+9a87zq/qidTtsVjMNYfYz4Op6kfUdNVXz47KM6ov
l+q39cADD5T6dD3F/rnze+aG/Oj7xUp9L6txbhIAAKgfQRoH8bTTTnPNGuqY
yEknnVTxY5SbQarZr62UHKJQ+8bd6tTVdNUWzjdmrB8IWw4xc4XKBMWcv8We
Q9R4COq6Or+HExMTE8bt6jiGWw6xn09EbQNuOUShalg++clPBuL4mU5Q+pRC
YSrJIHbUfjW3TOL3fW4AAFEgLL/fqt/KU5/6VHnWs55V1v3VfmvTcjJItccZ
KzWHqGMeqhbZfsxDtUPVdHWOQ78Tthxyxx13GOfjUBlRHbMwUcck1BhW9oyg
jvGp91yNi6W4667/v727i7Xqqt89/vcl3mg0vtV4Z2Kv9Mo7E72wiRdemGrU
Cz3nwnPhCcIBQThoODRQ+MOhIaGhFuHQtB7SphQKQkLooaEBIUQQspGGFiwB
KVAQJEJACITyMk+eQX6bseeec64515qvY34/yQjstddee661955rPHP8xhgn
x+ejJ7H9B/W7kpZD4r8Pg3KI5o3o90U1j20fP/OFch7rO/s5ll0fPGhvEjIJ
ANSvK3NC8li4cKGry1JdSZYPPvjArW/qZ420ljeDSNnrjBXNIYcPH3b31zVy
n10ztzVc2yy0HCIaB5k3b56rdTJa500/E81B99n+Hfr9FM0rtznqSSxrKNOU
kUNUi6XPvfLKKyM956ZY3xLdVHS/pWGl7U3COsAAUJ8uzQkZRGv3au76448/
7vqhWfLkEI2JFMkgVexfkJZDVDej2+M1WOpfLliwYLyOR/uQ2PXytPnrbRNi
DhHLF7belY1z+D8XzfHRXpO63d9nZNmyZe62999/f8Jjat6Hxi2UcTSfvYwc
Ymtz6fi6iBzSXZZB6h7PIpMAQDO6NCckyx/+8Ifo4x//ePTYY4+N7wGYRX1B
9eX9Oiy1YVW172PRHCLqc+rauf9+6q/32nah5hDVWdl8clEW0M9Pt2mcZMuW
LeN549lnn50wj0dfo7W2tG6WfheOHz/uHk9raKnZniRl5BBbt1frr3WRrd9K
37Fb2vJexDrAAFCPUOqxnn76aVeL9ZWvfMXtH92EtryH+jRXRv3XruQPE2oO
sX0MT506NX6baqA0B8P6OtOmTXN7eyTNZ1fdlY2V2H2VI/w91cvIITZ+Fp+3
0hVd2YMVj7Tx/ClkEgCoRlXX7+s2Y8YMl0G0flZTa4xWUY/VZ6HmkL17907K
IUZZUXni7t27Ax9H+VLjH3nuOwzbT/3mzZuVPH7V2tqnxWT+2rpt/3mxNwkA
lCeEa4Y///nPXQb5wQ9+0FifKaT5NW0Rag7RGgH6m9M6vG2mc4NqwMpc31mP
pfkmeg2K7tOu3KW/s6SWtJYXa2Z1Q5cySFxaJmFvEgAYLIT36d///vcug/zw
hz9s9Di6+j7aZqHmkMuXL7vfFc0BsefXJprzvnv3bjcH5ZlnnintcZU7bO0E
a/o47/wT26cxqSXtCxlKvWnI/Os3XT93sjcJAOQXwnu0nsNnPvMZl0OeeOKJ
6Mknn0xs//73vys/jq6/lm0Uag6Rbdu2ufWt/PnqbaF58jqu2bNnl7ZWltbw
0p41qp/UOsXKJKpP09wW/d3k2ddRuU37b2o9vHjTYyZhzaz2CimDxLE3CQCk
C6WGSPNolUEGtSrX+wnltWyjkHOIaP635oJoH8M2uXr1qhsTKfO4bG6+/vXZ
XJn47XGq51IGKTr3yuYV0/9rF39eYsg/F9YBBoDJqCEqD69ldULPIX2itcA0
1yQ+f0tzPjQmovW/stieips2bSr0fZOuSaNZfckgcWQSAAhjTkhT4u8X1GNV
ixwSBu3JqAyStMeNaM8UfV73S3Po0CH3t3bw4EFXK7Zr1y63/+igtfEsh6jv
Z/0/NCeU9RlHxTrAAPqIfvNo4u8XfbymVydySBhUf5a1nrX2LtHnVQ+Wxuas
zJ8/f9Icde1Pn5Zh4tdd+tz3bRoZJBmZBEAfMI9hdEnvF4wrVYccEgbNSdff
ivZWTGJ7Lmat47ty5Up3H811P3r0qJvzpX8XLlzobtfe70nY06cd/GtgZJB0
aesAk0kAdB3zGMrDuFI9yCHtpfEH7Z+Y1WzfEWUG/b1oT/ckttd7Vv/0xIkT
0b59+ybNnde+j1pfWHVdaWtusWZWs2xMigxSTFom0bUvzmcAuoR+c7mszpxx
pWqRQ9pr7ty5qXt5WFu/fr27rzJL1piE/T0l7UWYh42nnD59OvHzNn5JH7h+
1o/mvWc0SZmEdYABdAE1ueVinn99yCHtpTkZ69aty2yaU27mzJmTOk9dt2tN
3mH3bbf9DY8fP574ea4bNMP6zZwry6VzGXuTAOgKO1/RDxsd40r1IoeEQ1lA
+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
b9++SfNNtTeZ5qHqemfSmlvaV+Stt95y10J1HKoP1zXRvGsFqy+j+6t/UwZl
LT2e344cOeKuy+p7xefPGNWi6b7WxxqF8tvmzZvd920jcgjSzJ07N3Xtbmvr
169397Xzjuqx4vR3NGfOHPf5tL+5tksbIyGDAEC7sNd3OYa9zqZrmFl1Wbpd
nx92L0IbT4mvfaPva/sETJkyJTp79qzrf+vjvOv82mMX3X9Z31v1H5rX4tNt
WX0o5SnthaLadp+NByWt+1P0eLZu3Tr+/ereyy0PcgjS6HrCunXrMpvtCWLn
HY2ZJtHf2aBx2K4oukciAKA+1s/NW0eEyYapx/Lp2mPaPHXdrjV5h73Wb/sb
qtbC9957742vsWWPXTSHqJ+u9XbiuWAQPb6+j8ZwfJZDXnzxRVcrYk330+d+
85vfuM8rd2h9HzNqDokfj3KV1gfQ92sbcgjK8tRTT7lrEEl/N7amr/931nV5
9kgEANSLHDK6UWvb9DNQfyA+5qH+sG7XvI80ygBa11f7GCZlFZvnHq+1Up9b
tyuPmKI5ZFiDcohqxZKoRsRqT1RDZsrOIaJry6M8ZlXIISiL7VsUP29p7V6d
d2xN3xCl7ZFIfTIA1IscMpoy5j1qboMeY8eOHRNu18e6fdAamjYfPV7npHkT
ul1ZJM76IH69VtEcogyj8Qq/r645KVo3WPu4a7xE8yz89bo0l0X7N+v7qE5E
X2/jKYNyiLz88suTMkNaDlFW0WPpWHRMqj2LSzseey2GrYerCjkEZfnwww/H
azM1bqp5WNo7VXNGNEbbhzGConsk+ntDAQBGZ+ffPrznlG3UeiyjcQzrD2h+
wrFjx8bnKfjz13Wd0tba9Nn6NlpvU9fx9fXKMKrn0m36ujjLIf7nRp0fou+r
ORx2LPZ/jdfYusOquYrP+7B9TvLkkGeffdbdx+rcJSmH6HXQNV3d7s/fja9j
nHY89looV7UJOQRlUubW34D9repv5plnnknM7KEbtP5v0f1pAQCDkUOGV+Ye
kLrubv1pa/rY7wen5RDROk/+/iFWz3X58uXE77dz5053P//zo+aQefPmuWup
2ptAtEaX7W2ixzbD1mXZngd6bv782XgOsZoz//XT66s6E92u5+5LOh6tddzG
ebrkEFRBa97p/FJ0rleI0sZIyCAAUD47z6KYqtahVz/gzJkzQ1+H19fpWuag
eQ2qQYrv0z5KDtH3s3W//Lmtqv1QfZZykhmUQ5Qf1A+w9vrrr7vvZddsVWfl
83OIvrfm12o8Jt6nUi5SvYnGifx1jJOOx/aob9v6veQQoD5F90gEABRDDhlO
V+fVqAbs3XffdX1xrc3pG3U8ROMv+lhz5jXmYOMicYNySFrTeI++Jr6Gj59D
LB++9NJLid/b1g9T1ss6HuUU1XNp3SyrG2sDcghQv6QxEpvjX/TviPouAHiI
vWWHU2Y9Vt2sHkvzTuJ7G46aQ/Svrc9lTbVaeq/29zoclEN0HJpjbk21Y/64
TZyfQzTX1ubZJLG5//6c/rTjUZ2K1bq1pb9ADgGaNcoYCRkEAB4hhxTX9dfs
7bffdvtiqD7JHxOQsvYx1PiB5ngoH0ybNm281soMOz8kjZ9DbI0wzUdPYvP/
/XqrtONRPZnmoixdurQ162aRQ4D2UPbIu0ciGQQAJlJNkdX0I5+u1mP5NA6i
cQrVHPlGySF6TGWAeA2T+u+2XpWtmVVlDtH8mHju8WkcSJ/31wNKOh49D92m
NX3bhBwCtM+gPRLLWlsRAEJCDimmy/VYcbZPnz8ffpQcYmt5aY3eOK0D6u/T
aHPAtaeHr4wcIpqfoo/ff//9CfdTjZeOQxnMn2OSdDy25payVZuQQ4B2S9oj
0RoZBAAeIYfk1/V6rDj19ePztS2HKEusWrUqsWn+hYnXZdncEN1P+wGqf6/5
4jYfxWj/Q5t3ru9pe72XlUP0nLS2ltbN0nwY7a+ix9QaWkn7qSQdj63bG9+H
vmnkEKAbBo2RAEDfhXR9v2oh1GP5bB/DU6dOjd9mOSSr6etMPIdovENrcNn+
gWozZsxwa1T588z1/7Vr147fz/aLLyuHiOqulKfsODRPRTkpaX+2pOOxeSTx
uS9NI4cA3cP6vwAwmZ0XORdmCzGv7d27d1IOKYvmiqgGSnsAxtfY9Sk3VN3P
1x4iGv/w1+vKczyWyW7evFnp8RVFDgG6K22PRMZIAPQROWSwUNc40TV//ez9
Ois8osyp2i7tt9Im5BAgDEXHSHi/BhAazmsTJb0ONt8wtD6b9uTQ89KcbuvX
4uFc9t27d7u5JZpf3zbkECAsWXskWh0w79UAQhRqH3tY8WtSoc/j37Zt2/ic
iPheIn21ZcsW93rMnj27dWtlCTkECFfaGElodcEAIKHNvR5V/Pxv7wEh1WPF
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
s2bNGv//kiVLoqtXr7r7vPjii5PmcFy8eHGo55Anhyhn6T6a12yUe9auXTv+
/f31mJ566qnxYzW6/j537lyXP2w+jd1f/WI/G1jG0n3scfW95s2b59Z5itNj
2uukuit7bGUYvx7JfjZ1rlvbJqq9s9dcP8s2joWkYYykX+xnXAfqsYDykUOA
6lmf+vLly+O3jZpD1NdW31vXrkVjEepP6z56bFN1XZbmu6jvpzEI5QfdR8/X
WJ9Q4yCWIXTM9nx0zD6rA9JzU37T+UV5wOZR2/xxy3YvvfSSe+6iMRc7hqVL
l0543Lffftvdvnz58vHso4z0wgsvuNs1VmQ0XqPbNHbSVRoX09pqWc3mKsVp
DTe95pozsnDhQpfX9P+uSdojUR+nvVf5626hG+rKIazJBlSDHAJUTzVRug7v
10yNkkNUz2R9Kv86vuqW1E/3a5LKziFZTf1V5Qq/f6v88eyzz06qwTpz5oz7
Gj0vn+UQ5Qyfsotu1+dFOUV9gnitluq9knKIxl50u76vTxlG63wpv9hraY/R
5fV7LY9ltfXr1w98HI2F6L7KI12Vd49Eam66pc65GvxuANUghwDVUX/83Xff
dfMldN3dN+p4iK7r62PVH2n8wcZF4srOIaqNUr2X2nPPPTde56T5FnnWFNaY
iMYttDeFvk6P4UubF23Za8WKFe56vf6vuqw4ZT3lIT+H3Lx5c7zGSLVx8Wav
pY2TKJuoH6/nOmwdW9P081D+zWqac5OHfsf0+uTd66bNNF8kaY9Eu42am+6o
K4fYeoe67gOgXOQQoDpWj6W+tdUOmVFziP5Vn9zvT6lWS9d4/b0Oq67LsnqF
eG2TURbT7XoP1zwWO9aZM2e6f+Nra1kOiWcaPY7lEI336P+qn0qiDOHnEJu3
Mqj565kpnyi36PbQ6zD0u6nnqtc2ieWQkObtZ81tD/3nHQplyqrzgWpprR7L
r6sFUA5yCFAdzUnQfOg5c+ZMqgcqax9DXa/XPu3qz6u+KN63r2PdXo1daFxE
TWMdvldffXU8I+n/Ok9oHSzNP8jKIfE+r59D7Pqkrvkn0fiTn0OstkjfK773
id/876n6NhtXCan/nUbrG+g10s/Gd+rUqfFxsFApdySNkfR9brv+bv74xz9G
//rXv5o+lERV5RCdm95//33XbF6afhf0MVkEKBc5BKiWrjWrDx7vx42SQ/SY
6u/Ha4bUX7Z5AVZjVNf+ITb2o+9vawPrWHWb9pKPzw/R8etzmjviy5NDLMMk
Xb/XOr7x+SFW06W+dhKNl6iPYeNIel3T6r5CpZ+HrTum303lMq3Xq70plS/j
+SRESWMkSfNI+uKb3/xm9B//8R/Rn//856YPJVFVOeSXv/yle95f/vKX3eN/
//vfdx+r/fSnPy31ewF9Rw4Bqmf74vnrwI6SQ1QzlNavfuaZZ1x/0vrxNud6
1P2wB+UQ5QSr37H+u9VDxfOC5oPbmsLxPkSeHOLfT+sX+/exNYLj89Q1FqLb
4/uK2FjOokWLxtcRsH0n42M7odNrafP5relnmrTHSuj6vv7v008/Pd73bmsO
KWsd3fgaaspfX/rSl9x5VE1ZXHWkalrTGkB5yCFA9VQ3FV+ryXKIssSqVasS
2zvvvDN+/3hdls0N0f00/0J5Q2vY2nwUYzVMqv/X97S5xlZvk7TPRpI8+4dY
n9768BqHsH09tm7d6r6njlPHp9op1ZGp/+/Lm0M0ZqF6N30/PW89vrKHfb/4
89L99f3UNEdefW49F70u6mtoPMTYur0hzMsehsbSlCE1v7/vhtkj0fJLVzPL
X/7yl+hjH/tY9IUvfKHVOaSs19nPmTo3PPbYY9GPfvQjd5s+BlAdcghQPdvr
Qv1wYzkkq/lr18ZziPrpWoPL3+dP1+00B8NfH1j/1xiB3c/2Kq8ih4j1DVSL
pTV1lUdsvreajkM11+rfWe21v5dh3hwiygl6DdR/UP7Q19oaOvF6L1EWsbWx
rKmOLD6/XpkmaS4O+i3PGEmda8lWQX93X/3qV6NvfetbLucrhyStP9EGZeUQ
XauJzw/q8s8Q6BJyCFA97QEXzyFl0VwRjUNozz1/L5E4jU3E+9XKJPH9O6pg
ex2qvic+T2RYadfqbU6KslcaHYPmO+iYkvbys4zIeADSJO2RqL5s1/e6+8Uv
fhF96lOfiv7+97+7NTb6kEOM5qDr+on9PDVHX+uK6+eaNvYFYDTkEKB66u/r
fc2vs2qa5mTrPXbUeSNN0TiG+gz+GsVie8qrFm5Y6neo3ittv3HAhDSPROOA
yh2auyVtzyFV7C34q1/9yj3md7/73fH5MWof+chH3LrjAMpFDgGqp+tsVgNl
f29NU02T+kpZYyhtpr3Arf5K9Wvak09786nuS6+zrdlVhMaVdu/e7eajar4/
UIT+tpPW/+3Ce+M//vGP6POf/3z05JNPjt/Wtxxi5+mf/exn0be//W23drfG
cPXv1772NfdahLx+NdAEcghQD813tDka8b1EUJzGQTZs2ODmu/tzPXQtd5gM
IjaWorkmfVsrC+XJGiMpWq9V1ppQg3zve9+LvvjFL7p1r03bc4jVxZVRM6UM
Ynut6tpG/ByinPbpT386+sQnPtGL/YSAupBDgPpo7oLmJZQ1RwIP5+Grb1fG
2laaL68xEX4+KMsoeyTWNedd60Uob7z22mtuTpS1X//61+52jRG2ca5UmTlE
14kGrY/14x//2L0eGnsFUA5yCAAA1Sq6R6JuUz9b96l6jvR3vvOdCXMh0lrb
5mrbaznqmgBWjzUo79n+hqPMPQMwETkEAID65JnbXuceJFqvQmt+x9s3vvEN
1+/+yU9+4j7WmnxJtD+r5lG8++67qa0KZeQQq8fSY/31r391z1n7GCaxvNbH
fT2BqpBDAACoX9YeiW3YvyLv/JAPPvjA3ef111/PbGXnEXu94jTHRbVkWcei
Y5b4/Juvf/3r7jlr7plv3759bs2sJ554otTnAPQdOQQAgGa1cf3fsnOImvJB
WZJyyKD84eeQpHos1Vwpb3zuc59z82N27tzp1s775Cc/GX32s5+N3n777dKO
HwA5BACANknbI7Hu99iy1suKj0+UkUWS5vDHM0hWnZhqyew11n7qvu3bt0eP
P/74+LyYj370o25/ee3tCKBc5BAAANqnjWMkoygzi8THMoo+dp71kC9cuOD2
oG3jWmFAKMghAAC0W5f3SPT5ecHfq6QoP4cUzSB518cCUD1yCAAA3VB0j0R/
/d94/VETlD382qlhs4iei577okWLCo+xpNVjAagfOQQAgO7Js0dinev/5lVG
FrEc8tvf/nb8cfKoa396APmQQwAA6K6sPRLbWn/kZ5Fh5ors2LHDPbenn346
d5apa396APmRQwAACEOX5rZr3SrLIml7JKZZuXLleA7JO55iY0f0VYD2IIcA
ABCWtD0St23b5uZpt8Wf/vSnwhlEfve737nn89prr+W6P/VYQDuRQwAAqMed
O3ei06dPR4cOHYpOnjwZ3bp1q/LvmTZGokzSNsdO/iPa9Obh6D9X/7/ov/zP
/+uaPtbtviLzXvT89XzVkubyA2gOOQQAgOppP8DZs2dPyAMzZsyIdu3aVdsx
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
7KEM8v8BpmWV4A==
     "], {{0, 748}, {802, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVlwdYU8kWgOeWVBJaIAJSQm+iFIEAUkMLXapgIyQhCSXEhKBiZ112BSsq
KljRVRFF1wLIYkNd66LYXctDXVSUdXFdbKh5kwTQdb/33vfm+2buf8+cOXPO
uXPnm7HOKUrORQEACjJsknnTQ+Vy3swUffiSJlVIRFKhgCstFoqEcnYOAoVJ
erABekk8mawAhVqF0mJ5clQYa0JmFov0EBABBijACrB4fIUsNCkpTq099Px7
eX0DqA2Cq25qW//s/6/FQCBU8AFAkiDnCBT8QsgHAcB9+DJ5MQCEXii3nV4s
g0xUx2Ikhw5CtlOzSMtsNedoOU6jk5rMgZwNAJnG48lFAOiq/WKV8EXQju5i
yO5SgUQKuQ1yEF/ME0D+AHlUYWERZD0nyE45X9gR/c1mzrBNHk80zNpYNIUc
LlHICngz/890/O9SWKAcmsMWVppYHp2sjlmdt/yiWDXTIJ+V5iQkQjaEfE0i
0Oir+bFYGZ02qP+Wr+DAnAEmAChNwAuPhWwO2UZakBA3KA/KlURyIcPco6mS
Ym6qdiwqkBclD9pHZwgVESlDzJNr5lLrVCjz00IHbW4UC7lDNltLxakZWj/R
yyWS9ATIupDvKvJTYgd1npWKOQlDOnJlstpn+M0xkCuPTNbqYHaFiqG4MH+x
hJswyHHF4tRo7VhsCp+n8c0Ecp5QMSFuyE+BMDxCGxdWJpSmDfqPVcmKw5IH
9bfJCpIG9bE2YUGUWm4DuUNRkjI0tq8YLjZtvDiQFSelan3DjfJ4MUlaH3AX
EAc4IBywgBLWHFAE8oCko7e5F75peyIBD8iBCAiB26BkaESGpkcK2xRQCn6H
JASK4XFhml4hKIHyj8NSbesGcjW9JZoR+eAx5EIQCwrgu1IzSjo8Wzr4DUok
/5idD30tgFXd9w8ZS29IRowghhOjiZFEZ9wMD8ID8DjYhsDqibNxvyG/PusT
HhM6CQ8J1wldhNtTJWXyrzxngXjQBX2MHIwu58vocAdo1RsPwwOhfWgbZ+Jm
wA0fC2cKxYPh3N5Q+qWvyuGIP+dy0BbFnYJSRlBCKE5fe6Drous9bEWdqS9z
ofUrZzhbnOGer+PgfJE/AXzGfq2JfY8dwM5gJ7BzWBvWDFjYMawFu4gdUfPw
2vhNszaGZkvW+JMP7Uj+MR9vcE511hTuDe497h8G+0CxcEax+mfhFMlmyiUi
cTErFO7WQhZXyh89iuXp7gF3UfXer91aXjE1ezrCPP9ZVhYDQKCRSqVq+yyL
WwLAobkAUPs/yxxVANDhPn52Nl8pL9HKcHVDAFSgB/8UU2AJ9y4nGJEn8AEB
IAREgBiQCFJBJpgC8yyG61QOpoPZYAEoB5VgOVgNasAmsBXsBHvAftAM2sAJ
8DO4AC6D6+AOXCvd4DnoA6/BAIIgJISOMBBTxAqxR1wRT4SNBCERSBySjGQi
2YgIkSJKZDbyDVKJVCE1yBakHvkROYycQM4hncht5AHSg/yJvEcxlIYaoRao
AzoGZaOhaCyaik5GReg0tBRdiC5F16J16G60CT2BXkCvo13oc7QfA5gOxsSs
MTeMjXGwRCwLy8Xk2FysAqvG6rBGrBV+6atYF9aLvcOJOANn4W5wvUbjaTgf
n4bPxRfjNfhOvAk/hV/FH+B9+CcCnWBOcCX4E7iECQQRYTqhnFBN2E44RDgN
/51uwmsikcgkOhJ94b+XScwjziIuJm4g7iUeJ3YSHxH7SSSSKcmVFEhKJPFI
xaRy0jrSbtIx0hVSN+ktWYdsRfYkR5KzyFJyGbmavIt8lHyF/IQ8QNGn2FP8
KYkUAWUmZRllG6WVconSTRmgGlAdqYHUVGoedQF1LbWRepp6l/pKR0fHRsdP
Z7yORGe+zlqdfTpndR7ovKMZ0lxoHNokmpK2lLaDdpx2m/aKTqc70EPoWfRi
+lJ6Pf0k/T79rS5Dd7QuV1egO0+3VrdJ94ruCz2Knr1eqN4UvVK9ar0Depf0
evUp+g76HH2e/lz9Wv3D+jf1+w0YBh4GiQaFBosNdhmcM3hqSDJ0MIwwFBgu
NNxqeNLwEQNj2DI4DD7jG8Y2xmlGtxHRyNGIa5RnVGm0x6jDqM/Y0Hiscbrx
DONa4yPGXUyM6cDkMguYy5j7mTeY70dYjAgdIRyxaETjiCsj3piMNAkxEZpU
mOw1uW7y3pRlGmGab7rCtNn0nhlu5mI23my62Uaz02a9I41GBozkj6wYuX/k
r+aouYt5svks863mF837LSwtoixkFussTlr0WjItQyzzLFdZHrXssWJYBVlJ
rFZZHbN6xjJmhbIKWGtZp1h91ubW0dZK6y3WHdYDNo42aTZlNntt7tlSbdm2
ubarbNtt++ys7OLtZts12P1qT7Fn24vt19ifsX/j4OiQ4fCdQ7PDU0cTR65j
qWOD410nulOw0zSnOqdrzkRntnO+8wbnyy6oi7eL2KXW5ZIr6urjKnHd4No5
ijDKb5R0VN2om240t1C3ErcGtwejmaPjRpeNbh79YozdmKwxK8acGfPJ3du9
wH2b+x0PQ48YjzKPVo8/PV08+Z61nte86F6RXvO8WrxejnUdKxy7cewtb4Z3
vPd33u3eH318feQ+jT49vna+2b7rfW+yjdhJ7MXss34EvzC/eX5tfu/8ffyL
/ff7/xHgFpAfsCvg6TjHccJx28Y9CrQJ5AVuCewKYgVlB20O6gq2DuYF1wU/
DLENEYRsD3kS6hyaF7o79EWYe5g87FDYG44/Zw7neDgWHhVeEd4RYRiRFlET
cT/SJlIU2RDZF+UdNSvqeDQhOjZ6RfRNrgWXz63n9sX4xsyJORVLi02JrYl9
GOcSJ49rjUfjY+JXxt9NsE+QJjQngkRu4srEe0mOSdOSfhpPHJ80vnb842SP
5NnJZ1IYKVNTdqW8Tg1LXZZ6J80pTZnWnq6XPim9Pv1NRnhGVUbXhDET5ky4
kGmWKclsySJlpWdtz+qfGDFx9cTuSd6TyifdmOw4ecbkc1PMphRMOTJVbypv
6oFsQnZG9q7sD7xEXh2vP4ebsz6nj8/hr+E/F4QIVgl6hIHCKuGT3MDcqtyn
okDRSlGPOFhcLe6VcCQ1kpd50Xmb8t7kJ+bvyFcVZBTsLSQXZhcelhpK86Wn
iiyLZhR1ylxl5bKuaf7TVk/rk8fKtysQxWRFS7ERPGRfVDopv1U+KAkqqS15
Oz19+oEZBjOkMy7OdJm5aOaT0sjSH2bhs/iz2mdbz14w+8Gc0Dlb5iJzc+a2
z7Odt3Be9/yo+TsXUBfkL/ilzL2squyvbzK+aV1osXD+wkffRn3bUK5bLi+/
+V3Ad5u+x7+XfN+xyGvRukWfKgQV5yvdK6srPyzmLz6/xGPJ2iWqpblLO5b5
LNu4nLhcuvzGiuAVO6sMqkqrHq2MX9m0irWqYtVfq6euPlc9tnrTGuoa5Zqu
tXFrW9bZrVu+7kONuOZ6bVjt3vXm6xetf7NBsOHKxpCNjZssNlVuer9ZsvnW
lqgtTXUOddVbiVtLtj7elr7tzA/sH+q3m22v3P5xh3RH187knafqfevrd5nv
WtaANigbenZP2n15T/ielka3xi17mXsr94F9yn3Pfsz+8cb+2P3tB9gHGg/a
H1x/iHGooglpmtnU1yxu7mrJbOk8HHO4vTWg9dBPo3/a0WbdVnvE+Miyo9Sj
C4+qjpUe6z8uO957QnTiUfvU9jsnJ5y8dmr8qY7TsafP/hz588kzoWeOnQ08
23bO/9zh8+zzzRd8LjRd9L546BfvXw51+HQ0XfK91HLZ73Jr57jOo1eCr5y4
Gn7152vcaxeuJ1zvvJF249bNSTe7bgluPb1dcPvlryW/DtyZf5dwt+Ke/r3q
++b36/7l/K+9XT5dRx6EP7j4MOXhnUf8R89/U/z2oXvhY/rj6idWT+qfej5t
64nsufxs4rPu57LnA73lvxv8vv6F04uDf4T8cbFvQl/3S/lL1Z+LX5m+2vHX
2L/a+5P6778ufD3wpuKt6dud79jvzrzPeP9kYPoH0oe1H50/tn6K/XRXVahS
yXhynuYogMGK5uYC8OcOeE7IBIBxGZ4fJmrvZpqCaO+TGgL/ibX3N03xAaAR
PtTHcM5xAPbB6gArDVb1ETw1BKBeXsN1sChyvTy1tmjwxkJ4q1K9sgCA1ArA
R7lKNbBBpfq4DTp7G4Dj07R3QnVR30E3e6jpitUB8HX5N+80fno=
       "], "RGB", "XYZ"],
      Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{279.6875, Automatic},
   ImageSizeRaw->{802, 748},
   PlotRange->{{0, 802}, {0, 748}}]}]], "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Image: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{20, 0}, {0, 0}},
 CellChangeTimes->{
  3.7367046498340807`*^9, {3.736882273548814*^9, 3.736882273937325*^9}, {
   3.736882678983438*^9, 3.736882681164237*^9}, {3.740247596219754*^9, 
   3.740247596893981*^9}, 
   3.740247924660233*^9},ExpressionUUID->"32f16ef4-646e-45ed-a15a-\
a912cfc9ecd6"],

Cell["\<\
We created a function that takes in student solutions to arbitrary EIWL \
problems, collects the key components of the solutions, and clusters the \
solutions in order to understand common approaches to solving (or failing to \
solve) each problem.  We performed a truncated principal component analysis \
on the results so we could visualize the locations of these clusters in the \
space of symbol use.\
\>", "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Summary \nof Results: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{5, 0}, {0, 0}},
 CellChangeTimes->{
  3.7368810316239147`*^9, {3.740247950052004*^9, 
   3.740248057755987*^9}},ExpressionUUID->"ba2205bf-d701-4ef5-aa12-\
c7a7f1002441"],

Cell["\<\
We intend to go much deeper into analyzing this data, and data from the \
Wolfram Challenges.  We will explore the graph representation of code to \
generate additional distance metrics for clustering, look at performance of \
users over time and over problems, and generate automated helpful \
suggestions.
\
\>", "TemplateEditableContent",
 CellFrameLabels->{{
    Cell["Future \nwork: ", "TemplateLabel"], None}, {None, None}},
 CellFrameLabelMargins->{{20, 0}, {0, 0}},
 CellChangeTimes->{
  3.736536768881929*^9, {3.7367072121682987`*^9, 3.736707214173369*^9}, {
   3.740248064414377*^9, 3.7402481986995773`*^9}, 3.740253736977137*^9, {
   3.74025377100581*^9, 
   3.7402537787892847`*^9}},ExpressionUUID->"e44105f6-e95a-4d28-9e4d-\
8a40b3d4e596"],

Cell[BoxData[""], "Input",
 CellOpen->False,ExpressionUUID->"4a721f19-623c-47ad-bb58-c6de867557f0"],

Cell[TextData[{
 StyleBox["Note",
  FontWeight->"Bold"],
 ": Everything above this bar is your poster.Make sure it fits on a single \
page. ",
 Cell[BoxData[
  ButtonBox["\<\"Preview Poster\"\>",
   Appearance->Automatic,
   ButtonFunction:>With[{$CellContext`authorInfo = NotebookImport[
        EvaluationNotebook[], "TemplateAuthorInfo"], $CellContext`content = 
      NotebookImport[
        EvaluationNotebook[], "TemplateEditableContent"]}, 
     CreateDocument[
      Notebook[{
        Cell[
         Part[$CellContext`content, 1], "Title", FontColor -> 
         RGBColor[
          0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
         TextAlignment -> Center], 
        Cell[
         TextData[{
           Part[$CellContext`authorInfo, 1], " (", 
           StyleBox["Mentor", Bold], ": ", 
           Part[$CellContext`authorInfo, 2], ")"}], "Text", TextAlignment -> 
         Center], 
        Cell[
         Part[$CellContext`authorInfo, 3], "Text", TextAlignment -> Center], 
        Cell[
         Part[$CellContext`content, 3], TextAlignment -> Center], 
        Cell[
         TextData[
          StyleBox["Goal", FontWeight -> Bold]], "Text"], 
        Cell[
         Part[$CellContext`content, 2], "Text"], 
        Cell[
         TextData[
          StyleBox["Summary of Results", FontWeight -> Bold]], "Text"], 
        Cell[
         Part[$CellContext`content, 4], "Text"], 
        Cell[
         TextData[
          StyleBox["Future Work", FontWeight -> Bold]], "Text"], 
        Cell[
         Part[$CellContext`content, 5], "Text"]}, WindowSize -> {550, 650}, 
       ScreenStyleEnvironment -> "Printout", ShowPageBreaks -> True, 
       PrintingOptions -> {"PaperOrientation" -> "Portrait"}, 
       WindowFrameElements -> {"CloseBox"}]]],
   Evaluator->Automatic,
   Method->"Queued"]],ExpressionUUID->"2f09c4c1-886c-4a07-bdd0-f7e9c2bd843a"]
}], "TemplateDivider",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.7401549957986803`*^9},ExpressionUUID->"3dd6c29c-0c7c-4de9-8e57-\
c12593f67d71"]
}, Open  ]],

Cell[CellGroupData[{

Cell["End of School Presentation Content", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.736188003855814*^9},
 CellTags->
  "PresentationContent",ExpressionUUID->"8e028c0c-7cb5-4cea-9aaf-\
57044e03e425"],

Cell[TextData[{
 Cell["\<\
In addition to the poster content, include other content to present at the 2 \
minute presentation for end of school. Use the buttons below to add more \
sections.\
\>", "Text",ExpressionUUID->"36bb9e60-8d73-47a8-8a18-581b097aa5c4"],
 Cell[BoxData[
  TemplateBox[{ButtonBox["\"Add Header\"", ButtonFunction :> NotebookWrite[
       InputNotebook[], 
       Cell["Section Header", "TemplateEditableHeader"]], Appearance -> 
     Automatic, Evaluator -> Automatic, Method -> "Preemptive"],ButtonBox[
    "\"Add Text\"", ButtonFunction :> NotebookWrite[
       InputNotebook[], {
        Cell[
        "Type text here", "TemplateEditableContent", 
         CellMargins -> {{65, 20}, {10, 10}}, ShowCellBracket -> True]}], 
     Appearance -> Automatic, Evaluator -> Automatic, Method -> "Preemptive"],
    ButtonBox["\"Add Code or Image\"", ButtonFunction :> NotebookWrite[
       InputNotebook[], 
       Cell[
        ExpressionCell[123], "TemplateEditableInput", 
        CellMargins -> {{65, 20}, {10, 10}}, ShowCellBracket -> True]], 
     Appearance -> Automatic, Evaluator -> Automatic, Method -> "Preemptive"]},
   "RowDefault"]],ExpressionUUID->"6fd17dbc-b056-4736-99ad-b691cb8932d7"]
}], "TemplateInstructions",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.738720159560079*^9},ExpressionUUID->"a415c0fc-f692-474a-a3a1-\
95fb4df9ef20"],

Cell[CellGroupData[{

Cell["Viewing principal components of student code submissions", \
"TemplateEditableHeader",
 CellChangeTimes->{{3.740249420347363*^9, 
  3.740249429016268*^9}},ExpressionUUID->"a82eb68b-c55f-495d-ac5a-\
d97167784e73"],

Cell["\<\
Each element of this list represents a principal component or a \
\[OpenCurlyDoubleQuote]Direction\[CloseCurlyDoubleQuote], or \
\[OpenCurlyDoubleQuote]strategy\[CloseCurlyDoubleQuote] that students \
employed in their code.\
\>", "TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.740249637052013*^9, 
  3.740249671486722*^9}},ExpressionUUID->"c93624b0-8e9f-452c-9c74-\
674d9e990fed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<List\>\"", ",", "\"\<Range\>\""}], "}"}], ",", 
   RowBox[{"{", "\"\<List\>\"", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<100\>\"", ",", "\"\<99\>\""}], "}"}], ",", 
   RowBox[{"{", "\"\<ListPlot\>\"", "}"}], ",", 
   RowBox[{"{", "\"\<Join\>\"", "}"}], ",", 
   RowBox[{"{", "\"\<1\>\"", "}"}]}], "}"}]], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{
  3.7402499859192467`*^9},ExpressionUUID->"283ab55b-6478-4daa-8238-\
695cb52adfd3"],

Cell["\<\
Here each row represents how the different symbols contribute to each \
component. \
\>", "TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.740249679310828*^9, 
  3.740249759672906*^9}},ExpressionUUID->"2b7f7107-e4a1-4d04-ac14-\
d2df7d5f2a68"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3T/o+/p56PEv9x7IzdByt2Q9U1oCHpOuXm44JKBwbs7SCkLLiU8utP35
/HqTiyFLPATcKc7kzUscCKYFD8GB4CGGgBdBUAY1RWndQYsHDwpBg0iea3/9
syXZlm3Z0scfSe8XqElPLFl+nufzPXr056P3/+7Nh63/9vLy8k//Y/N/Pvzb
/9d8+/ZvO//7f27+n4/+8Z/+zyf/+K2PP/jH//utT7719q/+7r9v/uFis/yv
zX95b/OfAgAAAAAAAAAAACgSrpcyn05kMtkts4Uj/rN3qkaIP4pEfVUDecxG
abzCQNbrdYblzJ7cuI0gvLIrvif2Yi7T6fR1mVuOrPwrK8XXzzNugR/t99kv
yyFuOWOcJT07HqG/EtuK1fPCvlzPeYyj0BfXXsjs3XfO5gtxvXWWnX5s/Rw9
O3/lE4o16sj2tr3TxZSpe/YvGXJD/FEk6qsayGM26uPlW/2U70tbmrI4Ojjx
Zmn7nFyafStlL9Yy6Zmp67UGs/O9yUHOcQtd6cS20bdOjwvziFt+GGdJT45H
sJRhx0itBbM7Fu9Mb/PYOApkMepKI209oyvW+lJD9ej6eaKeswtl3k+vud3S
kLFDZ1kM4o8iUV/VQB6zeU68sh/fG2Id7YJ1db8vH89N2snf2Op0pdtJ9knN
3kJR3AIZt5Lr59MXncYtH4yzpCfHI3Ckffx9jYY0Gkf/rDk4ufZx9zja9GF9
M/mZRtMQ02gerdsS+1xL8ej6uaKe7+Hbg1i9tWXh7RMVijPtxWLXFe+pe1pN
xB9For6qgTxm87R4hWtZLpepi7fyEn1CZ7o82YQ92PcwhkydzTop21qfuQEo
cIbRb2sNk+fRfUe6zaivWJy5nSfvuNmj1slx2Lm+KI+45YFxlvTceAQyivcX
Zk+s2D1o/sqRYXvXa4zs05q6dxwtx62j74x6hnDtbHqeRtRTnTm/8Oj6eaKe
7xHKpL3PUUOmZwJjDaLzTP1iTtDUGPFHkaivaiCP2egbr9AdH+6taXZnZz9j
D9/tm3F6Dvya6DioKfNzjzF408P3n/Yn+cbNt6JjsoZhXPje626J2+P0rZvn
eG48AmcU6y+GklY1vn/+ossj48gatMXspdxvGjrS2u9Xs392vx5dPx/U810C
W8x9ftoTOXu3o78Q49pncB/ijyJRX9VAHrPRNl5L6e7v/2l05fwVj9h9Z81B
5mOmqC8yzj9/E4vNSX+SZ9zWsc+9tMVZ2Ydjwex90S1xy4G2dfMkT41HKNMr
x/SXPTaOru5bp3F3z/X4+jeinu8S2NE19+5slfapAuur3og/ikR9VQN5zEbX
eNmxc7PD1Pv5fRkY766xdKav/yQMAgm2S3j9qCV+jr3RmZycr14v9s/xNOU4
NPnFzZPe4X69Fxk5m70I7cPxV9a+6La4PU7XunmWp8YjiF1TaY2vzBNyzmPj
6MrOydB45HrPo+vf+C3Uc8Lbt29f5wS8Jn7v4evfrg13NhDTMMRs9cRa7ern
keuRSEf8USTqqxrIYzZaxit2XrbRnl44L+tHx0ybxYw9i/C6btOU3nAm6VNZ
Hc1z0OzIzPZ237eaR+eGzeHJb84nbqHMutHz5e2x+27jVvp1qlzi9jgt6+aJ
nhqPTb0YhxraXSFcWjMZ9rvS6XQ2S1f6w4nYXvr5hcfG0QXr2Di6pyYfXf9G
utezsdmP3/72t0q+a/s9H3744U2fjeJmirUNW+hE191ets+E7ebpiM7XmAXN
AVNPxB9For6qgTxmo2O8Dscem2W8vHQk5Msgdq0lfWmLnbrPq8O58rOL0Zdz
u5BH3JbTaD7g7Xn6w9cE9/VFt8ftcTrWzTM9NR6xvqg7Gkv3Qj23BvMzvUUe
4+ic5HmHwZn5Hopd/3a617PjOPL1r39dyXd99NFH8pvf/Oamz8bvRX6NR2DF
7gnezl+4mysjPq9Hce8MqB/ijyJRX9VAHrPRL16x9/cYp9dpkrbz6u72y2j3
Ze4sZe0HEvgrsaaDxO94aY3ObmvtTKV1PI9xbNneX3duvUfjFrjj6HsaveT8
VnddL8oSt8fpVzfP9cx4JOZROyxN6fRHMp1NZdhNznPYOXkA6fFxdI47ib0H
6I7ncR5dP4sy1PPHH38sv/zlLwv9jm3/tb02dauTuG2qI97L9ua7Wovi1haH
V0DlhvijSNRXNZDHbHSLV/wY7/T47bwgZY6tbX9xeO7izJxz3iw2967ZF2e1
lqU9l8HRceRLoyPHj+o8FLfAju3XmfPOifkebjv4uiduj9Ctbp7tmfE47ovM
/uzk2ZfAnUjzUM/n55m+dxyds1rE37GV/bc+un5WZajn7f1tH3zwQaHf0Wq1
5Be/+MXNn4/Pozk4XEwMxV+vE3MfHuKm4JxNnRB/FIn6qoY65dGddKVpmGKa
lxejacpkef5f4rrFKzruOJ3r4B5u7J1AiWsv6/nhOLFx7hy4vzy872V3vjr5
bMP9cTt9d6tpGtJsGq/naV+XZvz5jubmnzWk2b58nj7vuF2jW908ovTjKHYf
nTk49/7inUVvX8/Zr3WkjqMz1tYwUb/TjPd0Prr+PcpSz1/72tduvsctqz/8
4Q/yl3/5l/LHP/7x5nXC2HXv9iRt9st1dK9yoXOt1w/xR5Gor2qoUx6X0/7m
eK0l7Xb74tIy2zJLOZ7TK16x579TzmlnFX93a/x4br3YXytqyDS1j1jL8PCu
TFPsWAjvj9ta+hfu20tfehfinn/crtGrbh5T+nEU64uMgZ36sdV8X/NG5mdj
0sbRyXcskteuRtkeSHp4/XuVpZ5/+tOfyqefflrItn/yk5/ImzdvMq61jO7f
NUfn50JcRe+BM/pX3s0bLGUy6Em325PRzGEu9KuIP4pEfVUDecxGo3jF7y+7
a77hU/F3McbnrfZm3cM/n144wHGGac8T3B+3lWPJfD5PWRaymA4O65n9iViL
zT+3lumxLCBu12lUN1p4Zjzi76zqSVqb/8izMWnjKLEX09h9qS+NTU+TrXN4
dP3HlKOet3Onv//++5mu6dzqb/7mb+RnP/tZ5vWi65Db+w2Pqy+QcTu6/j12
r8yjczRnSHta2BvYKoP4o0jUVzWQx2y0iVdsHrZL57337GFLGq2BeCm7FHrT
6JmK7Tny2MHOOvb8Qm+WdoUlkFFr/9tbietFW/nF7XjHo+eLBsdfenY3s8Ut
L9rUjSaeGQ93HN3n1p64px8IHWkfttdJvO/3kXF02Mao/a4v231mkvHet0fX
z0NZ6vkrX/mKLBZX+rI7fP7zn5ff//732Vf0on7x9XrizN31gYEn407sXuRr
9x4manS3NPvp94XiHeKPIlFf1UAes9EkXn7s3YrX1gvc5DMI/fFclitfwjB8
nUdrMeknftPJ+d3VPHas9yLd8ULW8fvk/KWMu0b0Ha3x6TnfvOJ28uOyzUeX
JW650qRutPHMeISxd7tuj8OH8009b789lLVnJebubo2cw2oPj6NNv7Cfy+6w
/eFMbGtxei10NpO5fXwO4tH1c1SSev7nf/5n+f73v5/b9rb+8z//U774xS/e
vX5iDpuzyw1zvIduNf4OPAHxR5Gor2ogj9noEK/4vFrd1Gs4++9aySTet1xa
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
aYuzis77Z9/vHXuwv/6reV+k7Ti6JYdRX2T0rbOfcIbmnb11tvpbxK73tyeO
OPtrj2l90TV3j52MtV80besLmZBHvZEfNYizGiWLsy59UWAPD8ch3dkq7VPR
/SRnzhfr4Km/I4idE2+Nc59DLXCi35a9vwhkuL9HKuMxrR07jzC8eu+pJ73Y
sygjZxOF0D6Mt7v6otUs1mfpfR+druPothzG7wFtyvjkGcx1dL9jd55xD26v
v9U8dk2/NXodR4f9v7MvunfsZKv94ulaX8iGPOqN/KhBnNUoW5x16Yvi9x6+
HstuuLOBmIYhZqsn1mp3MGrvzxdnvuagxlN/h28djt/b492Z5aU1k2G/K51O
Z7N0pT+ciO3d943ROfSGTJYZm4P1PHYuYHr7uYDYOYTG1fVCmXWj5+zb43fz
x23isj9XcdMxaRhKEPiyWjoyHSbnN+vOnn3n62VajqMMOQzc2H2gm6UznIn3
7mGd+DWcoZ1xr2+tP28amyuhLe67Dz7aF901djLVvhpa1hcyI496Iz9qEGc1
yhZn/foiU6xt2EInuu72sn3eYHdfTXT+1HzynEznPfV3xPqi7mgsXSP63uOl
NZhnOs4K4/OEGcOMNZucF25gZzhfPozOl4+vHE8up9H8j41O7DgyyNAXxT6b
WLbzQ7saFtwRHcdRlhxurWPPhp1berOsd5PdWH/hUjqHeQmbMo3t6yN90b1j
J2vcVNCxvpAdedQb+VGDOKtRtjjr1xe9m4M2sGL3Lm3i1t89hx3FTc/nPJ75
OxLzfRyWpnT6I5nOpjLsJudn69z6AFLiHUDZrxW58fe/ZLpvNPa9V44nE/M7
N3rJ+UyyXC/yFydzK+/H6WBiaf9+V/3G0e053FnLtH86j+BLvP6cbFfYb6u/
Te/UjuasO74uGO+LMn373WMna9zU0K++cA/yqDfyowZxVqNscda2L9ocCcTP
8fbmu+OUKG5tcTQ8SH3m7zjui8z+7OQYLnAn0XF/45b5EFeHZ+G3S2vkZNqn
1SL+bpZsvzX+ey72cIn5lM+cZ4g983d9npNQ1quVeEtXbGsuo0E32Se1Rtoc
o56j2zi6OYevks+G9aeOrLfvxR4PpJV4f9FmW+Pb6vDW+nNic7qbg9M5H+67
XnT/2MkWN3V0qy/chzzqjfyoQZzVKFuctemLYvfODA7PDoTir9eJOaUPcdPo
HGrcU39H7D66c8d2e4verXNOr2UYq93EvWk3WFvRs3bH9yXdIhojTUl9VO/M
u1tN05Bm03h9L+vr0mwk9sMwGtJsZ+lvVps4RNtoT4qZFcydbHoww9zs/+XF
aJoySZkPWrdxdFsOd+LP4IzOPD+0XAwTz3pNvMv1dGv9hUfvkn3ZxPdQO++W
+Pdu3xfbbDRldHEehMfGTpa4qaRbfeE+5FFv5EcN4qxG2eKsS18UPzZJP+5c
R+df73gHjgpP/R2xvsgY2Kkfi+bbMi7cw7mSQfz9sBmvk6wWyWtX545zL/Oj
+cMuXtdaS7/xkviu25Zetrj788N1o2bmudBus5z2N31P63U8XlpaZltmKX2R
XuPo1hxuxd6t20l/R48f63XMSzWeof58q39H/bxIL/U9RI+NnWxxU0uv+sK9
yKPeyI8axFmNssVZl75o+56Ow/305uj8cxyr6B0gRv/KO+uDpUwGPel2ezKa
OQrncnrm74i/66QnaaeZr97DGS4T9zNtj+syvXEl8e7i7bn/Oyo8fm/clTnH
V44l8/k8ZVnIYjo4xNvsT8RabP65tcxWE5u+6HDNwNT5nJFG4yhDDhP30LUu
vLs09rxm2juOMtdfsJJFav3MZWEtZHB49qglk8VC5rO5LNdnovHg2NntT5a4
qaZRfeEB5FFv5EcN4qxGueKsT18Uv79re7/h8VF98rnosXspEn7ivv7XHnWq
7o2Iz/wd7jh6TqI9cU8/sDmubB+21zl9T6RvSzt2/aXZzXj/z6j9ri/b9V2Z
5/Pei80Ld+na103C6PmigX1mRPqL1/+9O0n/nuW0G8Uk5XhcF9qMo0w5jN5N
9NLspV4jCZxoHm9zePq8Tm71d+TwPlljmN6nPDh2DvKs/QJoU194CHnUG/lR
gzirUaY469QXxd8Jv136M3d3XBF4Mu5EMb1672Hi2P8Jx7LP/B1h7N2u23oZ
zmUdbL89lLVnJebuPn4OPPBmR3NUt2Rm22fPpc+258sTOx/IvG8m9rU1nIlt
LU7Pwc9mMrcv3x3kx94D9nDuLs7THcgoFpOG2ZWp5W5iFkgYBpuYuTI5mh9t
cM+7YVXSZBxlzeG8Z8T2rSuLZTzOoSwXo8QcNsn3vuZbf8euzbvw2NhJyrX2
i6BJfeFB5FFv5EcN4qxGieKsVV+04c16id97urTl6qMqofv0+nzm7/CdcaL+
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
RQAAAADqjr4IAAAAQN3RFwEAAACoO/oiAAAAAHVHXwQAAACg7uiLAAAAANQd
fREAAACAuqMvAgAAAFB3uvdFob+W1XotfhDmtk1cF66XMp9OZDLZLbOFI/6z
dwqVQX1VA3msBvKoN/KjBnFWQ/c469gXBf5KnMVM+h3zdXvbpdm3ctpDXBaK
Neoc4p5cTJm6wbN3EKVGfVUDeawG8qg38qMGcVajHHHWrS+yB+bZmBn0RQqE
Mu8bKTW7XxoydnTq7FEe1Fc1kMdqII96Iz9qEGc1yhPnvPui9957T5bL5d3r
O6MWfdGT+PYginmjLQtv37uH4kx7sXx0xXvqnqKMqK9qII/VQB71Rn7UIM5q
lCnOb968kbdv3+a2vc9+9rPyu9/97rGNhO+eJVovxKAvUiSUSbtx6NmnZwrT
il3L61vP7+lRJtRXNZDHaiCPeiM/ahBnNcoV57//+7+X7373u7lt78///M/F
cZx8NhZYYtIXqRHYh1i/tCdydpYLP+pTUz8DnEN9VQN5rAbyqDfyowZxVqNk
cf7kk0/ke9/7Xm7b+9znPie//vWv89kYfZEygT089Ord2SrtUzJuvavb5kDW
SvcQZUZ9VQN5rAbyqDfyowZxVqNscf7mN78pP/jBD3Lb3he+8AX51a9+lc/G
6IuUid/7OXJ29326s4GYhiFmqyfWate928N31zqNgVbzKkJv1Fc1kMdqII96
Iz9qEGc1yhbnjz76SH70ox/ltr0vf/nLMp1O89kYfZEyUd2aYm3LNnSi656b
pdnbxT+aL3DzOf5A4EbUVzWQx2ogj3ojP2oQZzXKFuevfOUr8uMf/zi37X31
q1+Vn/zkJ/lsjL5ImahujV09bmJvxOu2v3j9XFS3hiz4+4AbUV/VQB6rgTzq
jfyoQZzVKFucv/SlL8nPf/7z3Lb37W9/W374wx/mszH6ImVO6lb86F7PzdKb
7yYQieq2LY4er+BCCVBf1UAeq4E86o38qEGc1ShbnN9//32xbTu37W2fVfrO
d76Tz8boi5Txrej+z4G9b9RD8ddr8f2oQA91awy5zxY3o76qgTxWA3nUG/lR
gzirUaY4/+lPf5LPfOYzm/3Kbw/+5V/+Rb7xjW/kszH6ImVCd3yo2/Yk7b28
axkY+/lC+szLgptRX9VAHquBPOqN/KhBnNUoU5w9z5PPf/7zuW7zP/7jP+SL
X/xiPht7pC8KljIZ9KTb7clo5jDn/FVL6ezv9zRHcvYS5moqjUM+Fpc3R/yR
QH1VA3msBvKoN/KjBnFWozxxns1mr/Mu5G3ba/3+979/fENh9C4oY5DlXj8/
6jv3Peo0rUfF3qLXjN3veTzHfCDjw/uKX2TsXqpE4o9T1Fc1kMdqII96Iz9q
EGc1yhLnXq8n3//+93Pb3t5f//Vfy89+9rPM6/meI5Zlvz7vZNuO2PPonsRG
ayi2s//frM1/X6b3iKEj7Zdk3Jrch3edF/Xr26U/c3cxDjwZd6KavnrvJ/HH
OdRXNZDHaiCPeiM/ahBnNUoS5+21osXiyvWqO4xGI3nz5k3GtXzpN5K/9fLS
TJ/HL3Spzzt5s96VuLfFvvY4GvFHCuqrGshjNZBHvZEfNYizGrrHOQiC17no
/vjHP+ayvbg//OEP8hd/8RcZt528jnZ9aYl9YR6/ed+IfbYhY4dZRG61ssaJ
ueUPtdcaiHvj3InEH2mor2ogj9VAHvVGftQgzmroHOef/vSn8umnn+ayrXO+
9a1vyS9+8YvCtn+LteeK4ziyojTvEIjnOuIuPVluYuh62YNI/JGO+qoG8lgN
5FFv5EcN4qyGnnH+2te+Jr/5zW/y2+CR7f4ahlHY9gEAAADgEf/+7/8uH3zw
QeHfs32PUZG9FwAAAADc6+OPP5Zf/vKXhX/Pv/3bv8mHH35Y+PcAAAAAQBbb
+9u+/vWvK/u+t2/fynQ6VfZ9AAAAAHDN9pmf3/72t8/eDQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAgFL5/1+McOM=
    "], {{0, 200}, {838, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVlwdYU8kWgOeWVBJaIAJSQm+iFIEAUkMLXapgIyQhCSXEhKBiZ112BSsq
KljRVRFF1wLIYkNd66LYXctDXVSUdXFdbKh5kwTQdb/33vfm+2buf8+cOXPO
uXPnm7HOKUrORQEACjJsknnTQ+Vy3swUffiSJlVIRFKhgCstFoqEcnYOAoVJ
erABekk8mawAhVqF0mJ5clQYa0JmFov0EBABBijACrB4fIUsNCkpTq099Px7
eX0DqA2Cq25qW//s/6/FQCBU8AFAkiDnCBT8QsgHAcB9+DJ5MQCEXii3nV4s
g0xUx2Ikhw5CtlOzSMtsNedoOU6jk5rMgZwNAJnG48lFAOiq/WKV8EXQju5i
yO5SgUQKuQ1yEF/ME0D+AHlUYWERZD0nyE45X9gR/c1mzrBNHk80zNpYNIUc
LlHICngz/890/O9SWKAcmsMWVppYHp2sjlmdt/yiWDXTIJ+V5iQkQjaEfE0i
0Oir+bFYGZ02qP+Wr+DAnAEmAChNwAuPhWwO2UZakBA3KA/KlURyIcPco6mS
Ym6qdiwqkBclD9pHZwgVESlDzJNr5lLrVCjz00IHbW4UC7lDNltLxakZWj/R
yyWS9ATIupDvKvJTYgd1npWKOQlDOnJlstpn+M0xkCuPTNbqYHaFiqG4MH+x
hJswyHHF4tRo7VhsCp+n8c0Ecp5QMSFuyE+BMDxCGxdWJpSmDfqPVcmKw5IH
9bfJCpIG9bE2YUGUWm4DuUNRkjI0tq8YLjZtvDiQFSelan3DjfJ4MUlaH3AX
EAc4IBywgBLWHFAE8oCko7e5F75peyIBD8iBCAiB26BkaESGpkcK2xRQCn6H
JASK4XFhml4hKIHyj8NSbesGcjW9JZoR+eAx5EIQCwrgu1IzSjo8Wzr4DUok
/5idD30tgFXd9w8ZS29IRowghhOjiZFEZ9wMD8ID8DjYhsDqibNxvyG/PusT
HhM6CQ8J1wldhNtTJWXyrzxngXjQBX2MHIwu58vocAdo1RsPwwOhfWgbZ+Jm
wA0fC2cKxYPh3N5Q+qWvyuGIP+dy0BbFnYJSRlBCKE5fe6Drous9bEWdqS9z
ofUrZzhbnOGer+PgfJE/AXzGfq2JfY8dwM5gJ7BzWBvWDFjYMawFu4gdUfPw
2vhNszaGZkvW+JMP7Uj+MR9vcE511hTuDe497h8G+0CxcEax+mfhFMlmyiUi
cTErFO7WQhZXyh89iuXp7gF3UfXer91aXjE1ezrCPP9ZVhYDQKCRSqVq+yyL
WwLAobkAUPs/yxxVANDhPn52Nl8pL9HKcHVDAFSgB/8UU2AJ9y4nGJEn8AEB
IAREgBiQCFJBJpgC8yyG61QOpoPZYAEoB5VgOVgNasAmsBXsBHvAftAM2sAJ
8DO4AC6D6+AOXCvd4DnoA6/BAIIgJISOMBBTxAqxR1wRT4SNBCERSBySjGQi
2YgIkSJKZDbyDVKJVCE1yBakHvkROYycQM4hncht5AHSg/yJvEcxlIYaoRao
AzoGZaOhaCyaik5GReg0tBRdiC5F16J16G60CT2BXkCvo13oc7QfA5gOxsSs
MTeMjXGwRCwLy8Xk2FysAqvG6rBGrBV+6atYF9aLvcOJOANn4W5wvUbjaTgf
n4bPxRfjNfhOvAk/hV/FH+B9+CcCnWBOcCX4E7iECQQRYTqhnFBN2E44RDgN
/51uwmsikcgkOhJ94b+XScwjziIuJm4g7iUeJ3YSHxH7SSSSKcmVFEhKJPFI
xaRy0jrSbtIx0hVSN+ktWYdsRfYkR5KzyFJyGbmavIt8lHyF/IQ8QNGn2FP8
KYkUAWUmZRllG6WVconSTRmgGlAdqYHUVGoedQF1LbWRepp6l/pKR0fHRsdP
Z7yORGe+zlqdfTpndR7ovKMZ0lxoHNokmpK2lLaDdpx2m/aKTqc70EPoWfRi
+lJ6Pf0k/T79rS5Dd7QuV1egO0+3VrdJ94ruCz2Knr1eqN4UvVK9ar0Depf0
evUp+g76HH2e/lz9Wv3D+jf1+w0YBh4GiQaFBosNdhmcM3hqSDJ0MIwwFBgu
NNxqeNLwEQNj2DI4DD7jG8Y2xmlGtxHRyNGIa5RnVGm0x6jDqM/Y0Hiscbrx
DONa4yPGXUyM6cDkMguYy5j7mTeY70dYjAgdIRyxaETjiCsj3piMNAkxEZpU
mOw1uW7y3pRlGmGab7rCtNn0nhlu5mI23my62Uaz02a9I41GBozkj6wYuX/k
r+aouYt5svks863mF837LSwtoixkFussTlr0WjItQyzzLFdZHrXssWJYBVlJ
rFZZHbN6xjJmhbIKWGtZp1h91ubW0dZK6y3WHdYDNo42aTZlNntt7tlSbdm2
ubarbNtt++ys7OLtZts12P1qT7Fn24vt19ifsX/j4OiQ4fCdQ7PDU0cTR65j
qWOD410nulOw0zSnOqdrzkRntnO+8wbnyy6oi7eL2KXW5ZIr6urjKnHd4No5
ijDKb5R0VN2om240t1C3ErcGtwejmaPjRpeNbh79YozdmKwxK8acGfPJ3du9
wH2b+x0PQ48YjzKPVo8/PV08+Z61nte86F6RXvO8WrxejnUdKxy7cewtb4Z3
vPd33u3eH318feQ+jT49vna+2b7rfW+yjdhJ7MXss34EvzC/eX5tfu/8ffyL
/ff7/xHgFpAfsCvg6TjHccJx28Y9CrQJ5AVuCewKYgVlB20O6gq2DuYF1wU/
DLENEYRsD3kS6hyaF7o79EWYe5g87FDYG44/Zw7neDgWHhVeEd4RYRiRFlET
cT/SJlIU2RDZF+UdNSvqeDQhOjZ6RfRNrgWXz63n9sX4xsyJORVLi02JrYl9
GOcSJ49rjUfjY+JXxt9NsE+QJjQngkRu4srEe0mOSdOSfhpPHJ80vnb842SP
5NnJZ1IYKVNTdqW8Tg1LXZZ6J80pTZnWnq6XPim9Pv1NRnhGVUbXhDET5ky4
kGmWKclsySJlpWdtz+qfGDFx9cTuSd6TyifdmOw4ecbkc1PMphRMOTJVbypv
6oFsQnZG9q7sD7xEXh2vP4ebsz6nj8/hr+E/F4QIVgl6hIHCKuGT3MDcqtyn
okDRSlGPOFhcLe6VcCQ1kpd50Xmb8t7kJ+bvyFcVZBTsLSQXZhcelhpK86Wn
iiyLZhR1ylxl5bKuaf7TVk/rk8fKtysQxWRFS7ERPGRfVDopv1U+KAkqqS15
Oz19+oEZBjOkMy7OdJm5aOaT0sjSH2bhs/iz2mdbz14w+8Gc0Dlb5iJzc+a2
z7Odt3Be9/yo+TsXUBfkL/ilzL2squyvbzK+aV1osXD+wkffRn3bUK5bLi+/
+V3Ad5u+x7+XfN+xyGvRukWfKgQV5yvdK6srPyzmLz6/xGPJ2iWqpblLO5b5
LNu4nLhcuvzGiuAVO6sMqkqrHq2MX9m0irWqYtVfq6euPlc9tnrTGuoa5Zqu
tXFrW9bZrVu+7kONuOZ6bVjt3vXm6xetf7NBsOHKxpCNjZssNlVuer9ZsvnW
lqgtTXUOddVbiVtLtj7elr7tzA/sH+q3m22v3P5xh3RH187knafqfevrd5nv
WtaANigbenZP2n15T/ielka3xi17mXsr94F9yn3Pfsz+8cb+2P3tB9gHGg/a
H1x/iHGooglpmtnU1yxu7mrJbOk8HHO4vTWg9dBPo3/a0WbdVnvE+Miyo9Sj
C4+qjpUe6z8uO957QnTiUfvU9jsnJ5y8dmr8qY7TsafP/hz588kzoWeOnQ08
23bO/9zh8+zzzRd8LjRd9L546BfvXw51+HQ0XfK91HLZ73Jr57jOo1eCr5y4
Gn7152vcaxeuJ1zvvJF249bNSTe7bgluPb1dcPvlryW/DtyZf5dwt+Ke/r3q
++b36/7l/K+9XT5dRx6EP7j4MOXhnUf8R89/U/z2oXvhY/rj6idWT+qfej5t
64nsufxs4rPu57LnA73lvxv8vv6F04uDf4T8cbFvQl/3S/lL1Z+LX5m+2vHX
2L/a+5P6778ufD3wpuKt6dud79jvzrzPeP9kYPoH0oe1H50/tn6K/XRXVahS
yXhynuYogMGK5uYC8OcOeE7IBIBxGZ4fJmrvZpqCaO+TGgL/ibX3N03xAaAR
PtTHcM5xAPbB6gArDVb1ETw1BKBeXsN1sChyvTy1tmjwxkJ4q1K9sgCA1ArA
R7lKNbBBpfq4DTp7G4Dj07R3QnVR30E3e6jpitUB8HX5N+80fno=
      "], "RGB", "XYZ"], 
    Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{380.3359375, Automatic},
  ImageSizeRaw->{838, 200},
  PlotRange->{{0, 838}, {0, 200}}]], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.740250023282414*^9, 
  3.740250053581923*^9}},ExpressionUUID->"d0e9053b-d531-4448-96a4-\
98286b0c326d"],

Cell["\<\
Then each cluster can be considered as a combination of these \
\[OpenCurlyDoubleQuote]strategies\[CloseCurlyDoubleQuote].  Below, there is \
one row per cluster, and the values reflect their use of the six principal \
components (\[OpenCurlyDoubleQuote]strategies\[CloseCurlyDoubleQuote]).  From \
this you can see that Cluster (row) 3 is much more likely to use strategy 6 \
(include \[OpenCurlyDoubleQuote]1\[CloseCurlyDoubleQuote] in their code).  \
You can also see that Clusters 3 and 4 did not use strategy 4 (ListPlot).\
\>", "TemplateEditableContent",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.740249770345421*^9, 
  3.7402498981435843`*^9}},ExpressionUUID->"26739f8a-acd2-4245-b5eb-\
77569a9a925a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvT/o/N563/ll15A1rGE7p3VlQkClve1UwTgg482tLDAJtuwt4jv3Zp1l
wE1UBCZVJtV002QMZsAwhZHBqLDAoEZg5EIEFKwUalSIRSGoEPGzmn/SkUZH
/440Gs28X1iXn7+fkc6Rzvs85znP+fcr/+qnv63+Lz9+/Pg3/1v2P7/9L//f
1c9//i83/9f/kf0/P/mjf/N//8Ef/f7v/cYf/T+//we///P/81/9r9k//n/Z
9b//wo8f2f/9IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAIAvJo0jCqOI4iR9UYIJ+a5Nhq6TfrkMkxwvoKT/gyjK8h1FMXXJeRJH
9983XHFLLkbJe0qh55BpsM8IO73DJ5JGPpn6mc7n22VYLsWLSrujDjPttOqv
dPXLSZxruKuSeuhwxLzHgUeWadzS1A2yHI+ibxU/zav/PA992oCOWnh61Ega
GsOOp3FAjmXmGrRdn7pXm5g8x8rbAMO0yAuijje/npe37ySq6ZR8x8zvPWfl
4wYDrHLX9x5Dl0PrxBfwbfoTtedl26STabsUNhinTvaQuTrbuZlYrj84TDfj
9EtGbpOSuLBZHX7+SX40eCaJQ3Itg3YbhS7bNV6u1c6eONWYzKNG0j2950um
veE1PyLTSui7ZJx2pEiP+1ZktUoiII2bbjkPdu2zRsj7JRfmgWTeMySFTnbQ
+ozPISX7uOF8T4V0r38E6WVpD9BhbO866I+9uuj6hn9m3kXatdrqvjocI+9J
YJEmS5zfS6SdnG4v+zHMqf/hbUBg8PJcvqrPGkf/onY8In2rctPb6W7TFyOr
qQ2QNbLfJPA1T/t+QVDToU2bVf33VXZGq+865L3H0OXQOvGpfKf+RO15ROet
wtWOuq9LP6Y9J7/L0+CC/cHBuhFtzyZok1KPNswzdnZT3OGz/GjwjLOvt0ny
lHYk9UmTKmlKK5Jl+UnrG92vf0Zik9KrLjHENr9/1KatMfKe4Z7WT+lJq+f+
0975BnGnZO7klrKQ6ORO8S0E0x6ow/52roOuL9nxTndNPtqIfWO8YIgORfPu
m9X7JZIVhVaV+5Tjt8QM5tS/WBtgt+b7donHC2r0L2LHM3/8oFTeV1FJqcSw
1EPNN0h82lXulVZydu+qkq5KzrRhnlZmad+vCGo6NFvLVlqfuLZt6HuPocuh
deIT+U79idrzhM7r8m/VjUbapvwtV1urcl9Mu6pvukgNLtgfFNGNSHs2SZuU
0EktP5MfL/gsPxrU4x7rx1emtech7e7xN0nZkuUxGkxjsg5sH0Ylty4kljik
DtUDo015q1MQBOT7/vMVRDVzYcTznrjHUp63Z5uipHiGaxxufSf1SO87s3U8
YmdffA9pTVaQfwxy9S3zrTQae8aFcNpDdZhG9Zq7X0EYlGx1U+ypMS8rfrxg
sA5F8p56tK6kWcyJzL65sWPibjKZX1AB5tT/BZE2oOgPyKS7WdlzNBFV5x+P
oX8BO+6xcTJ5Rx4zMTdyzyXf5VgZF/FPzPfK2gCbmWeaRm7mtxUxh2ef/rXM
076Lajqmg1zkdX2w8jG5y/fdyqwu6mvE4PceQZeD68QH8o36E7XniXsofqMe
KGBlEruk5WPXMlmV9jEK+Nr1/YAC98TkTSPvDSW4XH9Q0G4JtGdTtElOTd3l
xQs+yo8GzaR39UVWHt+aPP6b2b2zbnPXpuibVa6Xpvkjj/uLmH6XeIGT18tB
4/dCeU/oyMQB97x4XRIP2MNhiaR0Xj9smUR1ZtRmxih2owYHx0t7kA6bcuad
8n7zSjM63MGOl0okP+YIcOMF0+mwNe+ZnVnLKul+/ZM9pu3bVR2ij2NO/bPZ
GNYGOId73lrmsfTOThf9D7bj7LxdznhLxIwTrc9Ptt7er0nZcuaWpm7h+6x2
88d8X96+i2k69Ys+jbTRn2+OmbGohnjoFO/dRZdT1YnF8lX6E7fnRd9rVR8v
D/Rcg83zw6ukdMrztiLjLZe7LtcfFLZbgv2SMduk2C76/xIzd7peb5/kRy+D
n//859e9KWaFjW/NPE/J2Rd66bLehI3pt+mLHVftZ2+70ZT3NDjn+pU2n6Pf
wTA2ss4vvxJbjb77O6XdR4d8mDUvkkZdIqIWMxdsfXaLcR2OPz2dDvvn/YnB
/tACmVP/tfnp0wYw8xUznY1XUt00NNiOM74T/x1T0nMfKKvLvYJm2b0b6f36
jK9q3wU17T7625nvefbr1V74kxKdOHHHIj9jvXcXXU5VJz6Ab9DfCPa8iBdw
fF8mjT52L9CLteVvO866YH9Q1G5N2y/p0SYxcb0fP9bkhsXYf22+PsiP7stl
Hfp/+S//ZYIn87mk99u//dsvTbOWd4kXhAajV856hAp99MXGb/XrZK+UkiS5
XsK2pyXv7Py86jzXbyRxirl3mhHyfjWJDzZF2mPYOXbN56HDGr3QZOZ7qcdr
fDl/BideMJUO++a9DnY+5qfHC+bUf31SfdqAmPZyeTwlvdvRJB1uSbtqaLAd
Z9aJynv+HhmBoRV1xO1TR5JiXuo7zC948KL2XUzTcTFPStpy5xsnXg/feqT3
7qbLaerER/AF+hvDnrP9Rmlzfhovjqxdbve4STwlyYxtK8e3nbu6XH9Q3G5N
2i/p3CYFtGX2ary2e6mTt5d1tvZT/OghuK5Lv/VbvzXJs3n85Cc/ob/7u797
aZq1zBUvSC/1Ir7ujakfyvt7ah0nTQ2LF1y0W91nTSJlvSXD7WiFeua9mHuw
vsW7Ip+M04G0zYY22aVt93Q2nfcZk5oYtiwePrln7EmRZVLULdnhzVJOMcdz
irSF7RwTh5XWens7EeiMftf5esS2eMEkOuybdw4WE4Pnxek/hTn1X0vPeAG7
XlNRynsFSplt3R6Mfudj9tDQcDse5XvQNPnO9oFZF9MnblVayzC8HozOi9p3
MU0X/e28bBKP9muFZDnT08m5fc/SGGvbhMIR3ruzLieoE5/CF+hvHHte2Wdu
tSHDCW7psvvpKYfObYG9kDZ1uf6guN0atV9SpVOblJKhFfsjrk/3M96YdRR1
7eBH+NEC/N7v/R799V//9YQpFFziE5c5DW/BHPEC3r6Y0poMr7tQesULOu6p
uW7bn31A3vN8yhqduGePXC6VzOB97fpYFLZGuc35Td3SN11tbzosylcZbX/T
KdIWtXO5Tc2uU1u7nvq0Yc6d0Znft8cLxtdhr7zzXslj9mOSu/tDS2VO/dfS
d35Bp/O71tR1OWYfDQ2342V/fH2s7EUT+3TclPd67h4vKD9777zN7IIZ+mtD
NF30tx9zP9wjuy/8fW9w9l32Le8ywnt31+X4deJj+AL9jWfPw6L/WXfJO+rc
xLJ+qjrxejZBlusPitut0folT3Rrk3xmvcplblSuk6RrvGChfrQgl/UBv/Eb
vzFpGg9UVaW/+qu/eklarcwRL4itp3PUHpran+3O86b66CsNjPt7yrQ7meSH
0XXOT+jbdKj4icemeSy98363KZUzb1aqRsezTvppT2rpb9OsuXkn2LV69t2e
smfKrHa3vVzZ8h3r/NQp0hazc8xZt6195YTZu+h5LgsbL6ix8BPosE/eOZTO
+n3vcZCxmFP/tfRqAy5nKN3yJa93ZLo+RXFyPW/d1vfls6HUYwdN9NOQkB1n
9si41ROFNpt11h7XnwnVNV7gnZnY29R7TfTl5f21IZpm/O57HsvnE8rPfnfb
uwi/dx9djl0nPogv0N9Y9jxy9UobXL4u6xS6asc/F2fBvPv53Mv1B8Xt1mj9
kgpd2qSEHaeprqfoPL9giX70OPzzf/7PJ18j8D/+x/+gf/JP/gn9z//5PydN
pzOzrEdIKQpDCnyPHNuk414r98E7tqm99ZVe1hNynsXMQ20+e6Rv3uNKzFgh
w6vWv5jOm2JOUNf1GEvlydZk78/GQrfm7f2L8l1Tr6XEL05bxM6x87p454Q9
YPcfUGrG15rnF4yvwz55r6c8nqIe3QHPWB5z6r+WAW1AEnMylPkZxRlJnL2+
2Z8P0ZCAHY/sIyfem/nj6p6Mc7EvSJd4QWix40MTl9MQ5uqv9dL0s99dOvd1
tbv5ssy7tNoKwfceosux6sRH8QX6G8OeBwazH5GyIzfrN/qOSXutcr6dtKH2
biO7Pmaa83jHZLn+4Eh2a5R+SUGnNql0lmHN2H/L2q8l+9Fj8Wd/9mf0s5/9
bNI0/vRP/5R++tOf9r7PO2f9UlkhRWm+5JVC57a9g1neZb/DrO9wUIux0/W5
fXRznP0075TOHum7n0pz3u183bjydHZuTmTmfuxq5nMqmhhDh+y5LUXsO6U4
iihmfK5i/vx48cIp0hbRYXFv8z5GpTn7V40q1zVN7MWOnUormVbSqhSTHluH
XfPOSSirM0x+N2+05ruBpeu/lpHbAO/YfQ8AMQ3V0MWOpzF5tknn04mOxyOd
zga5we2XxfzQx/5TfCKbOTO9sjbobXhVf01I00wsk/n3NI4pipizXZl3aR0z
FXzvsXXZp07MwdL9yzn1J2zPmTZXqhsri306rIs4fuv+KMzerpJmtny5+Vmu
PziB3arSs1/SrU2q7JXx47LnSuYvrhh/ciWVniPLEq3WhTaX6kePyWUeyK/8
yq9MOvb/O7/zO/QXf/EXve/z9V1Wpiqt1+vGS1XWZLyhPe9EzPRVOti5UeMF
pb1EB+y/2pD3Yo6S0nBGV5jvUTp7OTQwhg7Zvi8/LhQVtnjE/canSHu4Dplx
AKl5HKDrOrfqtWUCA+PqsHve69LYK0w+FzRHd+n6r2XkNqD7WRciGuKmLmDH
UzrnflTz/MnQ2pfq2fFd5/y+qH0X03TCnOW94a6DYm3gtOcjjK/Ldz//Zen+
5Zz6E7XnkfWYWyCRzu3rRMVe/Fn77TQUAbt3/WYBc1WX6w9OYLee6N6edW+T
Ito1rHvhX9s8/aX60WPzz/7ZPyPL6jbvYwj/+B//Y/rv//2/T/b83ojY88Sn
835Lmralo+GKjw9mfe58jFSZNh71BLv+RhnQf2nIe6AXZ3RpJqdBYMrhnecX
jINfrDXi7VUeFmuN5V1Lfeylw5HTJgEdsnPC1FPzvh1JSJZpksm5LNuifd52
qXTObJhpmOQzm3KPqsM+eWdJ/dLZPZdYwft5z1Mzp/7r7h/Xp7e7nmk0VENN
iNjx0CjWKjTc6+vM3OHMxz++0/6GVV7Wvotp2mfW2x44E1eNx1nimZ1tndMv
9N7j67Jznfg0vkJ/YmmzZ7jqDbp2D4Wf0RTLdJk57P3OhJ2L5fqDo9utp3fp
1p71bZNC1+b6kqZpkaXv83dWdmeyrezfbZ/5lgv1o0fmP/yH/0D/7t/9u0me
/fd///f0T//pP53k2YNJi3UqTedSP1NdD/2D1nrDGoLYuqajnflp+Ex/pkuf
ubCfTeOldF8/KNHe5OWvfKbIU9qieWfnFEmb/Pw7Fu9U7E/TZS3G0rG2xffe
PvVdy/v6neo+WE5PHY6a9o3OOqxS2je37/63DfmQD/U2c0wdDsl77NCaiWuv
tGWsQZiCOfX/RI824LKe8rLOnzdVPy2d9Sk314e+GhK14xmR51JQ79yU5rzs
OQ6Lc7zXD+n2fm+/P+er2ncS1DQzJ/uyD/zT3e6piMdnPmHrVx/83tRbl6PW
iU/jS/QnknbErDffcucDJHRUi/GApvkFpT3pF6K1xfqDIroZoT27MEmbxNTb
PUdsn+pH98EwjOscgyn48z//c/oX/+JfTPLsrsSBS7btkONcLpccs5jDIqkH
ctzH3+zsv31+u5z1PdY/yvWS38fPbB1ThyVFI932KEoSStOEosCj8668r8u+
Om8njcm95Mm55c/N8lmsf5boYGb/dv/b5f2KcdUsbcYPXF32L3Z8ipP0mnbo
WbRT2bU6cmVt9wh5p/JedbezF2+/SZOI7JPG3K++355ZU1DZq3xnePezagM6
MXvuta576qXDEdIerMNnYmbe4BhzStrOU7wwlg775j3J9wEunm9k36huzoRx
mRfx6UNwM+p/aBuQeOW1kbf9nOPMDqbXveCt8670Tm1jCv00JGrHs/TyvagU
OppuZsOze5OYfMegDTvnpXYcJ8n3wH9c6sEgx7aex2cyH8J05pkHPE/7fkdQ
08U43KUM9uTdbWdQ2aPyUDPPdrT3pn66HLtOLJ1v1Z9Q2qFZer52sjLbxHyK
2KeTxuyV3xgvY/c6nPhcnTFZqj9IQ3Uj3p5N2ia1nKco/N3e2I/uQxAE1zUD
U/Dv//2/pz/+4z+e5NndiHuuW1nx7U3q9aqXsV/tL/Cvur3f+67flpi9RCPn
VD7TqOHa28/ztEXz/vj2bLyNdx3eeW7ryJT2BK69OpxX3VOHommL6PDpWcye
rmOcidF8nmKe6ig67Jf3rueTF9eWuyHj5zCP/gXagDSks1Z/9uDTpRyexlqe
ctJT/6J23D0o7feuNPJq4mS99w+RJt5zopb52vcHQpqurlWqudTac8hHfG/q
qcuR68Sy+Vb9iacdmM/3XvafLO87d7nUlrnazPj6i9dyi7JEf/CW5jDdCPdL
pmyTmHUQTXsufKIf3Yd/+Id/oH/0j/4RxfH4gbk//MM/pP/4H//j6M/tTtKp
r8DapqZ5T2bprFGJTq3r8iIyjluSOW2KJK/pZNeX9+WsUKmHvp7OLcnadeOg
cc/SupybbNdPVBXOO/MWZJ+2tXm4zFsw++wj9CGEdr3NXKn7Wr+9jv46HJ62
sA7ZZzFn74xxRrLz6A8pbXt/iOuwX97jUiy9y1U7hvOBvF7/4m1A6BqkKav6
30sy7c52pzWEg/QvZMdT8owDKbU2XKL1Xuf6U+x+dZ0uZeIzLepzOXP7fkNM
02F5LDW/VrQ3vJe89xBdjlUnls236m+ctGPP5Gsoe391e6L2pvmy9/29DF50
Dv2YLM0fZO4ephuB9mzSNqnHmQ6f5kf35XJGwmUexNj85m/+5vU8xU/iMh/f
dV0KexVTSnEYkOe513s9z8/uf1VrejnzIyDf8+5pB9d5qb3uF857SmHgk5fd
72b5CKPP9ySaSSjIvqfnZ+Vy+aZB/zo/TIfjpL1coMP3YE79D+cylz/w7/px
PQrC6IX7UYjZ8asNv+fbD8Iv6MsNYy67mmRle9XUNX2f4jffJuLBvHXi81im
/sTSvmnIK9unrxLRcv3B4boR7ZfMzff60b/2a79Gf/mXfzn6c3/913+ddF0f
/bkAAAAAAAAAAACYnst+h//5P//n0Z/7q7/6q/Q3f/M3oz8XAAAAAAAAAAAA
0/OTn/yE/tN/+k+jP/eXf/mX6W//9m9Hfy4AAAAAAAAAAACm53d/93evZxmM
zS/90i9d16YAAAAAAAAAAABgefzBH/wB/cmf/Mnoz/3FX/xF+q//9b+O/lwA
AAAAAAAAAABMz7/+1/+a/u2//bejP/cXfuEXyPf90Z8LAAAAAAAAAACA6fnp
T39KP//5z0d/7uV8yP/23/7b6M8FAAAAAAAAAADA9PzsZz+j9Xo9+nMRLwAA
AAAAAAAAAJYL4gUAAAAAAAAAAACogngBAAAAAAAAAAAAqiBeAAAAAAAAAAAA
gCqIFwAAAAAAAAAAAKAK4gUAAAAAAAAAAACogngBAAAAAAAAAAAAqiBeAAAA
AAAAAAAAgCrfFi9I44jCKKI4SV+UYEK+a5Oh66RfLsMkxwso6f4A8h2Tzufz
7dINcoN4cHbi7N2jyxVz3j/Lb/T4TaeLn5ck9Mk2jdt7Z5dpORRE3d/8HUkj
n0z9nJeHYbk0vDRembaYjsZ+71YdMojqSCTvceCRladtkOV4FHU2HSkFnkOm
ccu3Ydrkhz2+mrDteD9eb39j8hwr/4aGaZEXRJ1vF9PevOUvpt3P5OX6o3nt
dpU+dvcT7c/UfJW+RtDHOH5Fmvui72be4C/CX/wkf/Eb4gVJHJJrGbTbKNd8
Xa7Vzp441ZjMo0bSPb3nS6a94TU/IrRps6q/X9kZvXXgnzfFM6RdbR2I7R0n
v7xrRVblQbFvkqZI3HtW6z15rzKao5GSfdxw3kkh3ZvSixJMW0hH4793Fx1e
ENfR8LwngUWazEtbIu3kNL5j5J5JlerzLak7chvzPYLteCPmsb8JWU3fUNbI
bmjIRbU3Z/mLavfTmEd/F+a02890tbufZn+m5vv0NYY+BPOe9Y1C3yXjtCMl
t7PPvuh8wF+Ev/h5/uKnxwucvVL7DeUp7Xnqk1Yte2lFsiw/lelG9+ufEZok
c8v/rqP1qXPcK/FO93zc75f3I8ULZLKZB/m69lxPs/eWV9W6tCH/3YLBXFIy
d3LLd5Do1Fyp50lbSEfjv3dXHYrraHjefbNaBySSFYVW1bbzWN8GRPa+Uvdl
UlWlUvfVUr0psj2C7XgjZrG/iU87paLxlUyKvKrkQyWnxgUQ1d6c5S+q3U9j
Fv1dmdNuP9PV7n6a/Zmar9PXKPoQzHtik1J7j1xvU18O/MWx3hv+4uN6D3/x
0+MF7lGdwZ6HtLvH5yRlS5bHzH9NY7IO65IO3Cf9xnSQi7yuD1Ye00sjl7Yy
q4GgPTuJQ2r1G6x4/kJEvu9zryAM6KTyNRjmdUei7ckidhrQJf63ZrStHt32
vL8BscPUZ2lNVpCXBrn6lvmuGnUojRemLaaj0d+7hw5FdTQ476lHayZ/27NN
xRS47F5jx9hhmczq1PbELd+vM3HdrG7pW8a/VE81sXpR2/FezGF//ROTZvYN
bWYe5UX3O2YMYrW1nu4X0t6c5S+q3Q9knvZ/Xrv9RJ/2/8Psz9R8n77E9SHs
V9Tp+W7T3iFeAH8R/mJ+74f5i58eL7iS3j9SZOWxs8njv7FLZ93mrqfSN6tc
Q9U5VKl/ystY2ug1z2biq9x2/0FEh3ysTSriba331ZN6p1z/K82o/Y1nnDMf
nfPmgZ7fP30MfgxSOq+l/PvVuWc2M8awG7XBEktbTEdjv3d/HQ7XkWDeMzux
llXS/fr5Zx7TH91Z5QaAbXeUQ308zNwWcexTXRoCtuMtmcH+2vs1KVvO3MnU
LfyQ1Y7qus1DtTd7+Qto92N5uf7mtNtVBrT/n2Z/pubb9CWkj/H8ikf6dj4u
/A7xAviL8Bcr+fogf/Er4gUPmHlMc/dVnb3MLUP3oOTaPXMm7Rc2UqrX0B2L
mWOzPrtFPHxQvICZ+yJpNGh2S1YGL4vZjEHiFDZyfa6vk3HhJ3B/M0PaQjoa
+b3H1SE162jqMmPanp1dtv9ePt7Et81pcM6/hbzvXweabMdb8zb2N83a0Lt/
wJuX3USD9t6+/Bu0+/G8Sn9z2u0Ko9tdWrD9mZov1FcdjfqYoG0u1oS8QbwA
/iL8xSof5C8iXjADocGsEarOEYmLuJq05c7bSbwjE++q9/tCk5lHox6vY225
bR1Q79i1eoeBa6/YWJmygPUIiXPI86sZIe9XxRqN7LuO5YWLpS2mozHfe2wd
XmjS0dRllrgHbt0r2lOFbK6bFRRxt/v36Eyj7Xhz3sX+Zl88n3fJmV/QRJP2
3r38m7T78bxIf3PabZYp7O6i7c/UfJm+amnRxxRt8zvFC+Avwl98uvOD/EXE
C15AmlKSxNf9XPVDeR9LzajWzJj2D19WuWsj8Wi/VkiWFdqenFtsi4mJ1c7t
CXRmv401eXedDK53THxNWuud42tpmlAcheTaennv0hXfJr0T7Hyho3urqZ6x
J0WWSVG3ZIe3L+E8YrNDxisnSVtMR6O990g67KOjqcvMYmLs1Th8xOwXeqjb
TO/2I2Y+fEvb08t2vDnvEi+ImD2dOtiyPtp79/Jv0u7H8yL9zWm3c8Zq/z/J
/kzNN+nrQU99TNE2v1O8AP4i/MUqn+QvIl7wujRLl7Qmo/Zwj2LPEXl/20/T
PbJ78N7PjGHfpTpHJfVpw5wxozMaHRovyOvKj8samm5+Jm/vYHVvvOwMWlEK
W3KP/6VuqTxX29u3L95VGa3NEktbTEejvPdIOuyroynLLPWKNX4/5MNT+qW/
S5u8rXngW8fy/sNN79/bdrw5bxEvSEr7te6d5pGCvtp75/Jv0+7H8/L+3Ovt
9pWx2v9Psz9T8y36qnnfrvqYom1+z3gB/EX4i5/nLyJeMDGx9XSuxkNz+7Nd
M7eEqbf3PNqlcz7k53pbepfMH14X8bRqTImtd93n1Hi0GeBn2rvq+WW3S9ns
yQ56zaqZjcKW3NsiZh3U1Zbsbvurs23WWGs6xdIW05H4e4+nw746mqzMUqYe
cMdnmbXxj3yuN7RWVVLqzjRu3Hesr+14c94gXuCxZzl3WIfY34a9afl30u6H
8/L+3Ovt9qjt/6fZn6n5Cn2xGemvjyna5veMF8BfhL/4ef4i4gVTk1IUhhT4
Hjm2Sce9Vi5T9Vgp/+d6m7hHRi+723wa5l3Y80HY832UmrjwkPkF7HydTuc3
Pd48jigMAvJch0z9SJparsdH5/3HKJ5sSfbV2PHJrXn7HoUtWZM7kiMllraY
jkTfe0wd9tXRNGUWFvP1frSdBRrSacM7y1einW4UZ/o1rp/vazvenJnjBaHF
npPcrZ4Os2HvVv59tPvBzNWfe6HdHrf9/zD7MzVfoK8y/fUxRdv81vEC+Ivw
Fz/IX3zHeIF3zt5TVkhRmi95pdC5z96tbzC+dSOkg1rElNZn9qQBZh0RM5af
xjFFUVzEiJh32d/1X5rbctXWZe2RXLrY9SzSSqaVtKJjy96FRT1ZEXc7kK5v
bh2YPG7y9UlTMIaOYruIlexzO5NSHEUUx8U9+TcacZ6vWNrDdSSa9lQ6ZGnS
0fhlFmX1lcnvptv+HXHgZe3VmY7HY3adyLBciq43xsWZuRuj5/7ITbbjzZnR
/kY2q5fyXMe+dLVh71H+w7T7kbyqPzeT3X6F3V20/bmzdP9yTr+gnWZ9TOFP
vVW8AP4i/MUP9hffMV7g67vMXqvXfDVdqrIm4w3teSdiM4/9rDST+UPCnAW6
4Z5ZGDP7ZDz23GT/rc+1bTyHu4g7Xs5QHGOHI2v7iPeJxx+aGENHrC3j17Wo
sLUD9lvnIZb2cB2Jpj2NDp/h6WjcMgtprzD5HCFGy55zvBpih7i2482Zyf6G
1r6kszHmNYnYsNeV//jaXTQv0t9cdvtVdnex9ufO0v3LOf2CTjToYwp/6p3i
BfAX4S9+sr/4jvGCyRCx54lP5/2WNG1LR8MVH6PJyjCPmSnleJXPrLE9cCa+
GPmaF5nMh3iTkCzTJJNzWbZF+9wmqHS2LDINk/yo4W0Sp9ibUz2NsgbG0op4
1+Ht1yT4xRokhXOWSVicryrf1zpx6aUjsbQH60g07Sl0WANfRyOVWerTdlW2
/WO07aa2YsplgP4bbMdbM4P99XXmbKYfEh1b9jfsiogNe0n5T6TdRfMy/c1k
t19kdxdrf6bm0/XVlUZ9jOxP0XvFC+Avwl/8ZH/xq+IFaXEWyGMP0G7EpbUo
1ziU3jCvI7au6Whnfhq+rvFjRlERD/oh76g6fJW4p6L8sz58n1rjHoo5NZ36
/qX9UNu/mX2x3SuNuG556pGW16nx9nqZkiIueVnL9FQapX1aTo0LLHrqSDRt
QR2N997PtOlQVEfCeY8dWktFOa20HvO404hct37QOWLHuuvO5RG1He/Mq+zv
Hee4vv1eummk6x5/wjZs7vIX0e4n80L9zWm3m2ht/z/Z/kzNN+hrBH2M7Vfk
mm48w/51wF+Ev/ip/uInxwviwCXbdshxLpdLjll8e0k9kOM+/mZn/+3zyzd1
af2jXG/53z2hI1PHJUUj3fYoSpLrmaBR4NF5p5aeta+Z71XE8S4xoT1591ha
YB9Le1j0Hdvqu99h7Bw6ay1x2TVCEmkHnbwgouR6JmhEnnUmlalTl7q/iDGv
QC+tn9oZ3v0s2oBOm1XpfRq/aS8djZO2kI7Geu8amnQ4io4E8p4ERuVcGpWM
zE7UxcCNS5y79IBirxxleyI3y3ea5TsOfTIOm1LZP8eKx7Ed78I89vdCQuau
fKaSejDIsa3n8QvDINMpVlmJa2/e8hfT7mcxn/5oXrvdQHP7/1n2Z2q+T18j
6UMk72lM7uV7Ordv62bfuFgrLtHBzP7t/rdL2fSeOzMG8BfhL36ov/i58YKY
dqxGWq8Vf6w79XrV29iv6od/1e0FekuzMrel5lKPfWLYN/qep8iejVA946Tm
12RU/HT+pVLfZZNzEhjblvdZU6vr1lNHo6QtqKNR3ruGZh2Oo6NheY9p3/K9
qldpHV3idKr7mu7V5nkU2/EWzGh/+66HlNj1iILam7X8BbX7Ucynvwdz2m0e
be3/59ifqflOfY2lj6F572vbpW37eoYpgL8o8N41wF98D3/xc+MF5TkkXXTk
NMxlMktnkUp0al1HEpFx3JLMaVMkeU0nu63/HdJJqztnY0V7o14/bTiPeT1K
txgfe6ZK131yI9cgTeWfD7Lenqj26PI3J7RPpXNZcxuu7snr+D79dTRG2mI6
GuO9q3TR4Rg66p/3mI5KXXr86ynWHrl02NS3X5K8Id1t66ONYTvmZj77Wx5v
6HApzxoU0t5s5T+Cdj+Gudv/G3Pa7Tq6tf+fYH+m5pv1NY4+huQ98U6lceC2
a86zY+EvDn/vKvAXm3idvf7ceMH4XOZ3uK5LYS8X6zK3JCDPc6/3ep6f3d+v
0iRRkN3rUXBN36d4IYtR0yS+ngV6ee9L/v0gHGW/xHlJKMjK0vMD8i/lGfT3
t4fpSDxtMR2Jv/dQxHU0U96ZfA+p92PYjk9ieL0ZjpD2UP4fxTLttgjQ3ytZ
nr7G0Md8fsVrgL8If7Frsu/vLyBeAAAAAAAAAAAAgCqIFwAAAAAAAAAAAKAK
4gUAAAAAAAAAAACogngBAAAAAAAAAAAAqiBeAAAAAAAAAAAAgCqIFwAAAAAA
AAAAAKAK4gUAAAAAAAAAAACogngBAAAAAAAAAAAAqiBeAAAAAAAAAAAAgCqI
FwAAAAAAAAAAAKAK4gUAAAAAAAAAAACogngBAAAAAAAAAAAAqiBeAAAAAAAA
AAAAgCqIFwAAAAAAAAAAAKAK4gUAAAAAAAAAAACognhBRhqT51hk6Drp2WWY
FnlBNFt24iii6HLFacc7Ugo9h0zjln/dMMnxQmq/O6WAuc8wbfLDuOWW5Ja3
zlfL88Ag0jiiMPu+cdJVI2OkGZBjmTeNZZdpuxR21uj1CQN1yuZhyHv313kS
99F4lp/XFcNbk0Y+mfqZzufbZVguvdICpHFIjs1o1HK4Gh2zjHvXjRHtaBx4
ZJnGPW2DLMejqKce+3y3OViSrsr3sbowyHb93rZCtGyG3j+Grm7pv76tGps5
9NfJPsVJx6eluR3pXAoCfvE4eS+321d/we/nL9xeY/n647FUuzhG2Q5JW0iX
HdvsLjJ79/aWx3fHCxKyjhpJWV5/1F2yRvaQBlIA/7wp0pd2rXU/MA8k8/Iv
KXSyg9r7IvdMqlR/n6TuyOUkHNu7+rS414oshAxGIclsjGsZtNso+fdd7ewX
pBzReatwy1jdG9TW8g/V6QWR9x6m85j2qz4af1U5vDMp2ccN5/sopHtd/dqB
JD4dNjK3fBTtREHJlI9VxsPqxhh2NAks0mSJ83uJtJMzwXd7NUvT1YOI9K3K
Lcud7k6Yttj9Y+hqvrZqbObSX0BaJ7sgk83zr7L+Tei7ZJx2pEiF9tr9MVG/
WDzvl3Zb4bTbP6Q1GX7zd/8c/fFYql0UL9vhaYvpMjB437t8Ners7dvbZr42
XpCV204pl5W0kkmRV5UyVMmZuOrlWfJO9zrzsMv7xniBe1o/6U1aPbfze6f8
lMjeV+qoTKqqVNoHtbbO9PdzG9oz0BlnX98nkSdvAxM6r8v+orrRSNuU87Pa
WtwnDNXpBZH3Hq7zmHa89mxIG/HxpGTu+G3gQzcnXhBSlMSl9ZPfIZFULcMV
a0/HKOPhdUPUjvpm9X6JZEWhVdX/ODb07QZ9t1eyRF1diOhQ8S1kRc18i7LN
Uw9NfqVg2Qy8fwxdzddWjc2M+ottfny9dHH6/4lNSgc78nzfCH6xYN5zP/iR
vqySttVIWZXfw+RMdfgc/fFYql0UL1shuyioS7v1m98uri/49u1tO98aL/BP
TOxf2ZIdFCWURm5mM4u2vakvNBqJQ2pVSw26Sdxj6bfbs03Rw36nMbnG4dbG
q0eKyjeWNLvVveJv6WVMhLG16ul5bCz7je/73CsIAzqpxfM3uj/WF/pq3GP9
WNXUbWDiHhg9HMqxz9glLbfzMlk1Nn6wTu8Mfm9BnUcBX+O+H1DgMu2epJH3
xjHhqYkdJi4jrckK8gImV98y5aYRfxbJUBI6sv7t1ZYXSopDlw7rm697dMoK
Ey1jobohYkdTr6ztrE4VUxmzb27smJgYz/ca/t1exVJ15bHxUXlHHjPP9Dq2
xpTdsXYcULRsBt4/iq7ma6vGZlb9Mf19eatTEAT1tiIr19qmp86fvJdbU7xg
FL9YKO8xHeVHXiXaW+Uv65611vQ/RX88lmoXxctW0C4K1qkiDiWT7mZtNKft
jmoXJLx/e9uFb40XXLD3a1K2nLnUqVvY29Wuti8zHux4hETyY+yVGy8oa29v
c3KXxE/vxtoa5VA/J9LcFnG0U9vcoAqpd8p9ipVm9LoXtJDe7VBk5XHSqdvA
Qi+rev8w0PPy3j3pcLhOSwx472l1ntJpLeXfxRi/UV4QKZ3zbyGRXvMtbGa8
ZzfyZKNSPEo5cO103Hmd74P2MharGy2pt9nRrC6sZZV0jm49xu/f1QTypvtu
Y7FUXbHrXDhjsJFZjHOtz0++qWjZCN0vqKucGdqqcZlXf5f+/qNvUzfvrisP
bRVjo+3zPYX9YqG8Z/VHbo4H6JvCP+YqcPH647FUu3j9V6GyFW6zBOuUc7h/
15Z537VJv317241vjhc0kxbaHaCPPljMPJf12S3io5x4QRqcc19S2vTrk3t5
7FXmrmO7PD+Pye772FiftMfcGkkjzCyYCDZO+rJ4AUcvjA2u9olEdFpLj/ee
UueBXqxj+/r5M0z51/V9rsRWY/9oOJmNbvGdhtKljEXqRjMj2NHGWMV03200
lqorpj/Ft1Hs87P+W8L725Cymbhs+8bAXthWjcqs+iv3L/rGGutgx0bFupDt
frFY3os+JU8v7qPf1mUcb6n647FUu3jLmEDZits1MV0mxXy/pjhVLQtobzuC
eAGPhA6PuTMTzi8ITWb+kHq8xnRz286JF7DzrernM/Ip4sxKxU9hCQp/9Z6n
LrDrxg5TrZ0CL20DWRsrbc7P8/atx3rXFRlh+W8iOq3PTPf3nkzn7LpQpXvd
+FQSp5iTr1UFUPxKoK1tSpwZ66pbOzX4ud3KWKRuNDGGHWXXSjz5RlN9txFZ
rK6YNbLynr/GPzCKubdHl0lBtGwmLttGXdXesMz+2qz6o/LcJf260CmlJEmu
15D+33jxgna/WCzv7JzEFZ2e/IaIdvf5O5JmdsjuMvXHY7F28Z6vwWU7gl0T
02UR65A2+vVf0vu9Sdpy9wLa264gXsChNGdQHzV2nBPozD5C63x9bFu8wNnL
+T3XsafIJ+N0IG2zoU12ads9nU2n9t6I2WfrwNuwJrKZOWcd7Q0T05Sm+l7g
xkvbwKS0jvrHakOGE9zKN2TqiHJ40puITuuz0v29p9J5EYeQ6OxD5ey6j0e/
xzP2pMgyKeqW7PD2jUTm8vETL/pm69NtFN63DTrstKu+NhuNdoczOUG/FLuX
8fC6wX+nceyo1fQOE323MVmurgqftynWZB+Yef1sv1u0bCYu20Zd1bHQ/tqs
+quk/2NV3W9SImW9JcPt3hMcLV7QwS8WzXvilfc82hwMCu4babBzcQ9d5pQv
VH88lmsXbwwu2xHSFtNlXMTJsktRynvXStnzttm71B4bsoD2tiuIF9RR9gP3
U+w/kfq0Yc640Zm2tz1e8LAFGp24Z6pcLpXMyuEcKbs/qbTJ7csD3zqW9xDt
uFdnbp9+XNaCox81KS9vA8M8tlp7yTuqK3IRndbS470n0Tk77qyOO/90qRRt
8H0eR+qW9nNbbW/lVPirynjnpTDtsHY8kdagUXVvdiuv3mU8rG7wGMOOlrQv
18QqpvhuI7NcXZV9h/XRLv899ulYOU+LFy8YVDYTlm2rrupYaH9tVv1R9/NT
1k3nnzCMEy/o5hePkfens40q19bouEprofrjsVy7WDCobEdIW0yXXc9fXtNT
GGsB7W1XEC94xjszfZuR16XdSJi9tC7zisoLWth4wbNFvse5KmdwrFSNjmed
9NO+ct58df0rs/7sfinrDa1VtXKmyY88D+3mxqNNXz8CDOfFbWDk6hVNla/L
XOznMhfVaQ293nt8nfvnYt9zkT2oPgl2Df/VL0nKZxatdrd9jVh/tf38775p
s9eKNrsj6YZOB628T/amw8LBvmU8rG7wGMGOpswzOGPAU3y3sVm0rpg1/jfb
otBmsyZVrT+Pi40XiKY9Wdl20FUtC+2vzam/C2lg3L+bTLuTSX4YXec+h779
dH77scOapTHiBV39YvG8R6Tv6s84yPXXdW7FQvXHY9F28cqwsh0jbTFdXs6w
vH1Teb0j0/UpihNK4pBsfV8ee1KPpbZ7Ce1tVxAvKBNabAxqTe4Ei03Ydd1K
zT5rzfML4sp4lkKG93xuyXlTnJdbjUdcxsROG95ZohLtdKM4N6fD3g1sfXhn
rX8ML2wDA4PZX0PZkZvZWN8xaV+xcZcx/LKJHUOnFXq/95g6Z+ejTXFO0TJ5
8l+y78SOQW3N25cq/JfxbGq1HVZ2xvOeyt65mHcotZVbvzIeXjfa32eYHS3P
dVCP9eeCjP/dxmfpuorsY2W+a3FJ6p6Mc6GdpnhB37SnKdtuuqplof21OfWX
k17WRtf/yWHWs3Q571s0XtDbLx6c94C2TDx/p7sURT6Zl/GFSpx/c+qgw4Xq
j8ey7eLwsh3NrgnWqYR3fkHMrG2tnJe0hPa2K0uMF3hnjVayQorSfMkrhc49
zkmLbOY87coagbEozem79lOyfMpy6WLHJqSVTCtpVYp32ftiLzfukUaRmetv
xbGTceCRqZ/peDxm14kMy72vv4mLfUc2Ruv8isI29dvX69OZSqcvawMZDUmV
mOmV2M/PjL1elfWMY+k0Z+B7j6JzZk5Zp32WvoSYmVtYjMenFEdR6WygYm3K
iPOPmDKpi7s+sLYPjbaMtfQpY8G6UYeYHY3owPiNlz2ZuOmN/d0m4CN0lcbk
2SadT6er7TmdDXLvZ24Xc2Mfe2+NlPboZdtDV3XM0F8bo92dVX9dKJ1r2L73
jki8YHS/uCHv7P4Yx5r5Xb51KPnH57Z1jJ8WL1iwXRQq21e0WT3rVBXv2L4n
zbu2t11ZYrzA13eZvVev+W66VGVNRsd+WGiVY0B1eh6DrmtoqteW6XB12/s9
zGN5fe1k6hcxjdY+HDsm98ZxsTmYQqdXXtQGRtZjDEwindt/yfzJfM9bpXTe
+Og6Hfm9++ic3Zd40zYP4otg45/rM29FSVSMT4551kzHveiLM2iafeU+ZSxa
N2peRsCOhrRXmPaiLn5RSmrc7zYFn6SrZ1I6531wfn9/UNqj5r2nruqYob82
Rrs7q/46wZ5TMF28YBq/mJf3sBS/5xEz8QulQeO3pD4rXrBcuyhYti9ps/rV
qae7eWfHLKC97coS4wVj4+vMvNJr7GtADUt8Ou+3pGlbOhouPwafhGSZJpmc
y7It2ud7G6h0tiwyDZN8ZuPNQC/OYtJMjrPK2Mn2Pn8ZUyvGxVrP80qcjzkr
ZDGItIFddUrlM7/0hiqRn5lb8X1H1+nIbX8fnbvMXLXjFIuUFotfrGvm7Qcf
Fuu55V3L3Nke+ryknZ+HKW2J123vupazTxmL1o0nhtrR1C/N8bz06dpbr3G/
2zR8jq6e820Uc0+Vah9cNO2R8j5IVzUstr82p/46wK5bf9LQM0PiBaP4xXVw
887MV1f5fUp2j79XjzHMz1LtomjZvqDN6lmnqtjcc5CX0N5249vjBc7xvr+V
dCunYWekVddq/6C13nH/1hpyH1M+1NsDdt6MtMnPYWTxTsW+XU9xyDQi161X
bcTGk7ucxcLa47ZYLxiH1Bn4zfvpNGLWLG65460JHdUivlUaQxXVaZW+7z2i
zkv7DSNcUKKYR3dZP1n93uW9XU91Isjpb0e9k8rox3v+QabBdf68TeOemn3K
WLhuPP10gB2NHVozey2utO5zxcf8blOxZF1FnktBvTNfGrPf13TeRNMWLlsB
XT2nNbStmp/Z9HddCy3R3uT9JiWDiXV3GQ8q4pbd2q/BfrFQ3pmzSFdb7hyr
xC3O5FMOLXsYLFh/PJZpF8XLVsiuCdapy94Gl31neMtf0kBn9quRn+rYEtrb
LnxvvCDJ97t8XOrBIMe2nsf9DYNMp2GGaKmsu9twHm3nKV5g90z8Ia3zveTS
JCL7pDF5USv7nRT7oyjb03U9ZZqmFIc+GYfymXetcwsuT2Pm8Iq8M+ATBy7Z
tkOOc7lccsyiryupB3Lcx9/s7L99vm/XV6ehWdqzSztZFDFaSmOfThqzn6B6
ekp7uE5F33tMnbP74L1v7Hc2KvvB7wzvVhZJQCdmP8vWtZRD7Cgbk7q0xQcz
0+gl9ZSiwC6dXdS8T1vPMh6hbpRS72lHk3yv56L+GFldqJu7Zlzmpz1t9zzW
d5uQheoqzn1ehY6me70vTWLyHYM27Jg9bwxLtGwE7hfV1Wht1Tswi/4SOjLx
pNVlL3bHp/iioTSh0LNop7Ln/sjPewOlMbmX7+vcvrWbffNiDwqJDmb2b/e/
XcrKLx0aL+IXi+fd3DI2U9bI8tkfpE/nIJ+8stPwUfrjsVC7KFq2w9MW02Xi
lffvuJ2tEF/9ycv5CNZ5VyqP2jkdS2hvO/Ct8YLe+whIDeuAUm+yeAF/Blhc
iiPyrkN1DlniVPyB+kvTa2Jgdblg9v5s3d8eDCCmXcN5bc/Xit/XGaDTwNw+
pXHZS0peVbWncuY5DtSp6HuPqnMmDo89OmopnRVQe9WcS1xloB2N3VP5/Lq6
q3U+df8yFq8bTOq97GjXs6CLa1uz4eg4321alqirYiy34VppVHWHx0hb7H5R
XY3YVr0Jc+gvck7l89karr39PH+ur28rMXvBi/rFonmv7qF/S2NFiiI/6Vk5
VL/h5+mPxxLtoljZiqUtpMs0pLPGO2ercikH7nqDJbS3bXxrvIDdm6KrDpqq
n7lj9STRqcsBWhych7/RkuYlbmaftrXnNkmKRiZvD73IpcOm3qeR5A3pXc+2
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
28r+3fb7aV2wTyTiR7+yvf+qeEFarFN57PHZjeqa5B+01hvmfcTWNR3tzE/D
Z/oU1f7CtR+z0ohbDVKPtHzPuOd+UhGruqxJqvZXEjqtC22eqpNfruu6Jdqb
vPcrn0lSzftlHY+k7om37Xsa6MyaG7lh/PVzECqPEj11KJi2qA4pjch16/vL
ERsfrjkzKGLWpW256/sTOuZzsdTS/AJRHQqVGTs3TaqfX+ad1kUZYs74jVfZ
5zvO8V4G0k0D547rAITrhUDaom0LmJ457T0AT7zYroJmluoPsmsoL+dSPd3t
nop+q3rqcBZwf10Objc75mNfN0lVsE8k5C+8WXv/yfGCOHDJth1ynMvlkmMW
fRRJPZDjPv5mZ//dEE/K/P/1j3K95JdL1odh6rCkaKTbHkVJcj13Mwo8Ou/K
+7XtmXk77BzpS+xMO+jkBREl13M3I/Ksc3l/dfnwPPcl0Evncu4M7342akAn
Zp+157VRWd4V5h0v+8o7PsVJes176Fm0U9m1PnJpfXbildcT3fYRjbN70+u+
9NZ5V8rXoLkNS2RweVTopUOxtMV1WOylo2xP5Gb3XnQQhz4Zh/IZg7VzTEKz
tJeLdrKyOsR8itink8bspci0T6PoULDMXGZvhNt5N7evk2bfzj5pTP7Ur93v
bB77fCHJz854XOrBIMe2nscfDCOzgUW8SrxeDE9btG0BL2JOew++nvnsKujE
Av3BBwZ75pWyJ++2ERUF9rHkr9WNkYvpUqTdbKHxPEXBPpGQv/B+7f3nxgvi
nutWVvz5zKnXq17GvpHrr+1Sns4ojcmo1Av+pXL3UyvtLV97PZ87fyFyTuWz
5hquvV2JMKYhnTXefviVSzk8xSc/maHlUaKnDsXSFtQhs+ds06XpHj/f5nO+
L/tBlfenuaVf2tZ2JB2KlVlcitXzrsNYc9AXx4z2ueNZyvklses4xeqFWNqi
bQt4FXPae/DNzGdXQXeW5w8+0vTzfZd4l3qsGwsX06Vou9kIs5agbs8FoT6R
qL/wZu3958YLkk7+OltWTfulmaWzRiU6ta67j8g4bknm1BFJXtPJ5sfAItcg
TeWfRbfenqjtuM7Qrtf5St2T13Rv1t8yDhrnrM/befZNZ4WGl7wr9eeM/pBk
2n3p2eCDy4Ohvw7F0hbSYeTSYVNvKyV5Q7rbbtFjz+RrKUtfzdLnbf00hg7F
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
/hQHL+bfrOk6iybyyTgdSNtsaJNd2nZPZ9P5ivOD5tR/LT3jBXlcKLsUpbxX
pbRSaHswqPGYDCH9itafEfWPPkcn3k7vAKDugpmBXfwMEC94XZqlS1qT4XWv
Eb36aalPG+bcO53pn/eKF4yU99Jz1O+aZ1TYSYXsi5lM3dI3XW1vOizKVxl0
/sWr0u4/zyXMx2hrL3lH3PCRoI59Zv3LZXw4vzsRiReU+3B75/n+PG+yRifu
2UGXSyUz+OzaMKf+a+k7v6DT+bBrqj3iYhQ7PLz+jKp/9Dk68XZ6BwB1F8wM
7OJngHjBxMQWM77EXgrtz3bnefnd+2kJs6fg8xwA1k9t9RRHyrt/Ls5U+Pyz
48qwa5Cv5ZZpUGbt5O62vz5bvv32kHxt2n3jBZGrk9pwxuZlnnX9Y8R0nJ9b
d41vbcv77QrML/DOTP+/do3dfUy68s4rVaPjWSf9tK98D40+eSePOfVfS682
4HL+0y1f8npHputTFCfXc81tfV96j8s6g3K2x7HDQ+vP6PpHn6MTb6d3AFB3
wczALn4GiBdMTUpRGFLge+TYJh33WrkP/uRn1tO1n8aunVb2z+/Ybz3CGHln
5/R+3zkpT3Yy+x7s+PTWvH2RonzX5I605H2KtPvECwKDWbet7MgNI/Idk/Za
5awnaUPVI3eFdFw6t64mTl3aJ657oxTm68WbvlVcGQ9WyPCqfbKYzptinnif
dT1LY0791zKgDUhiToayfnehs/IZBmPY4cH1Zwr9o8/RibfTOwCou2BmYBc/
g3eMF3jnrF8qK6QozZe8Uujs9xDV29jNkA5qMfa0PrePMHbpp6XsmNLVF82+
kSyXLnb/AWkl00pa0bHaWRsz73ERR5Q0s0c68zOGDtlzzIq5FSnFUUQx0w8p
5rA3rOXvyRRpd44XRGYeW5Lq4kqxT4d10Wdm9wEQ03Flzfelv6Zkf18x96/Y
deir7N8kWq2bY1+RfSjdozfswWHn+xcoZPGGb5nvs3pTH27p+q9l5DbAY+IC
j7H6Uezw4Pozjf7fp+18b95O72AxfL7fC74V2MXP4B3jBb6+y+yies1X06Uq
azKWajdjpr/QoR/dpZ8W27uyn9rx2nI7NeJ5Z/dF3SxsHHUMHbJ9B35sJSrG
pGv22x/KFGl3jRdE1mNsVCKdu3c7eya9Qs79E4rpOKJdw/xt/rXlvnto7Uu/
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
90yqVP/dJHVHboMOhrbfsb3rVX71ehS1ixHpW5Wb3k53G75aTGZTvcvS3Bte
84cHHZivXoAxmLP8BNMe7O+N4a8NaVfHahfFvtulPVE47ckPaU2G36/Mu/Yl
x+TT4wXOvl5b8gx+UuKd7mV7z4e8ry1j36z6DBLJikKrat08NsQMEpfWT5qU
SKrqdVWTh9jm958afZWYdrz60KtefhspmTt+v+ChgVOTgzqErD+yU8rpSCuZ
FHlVSVslh2fKQrNVK9L6xLVlQvVzsE4L3NP6Ob+rZz9/79Q8QKSOfQmz2N8x
dJ3YpNRqqTn2dL+Zzuty3VU3Gmmb8rdYba2GRwzR1qfZ35nsYkZk7yvfXiZV
VSr9YLVWCyLtd/94QY0ehexiRIdK3ZEVNas7ZZuoHmp0k/qkVfUnrUiW5af4
wUb3hxYNmLFegDGYs/wE0xbx94T9taHt6hjtoth3y/t+j28kq6RtNVJKcQyZ
zI5TH7v2Jcfm0+MF7rE+Tv7yeEHikFrNR10/IvVKfuL2bDNzY1JyjR3T9vL0
ldCRbfOVLdnMHNw4dOmwvvnOR6fmAYyvLG91CoKAfN9/vrJnVkfooqDmd/kV
UOAy9UbSyPvysdcLscP4ptKarODRicnKW98ymtGoYaS7N/5JrWikUGMauVmf
q/AR6/s2MR3kQmfrg5XHdi/3b5m/bfT6nAvVTwGdXm93j6U0L3Utyl8gzura
4ebjq0d6riWCdexLmMP+iuua6u313ea2xQsS91D8Xj2U5wDELmmr4lnWyPb7
k+zvXHaxGqvZ6sx4eHoZe2f8U/VUHs8Sbb+z5/PLz6cgDOiksna1pt8tYBc9
Nn4q78hj5rlex8eYdzs+jaeFtLtrW8o0a3nMy2X21DqwsVmV3DfW3jszW70A
ozBn+YmlLejvCftrw9tV0XZR9Lsd828j0d4q/8I9a+3+SOlDdOxLTsCnxwuu
pPfCj6w8vvXaeAEbs5dIfoxf8so4y+daVknnzE/xGH94V+NwlvpByqGmr3Mj
5q0TyvT4qNe146qDSem0fvjqKzLQmNHlm5zzbyJRnZm1mTHaXfvgZi/s/ZqU
LWcOWeoWdmm1e9JR6hc2Vtroz/fHzBhtkz0bWj+FdFruk+1tTi1J4tpvI1zH
vokZ7K+Irks/fTwvH1tojxcUvsWqPp4b6HmfcVeju+m0tST7O59dZH1D5VA/
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
9qYoK5vTALP/jvd9H+m3YOaLqfs+H96v/HnbJWhrwb7vzK++BS02XNnC+isY
3/ftyJ8s08nt+dnysoOT2xHeW1p2cn/hFsMX7J1ImH0Ty/3Lxqq++93vwi9+
8YvRn/uFL3wB/vznP4/+3CGwdqt1XTwywe2bGt8fLMii/a1v6rbpt53A0iu9
GNrzar4RtM/oRa/fhY27SfiYbLyY4gVDycDusINTctyqLbImL8d4HcLqQbVm
FMm8f/VrBH4T0QBpR/q3U42rcG5ODy3z92PHvl1nHmC/a/d6T4rZIEGPoTxY
23OTjdxe7wWHPqoYunK33sP5Lbj5Ytq+z4h3LH/tZFWslLuex/orON/3zcif
LBPKbTftsoOS2xHeW1p2mDiIeE5l9SJfB73oFoNvf/vb8Ktf/Wr0537lK18p
80NOCfudxi6/t2RwOp3K65E6Usm01iIXUXXOVd814nGVv3qNs2WXfp+y7p6z
cq+s9nexvuSwuf0uTtzjhSheMB0nJiYr2Hc/GbHDnPfi7a2Wl2O8DmH1gN1T
uQDrbg9ZUu07N9zWdyEuPClecDpW+/kNoYFr80sfOPadOvMA+83AfpfUZnwe
AT+G8uBsT1qdY1XWwv2+p0Dsm6L8FtR8MXHfZ8R7lr92TtWecV6sFO2v4Hzf
tyJ/skwptz161yI7OLkd472lZYfJe6Buj8I/i5zqHOPOn5Un35uvfvWr8Otf
/3r0537961+H3/zmN6M/dwi18ywLDRY3P+0cn9KWa3D88bUl8Ta3dkxRYo/E
Y/bmNGW3fo5Ha+S6VvJ3WZsOiNOMMnpRPn8FzjE6yzybT0Qz++33onjBdDC2
aGmd86OFngPmxoDVapVfBmzMPRwH1JqRJivsZ1rWvbDNeg5cw+FZeHk5xutQ
AU4P2LmpuFZ5X6PLubQDk1fHfJf7HiV4UryAtfvXeTlwtqCpKmj6Grz4PIZt
+15HG/vBOlO2Ppr9zrITpEkMvmfXayYsxD7ZHBhjDGXB2Z5qvfNBu6zjTgFs
lxqoam7vrON5HGt7ROo9R/ktqPli4r7PiPcsf+2dY/dV2/frKLS/gvN934r8
yTKl3HbSKjs4uR3jveVlp/p+cOs7B8+s8ju86t6XL3/5y/CHP/xh9Of+8Ic/
hF/+8pejP3cIKWN3267lThwTkiFjc2srq5usXgkPu3oezruzOOx5mLZrCWJ3
Na70j3epm/75sSleMB3M/GvsLDBaxlTfuo+LoYtqXhR15YTF2eTlGK9DV3B6
cJenunGtnalrxr4QT48XXL7PZX5Ndhfrc9uVXdK4dgk99lI6cwVvv0W1KYpa
jHM3w2ONoQw421Otd67fmvwdOw6X3NqsLjT2k6P8FtR8MXHfZ8R7lj8x9Tjm
lpdbGe2v4HzftyJ/skwpt+10yQ5Obsd4b3nZqb/bctfIXZSGsGvUFX3VeMHn
P/95OB7H150iJ8JPfvKT0Z87hCxyLjKjwsZyIYyTcm9JHHp3dWF3o9YWYc7p
XC5tuYKlrjfqcfHs/fl+d3OWa3W5AdcPIUlPZR1zz97W5wp9x/X9Et8W1u4t
rmKfa+83pnjBZNRinoztXG12YDs2mEY9/zw3Z/UoHTk04q3XS4Pt3hPEVDFy
jNWhMzg9SMDeiOrpFpcC+zf8rWJ0nh4vuNibU71O0mJzzmHI2iVefST02Evp
zKX1Eey3t2nWsbro0WoLXjTv/ZDjjKEsGNvD+L0XGa/Xh1Pv/d6GLmD8Ftx8
MW3f58R7lj8RwZ6pay84I473V3C+71uRP1mmlVsx3bKDk9sx3hslO0we4bNO
arBaLUHX+fUdXzFe8L///Q/+7//+D9J0fIH53e9+Bx999NHozx1MVpx74v/T
kdkfMn5NtBislagWqAIb26nqi4jyzIry3afMXjRODu3IYWqHaBvwc7kPjy5s
G7a6iF33MpkUL5iM5vyrbZw7WTkF+2pdooxc2+lGBkkcQxQGcPRc2G2N+lpI
ELcq+ycpx1gdwulBBGvGN9vYPiRJCK61Bb3hs62s+Z4DnxVTxQtyyWTj/2v3
rCGVXVpC/TjhWGMvpzNj2e8sTSCOIgj8I7j2Dgy9Hj/YzfgcDX4Mscjannu/
t5YvPv/bsueMLnDrWkr6Lbj5Ytq+z4l3L3/N3hzYb6/idx3LX5H3GeBNyJ8s
08vtPf1kBye3o703QnYSbyf4PvABFH0Lzr6a118xXlDUl/zc5z73kGf/61//
gi996UtS9wb73K9SNdC09ktdaLAflNu1Qa2+x2PyfqRRkPtqe9jtdvllgXPw
L2ev0ipn1soZvI882AnOwiTuTWYVnj+ahrfat+XFO4PWhOIFUowix8z+Pq1l
3+Bh3V6j7THEYOrVd5DlfvjefKEcM0jpEFIPDkweXt66KjyYtXjyXlS/jqh4
VryAOUdQ1UXKIE2SWg2vm11S63kAHjv2HTrzCPvNtn6o8kJ9+LCCYKZiix3D
0fox2PYw53CZPmVpCkmSVntKGF0YXPetzW9BzRcT930kxph3Sf4qEo+1GQuw
2w5CPcFf6eMzCHmC/E3JXOT2Sn/ZwcntU967j+xkKQSeC3vLKnXW2jvgR8ml
j1WeYvsF/UXHccp8h4+iiEX8+9//HnxfaG9ye67DcrlsvXRtCQ4mXlDL1/lc
28HWGl1I+M4n3+TazORwjWEpYAtzZydVLtIPGr9eaK0xihfIMIoc98y9Grvr
aX7jtFrfLCTqBIjkuA9tOoTTg7jmi4lImblQaxkb4sKT4gXs+V9xDCup/JPa
97knjH2LzjzEfjeofPXh9RWeBW4Mn9A/oe05MXXAVyDqOXtWdvi3pha/BTVf
TNz3kRhj3iX5OxMf6vsFOvckPcFfwfgMU/r8z2BOcjtMdnBy+5z3xshOBvvb
fodnftMbj/V6DT//+c8f9vzvfOc78Pvf//5hz0fDnnHRxPupz38bwn67BsNY
w87x0XnlXKP6RmRKnKPymFxW7P1szQ67RaCrWqc9ZJfiBRMSVnWTlDWI3Pve
59FGluNi7XP71qoNj9mK5LgPbTqE0wNmP7ouXjOyOXVmXct+LmDsyCC5DWHF
2HXuiiCuzhuqG3Zv4RPGvkVnHmK/GxyMan/DfGt7YMaQwxPn75A5q2sKNvs6
q6oWN3dPdRutfgtuvpi273OC5C+0mXNR5V6rPoM9sr/CAeMzvI78yTIPuZWR
HZzcjvzePDCyEzvVWYUXlbtib8Hh8LgzPMV+jI8//vhhz2+lPOekwNYVxZoy
cBib2/6NP73LVb20O/ZeZwn4Pt9aJmzcjVPXozgnU5x3EW1ZySKbOSej1mr0
JsxZoXVLva7dbU+s3v19KqtqmLTFjEVUvm1bPWFCRGBV+++W++D+D/K1y/Im
D+LY7GA5Tg/luBt78ZiHtiHUIYwcn/9AXodwesDUx2mpO8eer9NMymHQibQd
GW5/q2/oxdnFpgydwFpWa2artikfOfZIncHa79KXXhggdM+yAIxFpXNz/s4h
P4ZNnjt/s2dKijoWdz33rSpepFuNXNp4vwU1X0zc9znxLuXvwnG3vKz5z3Zi
37uYFk7+UD7DG5M/WSaVW0DIDlJuUe89guwkgQ/8NMIxbLXqN9y+4EfTIu9j
URvhv//978Pa+M9//gNf/OIXH9oGn9yfYsZnUeRZPYaQnrKyHnUcHGCjs/ln
c7+pLfxVs2/94gvXXBva2irPr2RZBmkcgmOuas9pxkdPQf28zzlPZ1reX+SI
Pew3tbOzd3Gy2K3l3DCsAySMDGdpCJbB5NHh6F0a+eB5x7JuxvHow9Gt5idF
N+HoX//Ny/87rN+fpeAX//94/hs//1vztg9HAdPN/9/l34o2QlEhXaKCPTdV
2GzTzce0+N0ySCKvVrOoNXfRIDnOdYh5rqIZYHtB3u6p1KEkCmDfyB+/ZfaH
oeUYoUMlSD1w18y/qQYcQtZAZHc1rayAAmFNUHaEZbD9hbt8xRsnuNRvjsBa
Mef/OecY5ccepzMlCLll9+kWttYwbQhyvTkVOndKIDjs6zUX8nef9X5cxBjW
eOL8faX6DpZf2haCyzwXNXJi1fd3jOS3IOeLSfs+J96d/JUvd6tPcJMR04Gj
dwDXdeuX4+RjzIlpSsofzmd4g/Iny2Ryi5cdebnFvDdedtLb9wMNdq5fynt2
SiE8OrBicyS/6N6C3/72t/DjH//44e18//vfhz/+8Y8Pb6dJcrTqtVdarq3X
cYgzC4bpzan6jtZ2GTYv9hrD3hDlxW1cmsnd7xW567u/LfL/qAul8f91zvmA
FDYtdbzur0XtG1XfGqbXS3mDOWofQcrGVkWXvmv3/wfKcRo6veS49GuauY2w
cozRoQs4PajnyC8vZQGapt6Ng2a+ze8UOHB2pMZQ+3uhVmeAe/FreGPGHqUz
19al5TYFp+GviS/9Jfxl+TFkeOb8fWszvJehxqVzasCP5beg5ouJ+z4n3pv8
DfXfPij8c+BS8of0Gd6i/MkyhdyOIjuScot9b6zsVHuoW66FAa/6Wekb3/gG
/PWvf314O77vg6qqD2+HS25/HNMQ1rgo6rv2rUPt1mqBKmB1nZtKfDBXfBlS
1BXYHbW7Y98BQ+PXz/6gqLDpqN+dBq74/rz/+toCfqqf+r6d7qu+H/YU9Jgn
arpP+7j7kkUHWOu8MVVgZbqt8nBlsBznFt3ZrUEVrP0UdQmWJ67giJJjpA4V
yOtBeTe4O7H9UBY6WIfhNSHeBzg70mS43J6JPb4fsNC3HXM3ZuxxOlO2jpDb
pNA5Qd3n4t5lfm/PaW8WyI9hxbPn70vP63tBbtcCtk7bWm8cvwU3X0zb9znx
nuSvvkepx6WJv1HLyh/KZ3iD8ifLs+V2PNmRtD3Y90bJTgaBY4LGnfPzOXdr
z3svXwv/+Mc/4Gtf+9rT2vvoo4+eEpsQU9TViCAMgjJ+EQTRZX/UMIr9pMX9
8ZANJae0rL99bjfM7x1mq7Ly/hCC/H7fDyCKk0G5crJL+9f7wygW1hclXoMs
jStZDuNecQIWKTkudCiOchn2pWQZJcdIHaral9WD67vj+kDgkJPbghNEQaEr
+RxQjF805AGYscfpTPkEhNxmjN7c7h3U+pzAjOGZKebv8hG571HavLL9ENIh
dmcEvwUzX0zd9/nwHuVvHGTlD+f7vjX5k2UiuR0BnNwi53yE7JRz/puYc898
73vfgz/96U9Pa+9vf/sbfOtb33paewRBEARBEARBEARBDKOIl3zzm998eruf
fPIJ2Lb99HYJgiAIgiAIgiAIguimyCXw97//fepuEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBPJX/B3ygrRU=
    "], {{0, 240}, {1036, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVlwdYU8kWgOeWVBJaIAJSQm+iFIEAUkMLXapgIyQhCSXEhKBiZ112BSsq
KljRVRFF1wLIYkNd66LYXctDXVSUdXFdbKh5kwTQdb/33vfm+2buf8+cOXPO
uXPnm7HOKUrORQEACjJsknnTQ+Vy3swUffiSJlVIRFKhgCstFoqEcnYOAoVJ
erABekk8mawAhVqF0mJ5clQYa0JmFov0EBABBijACrB4fIUsNCkpTq099Px7
eX0DqA2Cq25qW//s/6/FQCBU8AFAkiDnCBT8QsgHAcB9+DJ5MQCEXii3nV4s
g0xUx2Ikhw5CtlOzSMtsNedoOU6jk5rMgZwNAJnG48lFAOiq/WKV8EXQju5i
yO5SgUQKuQ1yEF/ME0D+AHlUYWERZD0nyE45X9gR/c1mzrBNHk80zNpYNIUc
LlHICngz/890/O9SWKAcmsMWVppYHp2sjlmdt/yiWDXTIJ+V5iQkQjaEfE0i
0Oir+bFYGZ02qP+Wr+DAnAEmAChNwAuPhWwO2UZakBA3KA/KlURyIcPco6mS
Ym6qdiwqkBclD9pHZwgVESlDzJNr5lLrVCjz00IHbW4UC7lDNltLxakZWj/R
yyWS9ATIupDvKvJTYgd1npWKOQlDOnJlstpn+M0xkCuPTNbqYHaFiqG4MH+x
hJswyHHF4tRo7VhsCp+n8c0Ecp5QMSFuyE+BMDxCGxdWJpSmDfqPVcmKw5IH
9bfJCpIG9bE2YUGUWm4DuUNRkjI0tq8YLjZtvDiQFSelan3DjfJ4MUlaH3AX
EAc4IBywgBLWHFAE8oCko7e5F75peyIBD8iBCAiB26BkaESGpkcK2xRQCn6H
JASK4XFhml4hKIHyj8NSbesGcjW9JZoR+eAx5EIQCwrgu1IzSjo8Wzr4DUok
/5idD30tgFXd9w8ZS29IRowghhOjiZFEZ9wMD8ID8DjYhsDqibNxvyG/PusT
HhM6CQ8J1wldhNtTJWXyrzxngXjQBX2MHIwu58vocAdo1RsPwwOhfWgbZ+Jm
wA0fC2cKxYPh3N5Q+qWvyuGIP+dy0BbFnYJSRlBCKE5fe6Drous9bEWdqS9z
ofUrZzhbnOGer+PgfJE/AXzGfq2JfY8dwM5gJ7BzWBvWDFjYMawFu4gdUfPw
2vhNszaGZkvW+JMP7Uj+MR9vcE511hTuDe497h8G+0CxcEax+mfhFMlmyiUi
cTErFO7WQhZXyh89iuXp7gF3UfXer91aXjE1ezrCPP9ZVhYDQKCRSqVq+yyL
WwLAobkAUPs/yxxVANDhPn52Nl8pL9HKcHVDAFSgB/8UU2AJ9y4nGJEn8AEB
IAREgBiQCFJBJpgC8yyG61QOpoPZYAEoB5VgOVgNasAmsBXsBHvAftAM2sAJ
8DO4AC6D6+AOXCvd4DnoA6/BAIIgJISOMBBTxAqxR1wRT4SNBCERSBySjGQi
2YgIkSJKZDbyDVKJVCE1yBakHvkROYycQM4hncht5AHSg/yJvEcxlIYaoRao
AzoGZaOhaCyaik5GReg0tBRdiC5F16J16G60CT2BXkCvo13oc7QfA5gOxsSs
MTeMjXGwRCwLy8Xk2FysAqvG6rBGrBV+6atYF9aLvcOJOANn4W5wvUbjaTgf
n4bPxRfjNfhOvAk/hV/FH+B9+CcCnWBOcCX4E7iECQQRYTqhnFBN2E44RDgN
/51uwmsikcgkOhJ94b+XScwjziIuJm4g7iUeJ3YSHxH7SSSSKcmVFEhKJPFI
xaRy0jrSbtIx0hVSN+ktWYdsRfYkR5KzyFJyGbmavIt8lHyF/IQ8QNGn2FP8
KYkUAWUmZRllG6WVconSTRmgGlAdqYHUVGoedQF1LbWRepp6l/pKR0fHRsdP
Z7yORGe+zlqdfTpndR7ovKMZ0lxoHNokmpK2lLaDdpx2m/aKTqc70EPoWfRi
+lJ6Pf0k/T79rS5Dd7QuV1egO0+3VrdJ94ruCz2Knr1eqN4UvVK9ar0Depf0
evUp+g76HH2e/lz9Wv3D+jf1+w0YBh4GiQaFBosNdhmcM3hqSDJ0MIwwFBgu
NNxqeNLwEQNj2DI4DD7jG8Y2xmlGtxHRyNGIa5RnVGm0x6jDqM/Y0Hiscbrx
DONa4yPGXUyM6cDkMguYy5j7mTeY70dYjAgdIRyxaETjiCsj3piMNAkxEZpU
mOw1uW7y3pRlGmGab7rCtNn0nhlu5mI23my62Uaz02a9I41GBozkj6wYuX/k
r+aouYt5svks863mF837LSwtoixkFussTlr0WjItQyzzLFdZHrXssWJYBVlJ
rFZZHbN6xjJmhbIKWGtZp1h91ubW0dZK6y3WHdYDNo42aTZlNntt7tlSbdm2
ubarbNtt++ys7OLtZts12P1qT7Fn24vt19ifsX/j4OiQ4fCdQ7PDU0cTR65j
qWOD410nulOw0zSnOqdrzkRntnO+8wbnyy6oi7eL2KXW5ZIr6urjKnHd4No5
ijDKb5R0VN2om240t1C3ErcGtwejmaPjRpeNbh79YozdmKwxK8acGfPJ3du9
wH2b+x0PQ48YjzKPVo8/PV08+Z61nte86F6RXvO8WrxejnUdKxy7cewtb4Z3
vPd33u3eH318feQ+jT49vna+2b7rfW+yjdhJ7MXss34EvzC/eX5tfu/8ffyL
/ff7/xHgFpAfsCvg6TjHccJx28Y9CrQJ5AVuCewKYgVlB20O6gq2DuYF1wU/
DLENEYRsD3kS6hyaF7o79EWYe5g87FDYG44/Zw7neDgWHhVeEd4RYRiRFlET
cT/SJlIU2RDZF+UdNSvqeDQhOjZ6RfRNrgWXz63n9sX4xsyJORVLi02JrYl9
GOcSJ49rjUfjY+JXxt9NsE+QJjQngkRu4srEe0mOSdOSfhpPHJ80vnb842SP
5NnJZ1IYKVNTdqW8Tg1LXZZ6J80pTZnWnq6XPim9Pv1NRnhGVUbXhDET5ky4
kGmWKclsySJlpWdtz+qfGDFx9cTuSd6TyifdmOw4ecbkc1PMphRMOTJVbypv
6oFsQnZG9q7sD7xEXh2vP4ebsz6nj8/hr+E/F4QIVgl6hIHCKuGT3MDcqtyn
okDRSlGPOFhcLe6VcCQ1kpd50Xmb8t7kJ+bvyFcVZBTsLSQXZhcelhpK86Wn
iiyLZhR1ylxl5bKuaf7TVk/rk8fKtysQxWRFS7ERPGRfVDopv1U+KAkqqS15
Oz19+oEZBjOkMy7OdJm5aOaT0sjSH2bhs/iz2mdbz14w+8Gc0Dlb5iJzc+a2
z7Odt3Be9/yo+TsXUBfkL/ilzL2squyvbzK+aV1osXD+wkffRn3bUK5bLi+/
+V3Ad5u+x7+XfN+xyGvRukWfKgQV5yvdK6srPyzmLz6/xGPJ2iWqpblLO5b5
LNu4nLhcuvzGiuAVO6sMqkqrHq2MX9m0irWqYtVfq6euPlc9tnrTGuoa5Zqu
tXFrW9bZrVu+7kONuOZ6bVjt3vXm6xetf7NBsOHKxpCNjZssNlVuer9ZsvnW
lqgtTXUOddVbiVtLtj7elr7tzA/sH+q3m22v3P5xh3RH187knafqfevrd5nv
WtaANigbenZP2n15T/ielka3xi17mXsr94F9yn3Pfsz+8cb+2P3tB9gHGg/a
H1x/iHGooglpmtnU1yxu7mrJbOk8HHO4vTWg9dBPo3/a0WbdVnvE+Miyo9Sj
C4+qjpUe6z8uO957QnTiUfvU9jsnJ5y8dmr8qY7TsafP/hz588kzoWeOnQ08
23bO/9zh8+zzzRd8LjRd9L546BfvXw51+HQ0XfK91HLZ73Jr57jOo1eCr5y4
Gn7152vcaxeuJ1zvvJF249bNSTe7bgluPb1dcPvlryW/DtyZf5dwt+Ke/r3q
++b36/7l/K+9XT5dRx6EP7j4MOXhnUf8R89/U/z2oXvhY/rj6idWT+qfej5t
64nsufxs4rPu57LnA73lvxv8vv6F04uDf4T8cbFvQl/3S/lL1Z+LX5m+2vHX
2L/a+5P6778ufD3wpuKt6dud79jvzrzPeP9kYPoH0oe1H50/tn6K/XRXVahS
yXhynuYogMGK5uYC8OcOeE7IBIBxGZ4fJmrvZpqCaO+TGgL/ibX3N03xAaAR
PtTHcM5xAPbB6gArDVb1ETw1BKBeXsN1sChyvTy1tmjwxkJ4q1K9sgCA1ArA
R7lKNbBBpfq4DTp7G4Dj07R3QnVR30E3e6jpitUB8HX5N+80fno=
      "], "RGB", "XYZ"], 
    Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{484.60546875, Automatic},
  ImageSizeRaw->{1036, 240},
  PlotRange->{{0, 1036}, {0, 240}}]], "TemplateEditableInput",
 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.740250090210368*^9, 
  3.740250094376066*^9}},ExpressionUUID->"3f280a5f-6a6c-47a6-b479-\
de8f94f3c840"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exploring principal components of student code submissions", \
"TemplateEditableHeader",
 CellChangeTimes->{{3.740248679409885*^9, 
  3.7402486957508993`*^9}},ExpressionUUID->"d81a2f92-5f84-4614-aee9-\
dcb6b7eeac79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotPCs", "[", 
  RowBox[{"myresults", ",", " ", "probList"}], "]"}]], "TemplateEditableInput",\

 ShowCellBracket->True,
 CellMargins->{{65, 20}, {10, 10}},
 CellChangeTimes->{{3.7387205132977057`*^9, 3.7387205369163227`*^9}, {
   3.738720567351904*^9, 3.738720567939702*^9}, {3.738720735157468*^9, 
   3.738720735688446*^9}, 3.740249340352092*^9, {3.740249373041316*^9, 
   3.7402493791058064`*^9}},ExpressionUUID->"20197eb1-0a2c-4e3a-a068-\
01939f0a01f0"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`pcToShow$$ = {1, 2, 
    5}, $CellContext`probnum$$ = 3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`pcToShow$$], {1, 2, 3}}, 
      Dynamic[
       Part[$CellContext`plotData$4753009, $CellContext`probnum$$, 1]]}, {{
       Hold[$CellContext`probnum$$], 1}, {
      1 -> "3_6", 2 -> "5_6", 3 -> "10_10"}}}, Typeset`size$$ = {
    360., {124., 129.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`probnum$4753014$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`pcToShow$$ = {1, 2, 
         3}, $CellContext`probnum$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`probnum$$, $CellContext`probnum$4753014$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPointPlot3D[Part[
          Part[$CellContext`plotData$4753009, $CellContext`probnum$$, 2], 
          All, $CellContext`pcToShow$$] -> Range[
          Length[
           Part[$CellContext`plotData$4753009, $CellContext`probnum$$, 2]]], 
        LabelingFunction -> Callout, AxesLabel -> Part[
          
          Part[$CellContext`plotData$4753009, $CellContext`probnum$$, 
           3], $CellContext`pcToShow$$]], 
      "Specifications" :> {{{$CellContext`pcToShow$$, {1, 2, 3}}, 
         Dynamic[
          Part[$CellContext`plotData$4753009, $CellContext`probnum$$, 1]], 
         ControlType -> PopupMenu}, {{$CellContext`probnum$$, 1}, {
         1 -> "3_6", 2 -> "5_6", 3 -> "10_10"}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{512., {182., 188.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({
      Attributes[$CellContext`plotData$4753009] = {
        Temporary}, $CellContext`plotData$4753009 = {{{{1, 2, 
            3} -> {{"List", "Range"}, {"List"}, {"100", "99"}}, {1, 2, 
            4} -> {{"List", "Range"}, {"List"}, {"ListPlot"}}, {1, 2, 
            5} -> {{"List", "Range"}, {"List"}, {"Join"}}, {1, 2, 
            6} -> {{"List", "Range"}, {"List"}, {"1"}}, {1, 3, 
            4} -> {{"List", "Range"}, {"100", "99"}, {"ListPlot"}}, {1, 3, 
            5} -> {{"List", "Range"}, {"100", "99"}, {"Join"}}, {1, 3, 
            6} -> {{"List", "Range"}, {"100", "99"}, {"1"}}, {1, 4, 
            5} -> {{"List", "Range"}, {"ListPlot"}, {"Join"}}, {1, 4, 
            6} -> {{"List", "Range"}, {"ListPlot"}, {"1"}}, {1, 5, 
            6} -> {{"List", "Range"}, {"Join"}, {"1"}}, {2, 3, 
            4} -> {{"List"}, {"100", "99"}, {"ListPlot"}}, {2, 3, 
            5} -> {{"List"}, {"100", "99"}, {"Join"}}, {2, 3, 
            6} -> {{"List"}, {"100", "99"}, {"1"}}, {2, 4, 
            5} -> {{"List"}, {"ListPlot"}, {"Join"}}, {2, 4, 
            6} -> {{"List"}, {"ListPlot"}, {"1"}}, {2, 5, 
            6} -> {{"List"}, {"Join"}, {"1"}}, {3, 4, 
            5} -> {{"100", "99"}, {"ListPlot"}, {"Join"}}, {3, 4, 
            6} -> {{"100", "99"}, {"ListPlot"}, {"1"}}, {3, 5, 
            6} -> {{"100", "99"}, {"Join"}, {"1"}}, {4, 5, 
            6} -> {{"ListPlot"}, {"Join"}, {"1"}}}, CompressedData["
1:eJxTTMoPSmViYGBgB2I2ILZfoZC6i/vr/pId9tbvH03cL9Jdt/aH9pH9j+uf
TFJn/2D/yb7o5GTmD/tVV9Wv3VFWaq960jBC88GX/ZViLxfLGNvsXxnlctr5
ymf7dYXPPs4X/GD/a2t7TBjPB5i8vevt0+s/H2Q+sD7s+c0Fp/7ut9eb6CC/
46k999uOjB1ez+yNr3xkEkh/sH/9yl9Grj+e2gfGhrG+9fy6/6W4+2uv9CX7
2YoY2Zu2f7ZnQAEfoPIh9n2XRGevYv+6v6l0S+X8R5P2zxDwfnfl4uH96Oph
rJhV9R9NL3/bf26OZfGzMyf3hzZaiG6s/2z/9tbW7Ovr3sLtOdDAyMzGU2H/
5u6kRqmr4gf8Oaa/aCmQPPDT/sG+2PCP9jmrz+/f9uuN/XGNc6U9j97sf3Vu
1sJ3a07aAwB6r6KY
          
          "], {{"List", "Range"}, {"List"}, {"100", "99"}, {"ListPlot"}, {
           "Join"}, {
           "1"}}}, {{{1, 2, 
            3} -> {{"5", "Power", "Range"}, {"List"}, {"Range", "Sort"}}, {1, 
            2, 4} -> {{"5", "Power", "Range"}, {"List"}, {"5", "Power"}}, {1, 
            2, 5} -> {{"5", "Power", "Range"}, {"List"}, {"Sort"}}, {1, 2, 
            6} -> {{"5", "Power", "Range"}, {"List"}, {"1", "4"}}, {1, 3, 
            4} -> {{"5", "Power", "Range"}, {"Range", "Sort"}, {
             "5", "Power"}}, {1, 3, 
            5} -> {{"5", "Power", "Range"}, {"Range", "Sort"}, {"Sort"}}, {1, 
            3, 6} -> {{"5", "Power", "Range"}, {"Range", "Sort"}, {
             "1", "4"}}, {1, 4, 
            5} -> {{"5", "Power", "Range"}, {"5", "Power"}, {"Sort"}}, {1, 4, 
            6} -> {{"5", "Power", "Range"}, {"5", "Power"}, {"1", "4"}}, {1, 
            5, 6} -> {{"5", "Power", "Range"}, {"Sort"}, {"1", "4"}}, {2, 3, 
            4} -> {{"List"}, {"Range", "Sort"}, {"5", "Power"}}, {2, 3, 
            5} -> {{"List"}, {"Range", "Sort"}, {"Sort"}}, {2, 3, 
            6} -> {{"List"}, {"Range", "Sort"}, {"1", "4"}}, {2, 4, 
            5} -> {{"List"}, {"5", "Power"}, {"Sort"}}, {2, 4, 
            6} -> {{"List"}, {"5", "Power"}, {"1", "4"}}, {2, 5, 
            6} -> {{"List"}, {"Sort"}, {"1", "4"}}, {3, 4, 
            5} -> {{"Range", "Sort"}, {"5", "Power"}, {"Sort"}}, {3, 4, 
            6} -> {{"Range", "Sort"}, {"5", "Power"}, {"1", "4"}}, {3, 5, 
            6} -> {{"Range", "Sort"}, {"Sort"}, {"1", "4"}}, {4, 5, 
            6} -> {{"5", "Power"}, {"Sort"}, {
             "1", "4"}}}, {{-3.459960480796348, 0.03296703296703297, 
          1.345227399151371, -0.004629061412946278, 
          1.0017582417582418`, -0.0003537576184927797}, {-2.5595632404786754`,
           1.6708701134930644`, 0.9965930669818285, -0.17106850917407945`, 
          0.7515762925598991, -0.3979751848640438}}, {{
           "5", "Power", "Range"}, {"List"}, {"Range", "Sort"}, {
           "5", "Power"}, {"Sort"}, {
           "1", "4"}}}, {{{1, 2, 
            3} -> {{"0", "Hue", "ImageCollage", "List", "Sphere"}, {
             "h", "x"}, {"h", "n"}}, {1, 2, 
            4} -> {{"0", "Hue", "ImageCollage", "List", "Sphere"}, {
             "h", "x"}, {"List", "Style"}}, {1, 2, 
            5} -> {{"0", "Hue", "ImageCollage", "List", "Sphere"}, {
             "h", "x"}, {"Table"}}, {1, 2, 
            6} -> {{"0", "Hue", "ImageCollage", "List", "Sphere"}, {
             "h", "x"}, {"h", "n", "Style", "x"}}, {1, 3, 
            4} -> {{"0", "Hue", "ImageCollage", "List", "Sphere"}, {
             "h", "n"}, {"List", "Style"}}, {1, 3, 
            5} -> {{"0", "Hue", "ImageCollage", "List", "Sphere"}, {
             "h", "n"}, {"Table"}}, {1, 3, 
            6} -> {{"0", "Hue", "ImageCollage", "List", "Sphere"}, {
             "h", "n"}, {"h", "n", "Style", "x"}}, {1, 4, 
            5} -> {{"0", "Hue", "ImageCollage", "List", "Sphere"}, {
             "List", "Style"}, {"Table"}}, {1, 4, 
            6} -> {{"0", "Hue", "ImageCollage", "List", "Sphere"}, {
             "List", "Style"}, {"h", "n", "Style", "x"}}, {1, 5, 
            6} -> {{"0", "Hue", "ImageCollage", "List", "Sphere"}, {
             "Table"}, {"h", "n", "Style", "x"}}, {2, 3, 
            4} -> {{"h", "x"}, {"h", "n"}, {"List", "Style"}}, {2, 3, 
            5} -> {{"h", "x"}, {"h", "n"}, {"Table"}}, {2, 3, 
            6} -> {{"h", "x"}, {"h", "n"}, {"h", "n", "Style", "x"}}, {2, 4, 
            5} -> {{"h", "x"}, {"List", "Style"}, {"Table"}}, {2, 4, 
            6} -> {{"h", "x"}, {"List", "Style"}, {"h", "n", "Style", "x"}}, {
            2, 5, 6} -> {{"h", "x"}, {"Table"}, {"h", "n", "Style", "x"}}, {3,
             4, 5} -> {{"h", "n"}, {"List", "Style"}, {"Table"}}, {3, 4, 
            6} -> {{"h", "n"}, {"List", "Style"}, {"h", "n", "Style", "x"}}, {
            3, 5, 6} -> {{"h", "n"}, {"Table"}, {"h", "n", "Style", "x"}}, {4,
             5, 6} -> {{"List", "Style"}, {"Table"}, {
             "h", "n", "Style", 
              "x"}}}, {{-2.2237331817367294`, -0.004676814526048975, \
-1.5393304425621197`, 0.48103404821289897`, -0.9912280701754386, 
          0.7042147004536597}, {-2.7193943451483613`, -0.037802269184570636`, \
-0.04534118719387614, 1.5285996563148259`, -0.94, 
          0.3578284678031426}, {-2.226561673258953, 1.692032821115039, 0., 
          0.47311369072051535`, -1., 
          0.7082987996952076}, {-2.221893160687745, -1.0663137119391664`, 
          1.2618710488271072`, 0.47311369072051535`, -1., 
          0.6974226491270691}}, {{
           "0", "Hue", "ImageCollage", "List", "Sphere"}, {"h", "x"}, {
           "h", "n"}, {"List", "Style"}, {"Table"}, {
           "h", "n", "Style", "x"}}}}, 
       TagSet[LabelingFunction, 
        MessageName[LabelingFunction, "usage"], 
        "LabelingFunction is an option for data visualization functions to \
automatically label elements of a visualization."]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.740249341640408*^9, 3.740249369679142*^9}},
 CellLabel->
  "Out[186]=",ExpressionUUID->"c0a6a6c2-8fde-4a15-ba78-f3e53def8e58"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellOpen->False,ExpressionUUID->"5ddaca3b-16c4-4ddd-a510-a603177f7695"],

Cell[TextData[{
 StyleBox["Note",
  FontWeight->"Bold"],
 ": Everything above this bar is in your 2 minute presentation. Make sure it \
fits on 2 slides. ",
 Cell[BoxData[
  ButtonBox["\<\"Preview Presentation\"\>",
   Appearance->Automatic,
   ButtonFunction:>With[{$CellContext`authorInfo = NotebookImport[
        EvaluationNotebook[], "TemplateAuthorInfo"], $CellContext`content = 
      NotebookImport[
        EvaluationNotebook[], 
        Alternatives[
        "TemplateEditableHeader", "TemplateEditableInput", 
         "TemplateEditableContent"]]}, 
     CreateDocument[
      Notebook[{
        Cell[
        "Wolfram Summer School 2018", FontFamily -> "Source Sans Pro", 
         FontSize -> 42, FontVariations -> {"CapsType" -> "AllCaps"}, 
         RGBColor[
         0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
         Background -> RGBColor[1., 0.807843137254902, 0.2549019607843137], 
         PageWidth -> WindowWidth, ShowCellBracket -> False, 
         CellMargins -> {{0, 0}, {0, 0}}, 
         CellBracketOptions -> {"OverlapContent" -> True}], 
        Cell[
         Part[$CellContext`content, 1], "Title", FontColor -> 
         RGBColor[
          0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
         CellMargins -> {{Inherited, 10}, {10, 10}}], 
        Cell[
         TextData[{
           StyleBox["AUTHOR: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`authorInfo, 1], " (Mentor: ", 
           Part[$CellContext`authorInfo, 2], ")"}], "Text"], 
        Cell[
         TextData[{
           StyleBox["AFFILIATION: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`authorInfo, 3]}], "Text"], 
        Cell[
         Part[$CellContext`content, 3], TextAlignment -> Center], 
        Cell[
         TextData[{
           StyleBox["GOAL OF THE PROJECT: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`content, 2]}], "Text"], 
        Cell["", "SlideShowNavigationBar", CellTags -> "SlideShowHeader"], 
        Cell[
         TextData[{
           StyleBox["SUMMARY OF RESULTS: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`content, 4]}], "Text"], 
        Cell[
         TextData[{
           StyleBox["ADDITIONAL CONTENT: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]]}], "Text"], 
        Apply[Sequence, 
         Map[Cell[#, "Text"]& , 
          Part[$CellContext`content, 
           Span[6, All]]]], 
        Cell[
         TextData[{
           StyleBox["FUTURE WORK: ", "Bold", 
            RGBColor[1., 0.5058823529411764, 0.]], 
           Part[$CellContext`content, 5]}], "Text"]}, ScreenStyleEnvironment -> 
       "SlideShow", WindowSize -> {1024, 740}]]],
   Evaluator->Automatic,
   Method->"Queued"]],ExpressionUUID->"de93efd8-12a9-4f5c-8a79-b815d24ac5f9"]
}], "TemplateDivider",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.740224343432857*^9},ExpressionUUID->"01c4256e-42d0-42b4-b6a6-\
4fa4583bf2f0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Detailed Project Notes", "TemplateSectionHeaders",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.736188072178087*^9},
 CellTags->
  "ProjectNotes",ExpressionUUID->"d0702cda-4649-4987-a5e2-607be4aa4f6e"],

Cell[CellGroupData[{

Cell["Data file creation", "Subsection",
 CellChangeTimes->{{3.7399757600897174`*^9, 3.739975762120536*^9}, {
   3.739977319399832*^9, 3.7399773223680835`*^9}, 3.739978659799176*^9, {
   3.740065174395752*^9, 
   3.740065178892029*^9}},ExpressionUUID->"c45a16de-9738-456b-865b-\
77b7afa38345"],

Cell[CellGroupData[{

Cell["import", "Subsubsection",
 CellChangeTimes->{{3.739978662189439*^9, 
  3.7399786630327897`*^9}},ExpressionUUID->"97e41bb9-2171-4366-9230-\
089ac9f8cec0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataDir", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Data\>\""}], "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7399757674784446`*^9, 3.7399758045357904`*^9}, {
  3.739975851602602*^9, 3.739975858194772*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"f87a1c61-f95f-40d9-b7a3-b461343c2c41"]
}, Closed]],

Cell[CellGroupData[{

Cell["Splitting the EIWL data file", "Subsubsection",
 CellChangeTimes->{{3.739978672358926*^9, 3.739978674998866*^9}, {
  3.7399787241231046`*^9, 3.7399787272473497`*^9}, {3.74006532855995*^9, 
  3.740065332745798*^9}, {3.7401364134318867`*^9, 
  3.7401364175937567`*^9}},ExpressionUUID->"9ce95bc5-33ed-406f-a0bd-\
9ef972532db9"],

Cell[BoxData[
 RowBox[{"eiwlData", ";"}]], "Input",
 CellChangeTimes->{{3.7400652748001003`*^9, 3.740065302687447*^9}, {
  3.740065338826303*^9, 3.740065357756996*^9}, {3.740250815266618*^9, 
  3.740250818286014*^9}},ExpressionUUID->"7092f90d-0bc7-47c8-b741-\
a50ed47927f0"],

Cell["\<\
This is a list of associations.  Each element of eiwlData represents a single \
student-attempt and contains keys:\
\>", "Text",
 CellChangeTimes->{{3.740065895695717*^9, 3.740065926927272*^9}, 
   3.7400664406062117`*^9},ExpressionUUID->"f11ccf8e-a395-4e71-b3ee-\
a49578b70cdb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eiwlData", "[", 
   RowBox[{"[", "3", "]"}], "]"}], " ", "//", " ", "Keys"}]], "Input",
 CellChangeTimes->{{3.740065848117725*^9, 3.74006588114467*^9}, {
  3.740067339433557*^9, 3.740067358926409*^9}, {3.74006742100461*^9, 
  3.7400674299062233`*^9}, {3.740071362599478*^9, 3.740071365531191*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"d9f36dd1-e5db-4034-a85c-2d91e9e9463a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Timestamp\"\>", ",", "\<\"Exercise\"\>", 
   ",", "\<\"CorrectQ\"\>", ",", "\<\"UserSubmission\"\>", 
   ",", "\<\"AnswerKey\"\>", ",", "\<\"Text\"\>", ",", "\<\"Referer\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.740065850691195*^9, 3.740065881468339*^9}, {
   3.7400673400842857`*^9, 3.740067361250123*^9}, {3.7400674238570833`*^9, 
   3.740067430236992*^9}, 3.740071366038611*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"77e41f8d-0862-42d5-bbad-65e56cd85fec"]
}, Open  ]],

Cell["\<\
We want to save these problems in separate files for easy use and access.  To \
do this, we form a list of problem names\
\>", "Text",
 CellChangeTimes->{{3.740065895695717*^9, 
  3.740065962899424*^9}},ExpressionUUID->"7cebe4aa-a339-49bf-8223-\
7e8ecc5e816a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"problemnames", " ", "=", " ", 
   RowBox[{
    RowBox[{"eiwlData", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "\"\<Exercise\>\""}], "]"}], "]"}], " ", "//", " ", 
    "Union"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740065976218154*^9, 3.740066004347871*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"5ed7831f-7185-47f3-ae8e-ddff595bdeb7"],

Cell["\<\
We create a function that, given an exercise name, exports the subset of \
eiwlData containing solutions to those problems.  We can drop AnswerKey, \
Text, Referrer, and User.\
\>", "Text",
 CellChangeTimes->{{3.740065895695717*^9, 3.740065962899424*^9}, {
  3.740066047929158*^9, 3.740066062581958*^9}, {3.740066250835079*^9, 
  3.740066271408658*^9}},ExpressionUUID->"497c00aa-cdea-48c5-8219-\
55d90e5829cc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eiwlDataImportantFields", " ", "=", " ", 
   RowBox[{"KeyDrop", "[", 
    RowBox[{"eiwlData", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Timestamp\>\"", ",", "\"\<AnswerKey\>\"", ",", "\"\<Text\>\"", ",",
        " ", "\"\<User\>\"", ",", "\"\<Referer\>\""}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.740071452428697*^9, 3.740071566856595*^9}, {
  3.7400716363648043`*^9, 3.7400717728423443`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"445bf1b6-fa08-41b6-9bc2-5a54081deb89"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eiwlDataImportantFields", " ", "=", " ", 
   RowBox[{"Dataset", "[", "eiwlDataImportantFields", "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.740071864252181*^9, 3.740071868482398*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"fb5c6361-fcb1-4a2d-9aba-c2f9b264701a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"saveproblem", "[", "probname_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "filename", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"probdata", " ", "=", " ", 
      RowBox[{"eiwlDataImportantFields", "[", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"#Exercise", "\[Equal]", "probname"}], "&"}], "]"}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"filename", " ", "=", " ", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Data\>\"", ",", 
         RowBox[{"StringJoin", "[", 
          RowBox[{
           RowBox[{"StringReplace", "[", 
            RowBox[{"probname", ",", 
             RowBox[{"\"\<.\>\"", "\[Rule]", "\"\<_\>\""}]}], "]"}], ",", 
           " ", "\"\<.mx\>\""}], "]"}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"DumpSave", "[", 
      RowBox[{"filename", ",", "probdata"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7395494340749693`*^9, 3.7395495979678907`*^9}, {
  3.739549637462818*^9, 3.7395496676768713`*^9}, {3.7395497018432493`*^9, 
  3.739549711811941*^9}, {3.7395498209826937`*^9, 3.7395498216211147`*^9}, {
  3.7395499345420837`*^9, 3.7395499636545753`*^9}, {3.739550038344762*^9, 
  3.7395500387116737`*^9}, {3.740071903351769*^9, 3.740071928808543*^9}, {
  3.740072020375681*^9, 3.740072096859518*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"db8779aa-4ac2-4f6f-b016-63a15eefafb7"],

Cell[BoxData[
 RowBox[{"saveproblem", " ", "/@", " ", "problemnames"}]], "Input",
 CellLabel->"In[51]:=",ExpressionUUID->"357b418a-0590-4673-ab29-47803b15c114"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Data import", "Subsection",
 CellChangeTimes->{{3.7399757600897174`*^9, 3.739975762120536*^9}, {
   3.739977319399832*^9, 3.7399773223680835`*^9}, 3.739978659799176*^9, {
   3.740065182153825*^9, 
   3.740065183795067*^9}},ExpressionUUID->"7f49224d-084b-4ecb-94af-\
652caa5bdedc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataDir", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Data\>\""}], "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7399757674784446`*^9, 3.7399758045357904`*^9}, {
  3.739975851602602*^9, 3.739975858194772*^9}, {3.740234080210877*^9, 
  3.740234080912116*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"7100f337-f59a-4834-aa25-d08d7cf28a41"],

Cell[BoxData[
 RowBox[{
  RowBox[{"allFiles", " ", "=", " ", 
   RowBox[{"FileNames", "[", 
    RowBox[{"___", ",", "dataDir"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740078403445011*^9, 3.740078418248797*^9}, {
  3.7401364391958017`*^9, 3.7401364395893517`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"2128bca0-bba2-4022-9083-102f2fc2b25f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "Get", "[", 
   "\"\</Users/laurenberk/Dropbox (MIT)/Code \
Seal/CodeSeal_Summer/Sandbox/lauren/Data/3_6.mx\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7399758817024593`*^9, 3.739975885636808*^9}, {
   3.739975925437452*^9, 3.7399759337313447`*^9}, 3.740072287380229*^9, {
   3.7400784525104647`*^9, 3.7400784557967*^9}, {3.740079426914603*^9, 
   3.740079449119396*^9}, {3.740079763373371*^9, 3.7400797646858597`*^9}, {
   3.7401364826176977`*^9, 3.740136482803481*^9}, {3.740216127679206*^9, 
   3.740216128074843*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"9c7fa3de-2096-4567-82f0-ea9865e09887"]
}, Closed]],

Cell[CellGroupData[{

Cell["Bag of words", "Subsection",
 CellChangeTimes->{{3.7399786848245087`*^9, 3.739978686839651*^9}, {
  3.7402488949340773`*^9, 
  3.7402488952804527`*^9}},ExpressionUUID->"0df0d251-5a18-48d8-9fbe-\
45dd16b914c8"],

Cell[CellGroupData[{

Cell["pull submissions with good syntax", "Subsubsection",
 CellChangeTimes->{{3.739978672358926*^9, 3.739978674998866*^9}, {
  3.7399787241231046`*^9, 
  3.7399787272473497`*^9}},ExpressionUUID->"0be78511-1a0c-4847-b8b4-\
563d845dc1ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"submittedCells", "=", 
   RowBox[{"Normal", "@", 
    RowBox[{"probdata", "[", 
     RowBox[{"All", ",", "\"\<UserSubmission\>\""}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7399759362776184`*^9, 3.739975947164401*^9}, {
   3.739976253460427*^9, 3.739976284012684*^9}, 3.740072301188719*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"9112b72b-c66c-4cf4-ae5d-4d09397015e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"justCellData", "=", 
   RowBox[{"submittedCells", "/.", 
    RowBox[{
     RowBox[{"Cell", "[", 
      RowBox[{"a_", ",", "___"}], "]"}], "\[RuleDelayed]", 
     RowBox[{"Cell", "[", "a", "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739976325909535*^9, 3.7399763280945573`*^9}, {
  3.739976366552932*^9, 3.7399763941297836`*^9}, {3.739976552012667*^9, 
  3.739976553715384*^9}, {3.7399767944612503`*^9, 3.739976796679477*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"14965535-0190-4a8e-ab3b-ca016b1aa3ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"expressions", "=", 
   RowBox[{"MakeExpression", "[", 
    RowBox[{"justCellData", ",", "StandardForm"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7399763968166027`*^9, 3.739976471950615*^9}, {
   3.739976623716922*^9, 3.739976626950604*^9}, 3.7399768047554827`*^9},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[37]:=",ExpressionUUID->"1cf3d394-d8ab-4e8c-9d47-13b695a9ecfd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"goodSyntax", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"expressions", ",", 
     RowBox[{"FreeQ", "[", "ErrorBox", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7399764839477897`*^9, 3.739976486681327*^9}, {
  3.739976537784004*^9, 3.739976539564996*^9}, {3.73997668513614*^9, 
  3.739976699658457*^9}, {3.739976997490223*^9, 3.739977049813962*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"d1aaad35-e510-42b5-a115-5d50c559b50c"],

Cell[CellGroupData[{

Cell[BoxData["goodSyntax"], "Input",
 CellLabel->
  "In[185]:=",ExpressionUUID->"bc0115fa-3577-472b-88b4-3d9dc856fa3a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "8f1a4317-d75b-4556-9309-d314a8bb2666"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "1", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}], ",", "1"}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "f4b2ea87-b0d6-470e-9a2b-caaa16625bb8"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 1, 
                 
                 StringLength["this is about strings"], 1}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "cf3b7772-21b8-46e4-8631-5103b43a0276"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "x"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "03d77aa5-f41c-47a7-8c54-ccc3d59a182d"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`x], {$CellContext`x, 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "1", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "4916fe25-1a4c-44cb-9266-5afc69fd09fd"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 1, 
                 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "1", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "d23b98a7-f01a-4f9e-9029-544497c82e14"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 1, 
                 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "1", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "1f937699-888d-4a05-bb59-2b4379b359de"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 1, 
                 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "21"}], "}"}]}], "]"}], "]"}]],
              ExpressionUUID->"0ba8281a-4d1d-4f83-b0a2-a8117d2e10ee"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 
                 21}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "1", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "5b84e96b-a075-44f0-92c4-d82b3beb32b2"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 1, 
                 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "1", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "995ee987-e7d3-4417-af6f-afe53046b2aa"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 1, 
                 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "26c29ef9-0df3-43bf-b6a8-2dbbd9ea9d4c"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "9d207057-8013-4817-ba29-2b8f3ad57ac2"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "a6b6e90c-c3be-40d6-8c23-827dc7e50277"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "8c12ac9f-8bc3-48ae-a00e-437e44031d28"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "1", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "fadb8904-5331-444e-9ad2-aa6741fd31be"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 1, 
                 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "1", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "9023c86f-def7-47fb-b6d9-fb3fc892d31f"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 1, 
                 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "1", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "91a3b4de-78b8-4a31-9ff2-367199290951"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 1, 
                 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Take", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "1", ",", "21"}], "}"}]}], "]"}], "]"}]],
              ExpressionUUID->"5d50692a-db7d-4005-bdb6-6d4162290565"],
             ExpressionCell[
              Column[
               Table[
                Take[
                "this is about strings", $CellContext`n], {$CellContext`n, 1, 
                 21}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Take", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "1", ",", 
                   RowBox[{
                   "Length", "[", "\<\"this is about strings\"\>", "]"}]}], 
                  "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "49265af9-208d-43fb-9e6d-2fa5b39f9768"],
             ExpressionCell[
              Column[
               Table[
                Take[
                "this is about strings", $CellContext`n], {$CellContext`n, 1, 
                 
                 Length["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "c643c032-420d-427a-93cb-e41f154b8f9a"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           TemplateBox[{"836"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Sort", "[", 
                RowBox[{
                "LetterNumber", "[", "\<\"thisisaboutstrings\"\>", "]"}], 
                "]"}], "]"}]],ExpressionUUID->
              "bcb99ad9-7f89-4e2d-a6ff-d2757c1f8b79"],
             ExpressionCell[
              Column[
               Sort[
                LetterNumber["thisisaboutstrings"]]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Sort", "[", 
                RowBox[{
                "LetterNumber", "[", "\<\"this is about strings\"\>", "]"}], 
                "]"}], "]"}]],ExpressionUUID->
              "f9238ccb-10db-4789-b144-4b90c30c1a37"],
             ExpressionCell[
              Column[
               Sort[
                LetterNumber["this is about strings"]]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "1", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "8dedd694-4c62-498d-a59a-8e1cf14bf95f"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 1, 
                 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"tihs is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "1c8fe0db-8cb6-4dae-9044-fbc9eb5f5942"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 
                 StringLength["tihs is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "663c9a9e-f3e3-4aa4-8789-60c02189e689"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 " ", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"tihs is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "5552c7ef-e813-4aa7-a7c0-810d6c1383f0"],
             ExpressionCell[
              Column[
               Table[
               StringTake[
                 "this is about strings", $CellContext`n] {$CellContext`n, 
                  StringLength["tihs is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "73a723b5-2841-4642-b7d4-c54e08de3477"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "21"}], "}"}]}], "]"}], "]"}]],
              ExpressionUUID->"cf5ab879-2e31-4e86-9f99-781eb9786f95"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 
                 21}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "1", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "7d56d0a9-eb79-440d-b4c9-91fa9a397259"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 1, 
                 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "1", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "c121bdfb-c00c-430f-9962-d28fcdc25b73"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 1, 
                 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "1", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "a4205ac5-b0bf-4fb5-ba33-5ea7f8edb4a2"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 1, 
                 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "21"}], "}"}]}], "]"}], "]"}]],
              ExpressionUUID->"1464eefc-3048-4d19-b69c-39215addc1e2"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 
                 21}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "1", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "bc9ef462-baec-4a8e-88c4-a62bc7c9d636"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 1, 
                 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "1", ",", "21"}], "}"}]}], "]"}], "]"}]],
              ExpressionUUID->"2e6531ce-7df0-42bf-a99b-7315ac76e73e"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 1, 
                 21}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"StringTake", "[", 
                 RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"n", ",", "21"}], "}"}]}], "]"}]],ExpressionUUID->
              "5962e078-c4b9-446f-b7d1-2c4e55c4095d"],
             ExpressionCell[
              Table[
               StringTake[
               "this is about strings", $CellContext`n], {$CellContext`n, 
                21}]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "e35158e8-1394-4241-a28d-114abc5a85ef"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", 
                   RowBox[{
                   "Length", "[", "\<\"this is about strings\"\>", "]"}]}], 
                  "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "3f5c5882-aef0-4a6d-9111-88b90a3ecb12"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 
                 Length["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "1", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "d31a7858-85e0-4be2-8e73-30d03af90632"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 1, 
                 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "1", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "bcfc8ae5-9505-45b2-b400-b494df8be224"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 1, 
                 
                 StringLength["this is about strings"]}]]]], "]"}], ",", 
           RowBox[{"HoldComplete", "[", 
            InterpretationBox[Cell[BoxData[
              RowBox[{"Column", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"StringTake", "[", 
                  RowBox[{"\<\"this is about strings\"\>", ",", "n"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"n", ",", "1", ",", 
                   RowBox[{
                   "StringLength", "[", "\<\"this is about strings\"\>", 
                    "]"}]}], "}"}]}], "]"}], "]"}]],ExpressionUUID->
              "1a1b17ad-fc07-4cad-a8c4-6fef2a104a0c"],
             ExpressionCell[
              Column[
               Table[
                StringTake[
                "this is about strings", $CellContext`n], {$CellContext`n, 1, 
                 
                 StringLength["this is about strings"]}]]]], "]"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 185, 19642863192217052625, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 185, 19642863192217052625, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 185, 19642863192217052625, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[19642863192217052625 === $SessionID, 
   Out[185], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7402186478844147`*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"ecc87ab6-d9dd-4205-a0d9-fa42128b183f"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["get bag of words", "Subsubsection",
 CellChangeTimes->{{3.7399787143752112`*^9, 
  3.7399787178118944`*^9}},ExpressionUUID->"feae0108-d961-4532-8744-\
07d8dbaabc3e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fillBags", "[", "expr_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Level", "[", 
    RowBox[{"expr", ",", 
     RowBox[{"{", 
      RowBox[{"-", "1"}], "}"}], ",", 
     RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}], "/.", 
   RowBox[{
    RowBox[{
    "ExpressionCell", "|", "HoldComplete", "|", "CompoundExpression", " ", 
     "|", " ", "Null"}], "\[Rule]", "Nothing"}]}]}]], "Input",
 CellChangeTimes->{{3.739977066497486*^9, 3.739977088173304*^9}, {
  3.7399771269605217`*^9, 3.739977213896633*^9}, {3.739977244373804*^9, 
  3.7399772483506465`*^9}, {3.73997727862467*^9, 3.739977290671483*^9}, {
  3.7399794528185434`*^9, 3.739979453974492*^9}, {3.739979771757886*^9, 
  3.7399797731327376`*^9}, {3.740136598566636*^9, 3.740136599326748*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"b1d30cd4-c9f6-4a4a-a8ff-212e82ecf23f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fillBags", "@", 
   RowBox[{"goodSyntax", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739977296530252*^9, 3.7399773032317834`*^9}, {
   3.73997946158223*^9, 3.7399794630351*^9}, {3.740061648987157*^9, 
   3.740061666048123*^9}, 3.740136469642816*^9},
 CellLabel->"In[59]:=",ExpressionUUID->"85712d68-e86b-43a8-a5cb-9282220d1126"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bags", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"ToString", ",", 
     RowBox[{"fillBags", "/@", "goodSyntax"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7399773308346252`*^9, 3.739977349267914*^9}, {
  3.7399794693772945`*^9, 3.7399794729076705`*^9}, {3.7399799892347903`*^9, 
  3.7399800563172817`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"9a785636-f950-469d-8c6d-86f915939314"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bags", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "10"}], "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7400674745694857`*^9, 3.7400674768256207`*^9}, {
  3.740136470824428*^9, 3.740136503093837*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"f896fcd2-12bb-4e55-b5b0-99d90433915b"]
}, Closed]],

Cell[CellGroupData[{

Cell["spelunking bags", "Subsubsection",
 CellChangeTimes->{{3.7399787457689896`*^9, 
  3.739978749065301*^9}},ExpressionUUID->"cceda057-0c8c-4521-9323-\
a58e7fa06db2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReverseSort", "@", 
   RowBox[{"Counts", "@", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Join", "@", "bags"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7399782029760623`*^9, 3.7399782279055805`*^9}, {
   3.7399784931143627`*^9, 3.7399784953539085`*^9}, {3.7399786058746243`*^9, 
   3.7399786134978075`*^9}, 3.7399794795309496`*^9, {3.7401365552367764`*^9, 
   3.740136568696381*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"f6607d28-7522-41ce-8192-ac8f220b05ed"],

Cell["\<\
looking at the end result of clustering without thought, we need something to \
make better clusters, we will drop uncommon symbols\
\>", "Text",
 CellChangeTimes->{{3.7399788914201317`*^9, 
  3.739978922069137*^9}},ExpressionUUID->"cbd0d927-547e-49b4-b13b-\
85102cdc7396"],

Cell[CellGroupData[{

Cell["keep anything that shows up in >5% of the submissions", "Item",
 CellChangeTimes->{{3.7399792218975487`*^9, 3.73997924095572*^9}, {
  3.7399793376977186`*^9, 
  3.7399793376977186`*^9}},ExpressionUUID->"a0884e70-13db-46ae-893e-\
353bf4590d95"],

Cell["we need to know how many bags each word shows up in", "Item",
 CellChangeTimes->{{3.7399792218975487`*^9, 3.73997924095572*^9}, {
  3.739979338541062*^9, 
  3.7399793482732944`*^9}},ExpressionUUID->"76d85504-2d77-4ddf-82a8-\
ab30100b62a9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"allWords", "=", 
   RowBox[{"Union", "@", 
    RowBox[{"Flatten", "@", "bags"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7399793641601763`*^9, 3.739979375014402*^9}, 
   3.73997948423318*^9, 3.739979625053726*^9},
 CellLabel->"In[63]:=",ExpressionUUID->"59df0de0-9b74-469d-bf13-1b1590286752"],

Cell[BoxData[
 RowBox[{
  RowBox[{"howManyBagsAreYouIn", "=", 
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Count", "[", 
       RowBox[{"bags", ",", 
        RowBox[{"{", 
         RowBox[{"___", ",", "#", ",", "___"}], "}"}], ",", 
        RowBox[{"{", "1", "}"}]}], "]"}], "&"}], ",", "allWords"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7399793840591536`*^9, 3.739979422080327*^9}, {
  3.7399794955273447`*^9, 3.739979572022519*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"f05db410-b955-4bd6-85fb-92beb4196cfa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"keepers", "=", 
   RowBox[{"Keys", "@", 
    RowBox[{"Select", "[", 
     RowBox[{"howManyBagsAreYouIn", ",", 
      RowBox[{
       RowBox[{"#", ">", 
        RowBox[{"0.01", 
         RowBox[{"Length", "@", "goodSyntax"}]}]}], "&"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7399796714094048`*^9, 3.7399797366257305`*^9}, {
  3.739979792047014*^9, 3.7399797928279343`*^9}, {3.739979838942175*^9, 
  3.739979839270276*^9}, {3.7399798886335845`*^9, 3.7399798901642833`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"b1b069f3-2817-45d7-9fda-f2bb3b4837c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"keepers", " "}]], "Input",
 CellChangeTimes->{{3.7400674998416653`*^9, 3.740067501159437*^9}, 
   3.740078716629105*^9},
 CellLabel->"In[66]:=",ExpressionUUID->"736f2846-5ed6-46f5-ab5b-4509ad163aee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"0\"\>", ",", "\<\"1\"\>", ",", "\<\"20\"\>", ",", "\<\"21\"\>",
    ",", "\<\"Characters\"\>", ",", "\<\"Column\"\>", ",", "\<\"Function\"\>",
    ",", "\<\"i\"\>", ",", "\<\"Length\"\>", ",", "\<\"LetterNumber\"\>", 
   ",", "\<\"List\"\>", ",", "\<\"n\"\>", ",", "\<\"Range\"\>", 
   ",", "\<\"s\"\>", ",", "\<\"Set\"\>", ",", "\<\"Slot\"\>", 
   ",", "\<\"Sort\"\>", ",", "\<\"str\"\>", ",", "\<\"StringJoin\"\>", 
   ",", "\<\"StringLength\"\>", ",", "\<\"StringTake\"\>", 
   ",", "\<\"Table\"\>", ",", "\<\"Take\"\>", ",", "\<\"TextWords\"\>", 
   ",", "\<\"this is about string\"\>", ",", "\<\"this is about strings\"\>", 
   ",", "\<\"this is about Strings\"\>", ",", "\<\"This is about strings\"\>",
    ",", "\<\"Times\"\>", ",", "\<\"x\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.740067501494358*^9, {3.740078717256854*^9, 3.7400787330198927`*^9}, {
   3.740079452102935*^9, 3.740079466112453*^9}, {3.7401365775589037`*^9, 
   3.740136603152959*^9}},
 CellLabel->"Out[66]=",ExpressionUUID->"da0301f7-0c0d-468f-83c6-6ba29bad7544"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"cleanBags", "=", 
   RowBox[{"Replace", "[", 
    RowBox[{"bags", ",", 
     RowBox[{
      RowBox[{"word_", "/;", 
       RowBox[{"Not", "@", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"keepers", ",", "word"}], "]"}]}]}], "\[Rule]", "Nothing"}], 
     ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739980441060898*^9, 3.7399807340327406`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"2a105273-1fcf-4a46-8e66-1679b0986b32"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cleanBags", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.740061637597447*^9, 3.740061638284346*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"362ff0d7-16a4-4962-9e32-5b547013346e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Column\"\>", ",", "\<\"Table\"\>", ",", "\<\"StringTake\"\>", 
   ",", "\<\"this is about strings\"\>", ",", "\<\"n\"\>", 
   ",", "\<\"List\"\>", ",", "\<\"n\"\>", ",", "\<\"StringLength\"\>", 
   ",", "\<\"this is about strings\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.740061638719469*^9, {3.740078722064505*^9, 3.740078733122641*^9}, {
   3.740079452167906*^9, 3.74007946618635*^9}, {3.740136577729581*^9, 
   3.7401366224448833`*^9}},
 CellLabel->"Out[70]=",ExpressionUUID->"e2c56cd8-3aae-4f33-86cb-f45af74fa6b7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["clustering bags", "Subsubsection",
 CellChangeTimes->{{3.739978756250889*^9, 
  3.7399787589846106`*^9}},ExpressionUUID->"dc68f418-cc9e-45ab-a092-\
f335a26bea45"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"clusters", "=", 
  RowBox[{"ClusterClassify", "[", "cleanBags", "]"}]}]], "Input",
 CellChangeTimes->{{3.739977599333147*^9, 3.739977632304909*^9}, 
   3.7399787955520325`*^9, 3.7399807511922755`*^9},
 CellLabel->"In[71]:=",ExpressionUUID->"4e3923d4-2fa9-4505-aaa2-83e47c8672ad"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NominalSequence\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "1", "2", "3", "4", "5"}, 
                   "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NominalSequence\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "1", "2", "3", "4", "5"}, 
                   "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DBSCAN\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["876", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[
   Association[
   "ExampleNumber" -> 876, "ClassNumber" -> 5, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NominalSequence"]], "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NominalSequence", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"NominalSequence"}, "FeatureKeys" -> {"f1"},
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                 "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NominalSequence", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["NominalSequenceToTFIDFVector", 
            Association[
            "Invertibility" -> "Impossible", "Missing" -> "Forbidden", 
             "Input" -> Association[
              "f1" -> Association[
                "Type" -> "NominalSequence", "Weight" -> 1]], "Index" -> 
             MachineLearning`SortedHashAssociation[
               Association[
               "KeyHashes" -> {-9120730883838430413, -9099984929456963801, \
-8762583092965331944, -7778217561895407225, -7078883629618434088, \
-6271980922279368395, -5098805657553694955, -4254145421563276343, \
-3972030562397032776, -3821775083929878261, -2474209526342129261, \
-1299268234486476127, -628123487281332584, -299430757887435035, 
                 324701259323239221, 899130103803988131, 2580882722328116910, 
                 2777230985846380735, 2891516955630670096, 
                 3408017859420023313, 3519953337790515962, 
                 3918572735395546423, 4451351604230948596, 
                 4678844670452502939, 5073337931601975156, 
                 6186363346046951980, 6466232991123149127, 
                 6701157770265530018, 7322032688525261945, 
                 9102422861376318254}, "Values" -> None, "DefaultValue" -> -1,
                 "HashFunction" -> 
                Function[{
                  MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$}, 
                  Switch[
                  MachineLearning`file132SortedHashAssociation`PackagePrivate`\
keys$, {
                    BlankSequence[String]}, 
                   Data`StringHash[
                   MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, "Murmur3-64"], 
                   PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    1]& ], MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 
                   PatternTest[
                    Blank[], 
                    MachineLearning`PackageScope`PackedArrayQ[#, Integer, 
                    2]& ], 
                   
                   Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^48], 2^32], 
                    Quotient[
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^32], 2^16], 
                    Mod[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    MachineLearning`PackageScope`ToPackedArray[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q], {1, 3, 2}]; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Transpose[
                    Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q, 1]]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                   Blank[List], 
                   Map[Switch[#, 
                    Blank[String], 
                    Data`StringHash[#, "Murmur3-64"], 
                    PatternTest[
                    Blank[], Developer`MachineIntegerQ], #, {
                    PatternTest[
                    BlankSequence[], Developer`MachineIntegerQ]}, 
                    
                    Block[{MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q}, 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = {
                    Quotient[#, 2^48], 
                    Quotient[
                    Mod[#, 2^48], 2^32], 
                    Quotient[
                    Mod[#, 2^32], 2^16], 
                    Mod[#, 2^16]}; 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q = Flatten[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]; Data`StringHash[
                    FromCharacterCode[
                    Abs[
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`q]], "Murmur3-64"]], 
                    Blank[], 
                    Data`StringHash[
                    StringJoin[
                    ToString[#, InputForm], "Cn.i9)P$"], "Murmur3-64"]]& , 
                    MachineLearning`file132SortedHashAssociation`\
PackagePrivate`keys$]]], "Version" -> {11.3, 0}]], 
             "InverseDocumentFrequency" -> {-0.916290731874155, 
              2.7256718024520294`, -1.0986122886681098`, 0.28768207245178085`,
               1.8082887711792655`, 3.2255203675868693`, 
              0., -1.2039728043259361`, 
              0.550046336919272, -0.8362480242006186, -1.0033021088637848`, \
-0.1823215567939546, -0.1823215567939546, 
              0.42744401482693956`, -0.6931471805599453, 0.6931471805599453, 
              3.3250360206965914`, 
              3.2308043957334744`, -0.6931471805599453, -0.5679840376059393, \
-0.3101549283038396, 3.0819099697950434`, 
              3.2334359761995306`, -0.7621400520468967, 0.31237468504215243`, 
              0., 3.2490816669252665`, 
              2.9479416097176423`, -0.456758402495715, -0.2657031657330058}, 
             "Version" -> {11.3, 0}, "ID" -> 7159757439732039027, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {-0.0012889310456588561`, 
              0.16562516271289993`, -0.0026887171913356684`, 
              0.0021956504354805383`, 0.04443982619007328, 0.2975616010706884,
               0., -0.0014066165051782537`, 
              0.007399656041551858, -0.00199666292586617, \
-0.0013738325003909274`, -0.0011524405663494671`, -0.0010565418291213129`, 
              0.004487021881221858, -0.0015929920460623186`, 
              0.009289030265496528, 0.37156285110000664`, 
              0.4998580863494113, -0.0016475826901181686`, \
-0.002421886441587233, -0.0012291260806763908`, 0.4843234364768933, 
              0.30134229126365975`, -0.0009908783868713673, 
              0.0013864813266105586`, 0., 0.32885743470020123`, 
              0.2051867528668729, -0.001340508411908911, \
-0.000802762825652713}, 
             "StandardDeviation" -> {0.011251819992352157`, 
              0.17299969116257335`, 0.025027501634389226`, 
              0.010543027847332626`, 0.08831422939521524, 
              0.15639085495646576`, 1., 0.01470301177896486, 
              0.03005769922057038, 0.017262712847843108`, 
              0.012766077679522543`, 0.006892721731165625, 
              0.006282385565793407, 0.02079834833315881, 
              0.014860996486146865`, 0.03501814995560937, 
              0.18158683538713863`, 0.2639265675747757, 0.013413307104023548`,
               0.01734232873990319, 0.008966401495993322, 0.2889522698808486, 
              0.1396264968278974, 0.0079847397223387, 0.007594439440898358, 
              1., 0.17103005939038388`, 0.16428696090043804`, 
              0.009466950990895596, 0.005047494176043847}, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 5924879897518657909]], 
           MachineLearning`MLProcessor["DimensionReduceNumericalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Reducer" -> 
             Normal, "Version" -> {11.3, 0}, "ID" -> 735659281909947162, 
             "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]]]]}, 
         "Invertibility" -> "Impossible", "Missing" -> "Forbidden"]]], 
    "Output" -> Association[
     "Preprocessor" -> MachineLearning`MLProcessor["Identity", 
        Association["Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
      "Processor" -> MachineLearning`MLProcessor["Identity", 
        Association["Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
      "ProbabilityPostprocessor" -> Identity, "Name" -> "class", "Marginal" -> 
      Association[1 -> 1., 2 -> 1., 3 -> 1., 4 -> 1., 5 -> 1.]], "Prior" -> 
    Automatic, "Utility" -> 
    SparseArray[
     Automatic, {5, 6}, 0., {
      1, {{0, 2, 4, 6, 8, 10}, {{1}, {2}, {1}, {3}, {1}, {4}, {1}, {5}, {1}, {
        6}}}, {DirectedInfinity[-1], 1., DirectedInfinity[-1], 1., 
        DirectedInfinity[-1], 1., DirectedInfinity[-1], 1., 
        DirectedInfinity[-1], 1.}}], "Threshold" -> 0., "TieBreaker" -> 
    RandomChoice, "PerformanceGoal" -> Automatic, "Model" -> 
    Association[
     "Method" -> "DBSCAN", "NearestFunction" -> 
      Association["Representatives" -> {CompressedData["
1:eJxTTMoPSmViYGAQAWI5INZy2p0QFbzXXod19zJjj8f2Po/KL01o2G3vIWhp
p7zi1P63p3jSLaUe7K9+nTiZ+fpBewYoeMaauG1P7Q77HcH57x42nd8fIXN/
r8ycvfY3kqvnb+vZbb9x25q7m9OO2k+49S70SNtR++1/e3dFzD29X0W0kelv
wW77uG1Gn4V+Xdh/dtnDuyW3zu5PLFZ62vjtgX1KXZL+q8L99sxZOrulHxy0
FzR6kvyw+6B99uL48ntPb9tff2o+h8XmoH03r6jgqSP77TO3Bf7wiTu+H+au
baU6V98VL93/iY/n4+JHD+zdYu+mvJA/ZN+jbnioOvqI/ah/R/076t9R/476
d9S/o/4d9e+of0f9O+pf0v0re6p/T5jUP5z+5bE99FXi6rL91Pbvw41JB20S
b+5/cO3BD6HPl3H695HboQvXCs7bKzc/1HbO3LQfl39bOo239/Ce3u/wZore
27bro/E7Gr8jIn5Hmn9H0/PwjF8AEjRIIA==
          "], CompressedData["
1:eJxTTMoPSmViYGAQAGI5INZy2p0QFbzXftn7uhunF73b7/Oo/NKEht32HoKW
dsorTu1/e4on3VLqwf53bdFbJT2u2zNAwTPWxG17anfY7wjOf/ew6fz+CJn7
e2Xm7LW/kVw9f1vPbvuN29bc3Zx21H7CrXehR9qO2m//27srYu7p/SqijUx/
C3bbx20z+iz068L+ItmXe9dlLNx/SnxH6Yqal/YpdUn6rwr32zNn6eyWfnDQ
XtDoSfLD7oP2nbPzC2wSnto/+xCnprLvhn03r6jgqSP77TO3Bf7wiTu+H+Yu
i8On8t6KH7W/y9PE8lfxub1b7N2UF/KH7HvUDQ9VRx+xH/XvqH9H/Tvq3+Hm
3+rXiZOZrx+kun/PLnt4t+TW2f2JxUpPG789wOnf7MXx5fee3ra//tR8DovN
QZz+3Vaqc/Vd8dL9n/h4Pi5+9GDUv6PpedS/o/4d9e+of0f9O+pfuvsXAGm9
ZO8=
          "], CompressedData["
1:eJxTTMoPSmViYGBgAWI5INZy2p0QFbzXftn7uhunF73b7/Oo/NKEht32HoKW
dsorTu2vit1eWmvE4PCYfV+Q/Ywn9gxQ8Iw1cdue2h32O4Lz3z1sOr8/Qub+
Xpk5e+1vJFfP39az237jtjV3N6cdtZ9w613okbaj9tv/9u6KmHt6v4poI9Pf
gt32cduMPgv9urD/3rdVizmLTtv7ldjvL669sT+lLkn/VeF+e+Ysnd3SDw7a
Cxo9SX7YfdCedwrP+n+L3tn/354UcyLnmX03r6jgqSP77TO3Bf7wiTu+H+au
mcsMtk3hum0vnZ/Ttu335/1usXdTXsgfsu9RNzxUHX3EftS/o/4dTv4FACqU
2jU=
          "], CompressedData["
1:eJxTTMoPSmViYGDgAGI5INZy2p0QFbzX/u1Ktb01R17Y+zwqvzShYbe9h6Cl
nfKKU/tTtkt80/r82/5dW/RWSY/r9gxQ8Iw1cdue2h32O4Lz3z1sOr8/Qub+
Xpk5e+1vJFfP39az237jtjV3N6cdtZ9w613okbaj9tv/9u6KmHt6v4poI9Pf
gt32cduMPgv9urC/SPbl3nUZC/e/PJP3xLj/4f6UuiT9V4X77ZmzdHZLPzho
L2j0JPlh90H7ztn5BTYJT+2ffYhTU9l3w76bV1Tw1JH99pnbAn/4xB3fD3OX
xeFTeW/Fj9pL5+e0bfv9eb9b7N2UF/KH7HvUDQ9VRx+xH/XvyPBvvV3tyTM+
jA7o/q3LeGC8KumHffXrxMnM1w9S3b9nlz28W3Lr7H65+Tt13C89xenf7MXx
5fee3ra//tR8DovNQZz+3Vaqc/Vd8dL9o/E76t9R/w4//wIAeJm7Tg==
          
          "], CompressedData["
1:eJxTTMoPSmViYGAQAWI5INZy2p0QFbzX/oHA5pCPXCwOPo/KL01o2G3vIWhp
p7zi1P6U7RLftD7/tt8ys2VSfOG//QxQ8Iw1cdue2h32O4Lz3z1sOr8/Qub+
Xpk5e+1vJFfP39az237jtjV3N6cdtZ9w613okbaj9tv/9u6KmHt6v4poI9Pf
gt32cduMPgv9urC/SPbl3nUZC/e/PJP3xLj/4f6UuiT9V4X77ZmzdHZLPzho
L2j0JPlh90H7ztn5BTYJT+2ffYhTU9l3w76bV1Tw1JH99pnbAn/4xB2Hu8vi
8Km8t+JH7aXzc9q2/f683y32bsoL+UP2PeqGh6qjj9jD/Lvsfd2N04ve7Uf3
79tTPOmWUg/2V79OnMx8/aA9If92K66benej3AFi/Xt22cO7JbfO7pebv1PH
/dJTDP+eDGpa6u/LdSB7cXz5vae37a8/NZ/DYnMQp3+3lepcfVe8dP8nPp6P
ix89sMfl3/3hEl1Ns9/b4/LvY/Z9QfYznhD0L6nxe+/bqsWcRaft/Urs9xfX
3sAZv7xTeNb/W/TO/v/2pJgTOc9w+nfmMoNtU7huD/r4TSxWetr47YE9Lv9S
K36Vbl0S1VuteACXf2H5911b9FZJj+tkx+9HiczlJeEMDpTmX02Z/PP/nRkP
UJp/Bzo9n7vhJd/h+49q6XmKssY6mzfvcOZfQumZ0vild/l8l6eJ5a/ic3v9
jLP6hktEDpDqX1z1ERezn2PCMiYHdP8urzruW13Oc0CVc9/mnVH8BzIuTV0X
lcfqELZD8bvRTckDMP/ekDh66gLPQ3tFyzU/BfYcxelfv10TKkou/tpPKD2v
qNzKf/7wv/2Ulle4/CsT9uZH7D0BDP/+uGb4U0tZ8gAsfvkXOp1iMxDGyL+7
Je7snBvHcMBRu6zgcvlHnOUVtf1bb1d78owPI0Z7g5B/Yem512on25cdQgdI
Tc/o9W/PKdXs0p/CB9DrX5h/YeWzf9g6R4nlSgdw+RdX+SyU7yYqeFr+gA7r
7mXGHo9xllfo9ZHcq9hDwmwKByjNv6TWR4TiF1YfEYpfUv1LaXl19Hr2SQEb
Xgdi/Ysev5S2r96uVNtbc+QFhn+pVf+SWj5X7EkvvG4tcwDdv7RqP98pSO3w
5hd0wJV/Wy88ihJdoXXg9owr3dvY2TDKK5h/c3+/3d0aLXQAl39TPqXc9p3y
jmD9S2x51TvRJNlX4DNB/6LH75/ahllFQWwO9Kp/CfmX0v6RZPW1h8sbxA6M
1PbGQLcnl8uttj/H94lgeUWt9mTFzLZFj/W/YPg34Q3ryWXczA4GW6coCnJ+
oLp/SW1f7Rfr+rJ3+Uec/p1/Qas8VPwFxf1BXO2N969bn6Tu4cJZXr1UjVh9
WEwMZ3lVknGGgXnrD/ujhrqel40J10cE21dV6SoNV/8Q9O9IqX8BQ6A27Q==

          "]}, "ClusterAssignment" -> NearestFunction[
          Association[
          "ExampleNumber" -> 68, "FeatureNumber" -> 1, "OutputProperty" -> 
           "Label", "Labels" -> MachineLearning`MLDataset[
             Association[
             "f1" -> Association[
               "Type" -> "Numerical", "Weight" -> 1, 
                "Values" -> {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
                 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
                 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 
                 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5}, "ID" -> 
                9064586277219042480]], 
             Association[
             "ExampleNumber" -> 68, "ExampleWeights" -> 1, "RawExample" -> 
              False]], "LabelPreprocessor" -> 
           MachineLearning`MLProcessor["ToMLDataset", 
             Association[
             "Input" -> Association[
               "f1" -> Association["Type" -> "Numerical"]], "Output" -> 
              Association[
               "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
              "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                Association["Processors" -> {
                   MachineLearning`MLProcessor["List"], 
                   MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                    "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                    Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
              True, "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
           "OriginalDataset" -> Missing[], "Preprocessor" -> 
           MachineLearning`MLProcessor["ToMLDataset", 
             Association[
             "Input" -> Association[
               "f1" -> Association[
                 "Type" -> "NumericalVector", "Length" -> 30]], "Output" -> 
              Association[
               "f1" -> Association[
                 "Type" -> "NumericalVector", "Weight" -> 1]], "Preprocessor" -> 
              MachineLearning`MLProcessor["Sequence", 
                Association["Processors" -> {
                   MachineLearning`MLProcessor["List"], 
                   MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
              True, "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
           "Processor" -> MachineLearning`MLProcessor["Identity"], 
           "PostProcessor" -> MachineLearning`MLProcessor["FromMLDataset", 
             Association[
             "DatasetFormat" -> Automatic, "Input" -> 
              Association[
               "f1" -> Association[
                 "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
              Association[
               "f1" -> Association[
                 "Type" -> "NumericalVector", "Length" -> 30]], 
              "InversePreprocessor" -> MachineLearning`MLProcessor["Sequence", 
                Association["Processors" -> {
                   MachineLearning`MLProcessor["List"], 
                   MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> {1}, 
                    "ExampleWeights" -> 1]]}]], "ScalarFeature" -> True, 
              "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
           "PerformanceGoal" -> Automatic, "Missing" -> "Imputed", 
           "NearestFunction" -> NearestFunction[
             Hold[
              Nearest[CompressedData["
1:eJzt2nswXFccB/CNV4ausBQrEbIeaSsar860Ws1ZSUe1RabSiKHEs6jUWymh
omGSYKLtZiaaZExodjUyOqoWWetej53UIpSyQuiuV0lY8agSIc0f3X/snFnb
vSFjz87c//czv3O+5/c799KCY7zCVEgk0nvPHtNnj/VhTqDvMS6wUecwHd1G
gPtwcldBJge4UZwOWZTysWk+OdxptxBLexj0vaqgAZD++42rB7Hr0mtAzbEY
sSirA/Mx+ZNrcpUL+kLSith5HFDBvjVY+RkPFPSLjzfn8ED1av5tn2utmKXB
GZXVWA4IYDvM6z3uxNqZosHE/nYsKMF87MyiEIRmBNs+iMOA6uc2nD3CBkBx
GA0R5TaAqJKTyUNjA0Aw9uZVNecGkKttQOE3YyCS/fGSe8AdTPK/2Ek2PeKE
G9jcLvJsybAQuPoPhk6YNYK8V+wb0/yaAfIiL/IiL/IiL/IiL/IiL/LK793L
v1jnvXsN6iW/2/g3tYeJEe0VVQQ3OAfdw4S9wiW9+W6od9i1sbM3tgNYfCM6
cCTyFwzmPXvesTpPuxWjTzEOTucIUH1RfZWivsrmRet5e9eXOZPR11osxmBe
cY5flbGbgHBv/N5JbnnEdYxvVJNUenoS6j1/JSbWOXAMjD8K2G9Z3wf1vtXE
j5424oFBcpbaKu0v5EVe5EXebe9VtvNI2bzKtp6RF3mRF3mRF3m30pvqX52U
7kCij+ys9wKXRwn3Di3eLNGMbwWeiQBLSO/DYF5tBvnntWIxeFod/Olvp8ah
3kKmHZuhNQD2xJzKYa/MY8iLvMrgnf5pP/d084TUfV1oNXXRen4FPO+8mmyL
HnW8KIJ65c0r5FVu79eH0lva3HfQ13szIoSON4OXwPOef02Lam3e7xqDeuWd
f1F9kRd5t69XqFv5yayWmlReSby/Fp797mTcGuHvB7fKS9T9ZC6t/NJghSlO
VD63eGXdOOqhhRN9P4mdoF7IujIDfR+63frJra7vZt0/m/d3GRwso+EwL1F5
NUuNZCWeINEV3b+vmcR0PD2yA1d0/271er7b96HZOY81wtYzw+LVcucp8Qt7
n0N0Pkvuc2wj2m3tf3wZl9cLO4+0VD1dApkq9PVeVuodj7RkMm6lWV9Z66uD
R3RdKveNVqd719D+cbhnjEu8fVQev5MsAjSnW8u6dTyo1/N2QUri748xWeu5
9KsqnY6mNZn98//1mnhPLfkP6Up5l3rtl60tjHFJfXWuH+Zr2OlL7V8O9X7t
tQAS7nLgy9ju5FloXhHthc1HsryS9Zz/dq3GQo0eruh8lMe3ikpa1sfXn78S
rySfj3qXu1BZ5jjMC8tnvRhXA0qrGS7v90imD/wb9TX24Zv9PlRWfTc6D272
91c8QVSLrrM2faPe9fVVtL960eaFlLrwOME7Jvh67/Pqn+/Hhp37SIdCh+3f
7M5hX4NSa3zg8h+57J0aUnkl8X6xMs3J9tPDYd7QudABD4ZY5vm70bzK//aN
EA/debnnwSfpmT/Ee2nQN+v8leVVdD4yTusVsTINcWXtN7a6n2SZloG7u+Zk
5hVR/WRKYU7xiO2ClDdwSr2F+ZIq3a6KQaNoPiLcK29/hRleWOCyZqHeok7r
5ONGEwrPg7B+Y+Zh9mhYnRY0ryatfMqaDA2heZUY0UZSrVoCPPvXP+h2lH0e
yeyvUsMtM3ueyPQqy/n7L7pBcnU=
                "] -> "Index", DistanceFunction -> 
               EuclideanDistance, WorkingPrecision -> Automatic, Method -> 
               Automatic]]], "DistanceFunction" -> EuclideanDistance]], 
        "Parameters" -> 
        Association[
         "Priors" -> {1., 1., 1., 1., 1.}, "Covariance" -> {1, 1, 1, 1, 1}]], 
      "PerformanceGoal" -> Automatic, "DistanceFunction" -> EuclideanDistance,
       "FeatureNumber" -> 1, "Processor" -> 
      MachineLearning`MLProcessor["Identity", 
        Association["Invertibility" -> "Perfect", "Missing" -> "Allowed"]]], 
    "Log" -> Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "NominalSequence", "Weight" -> 1, 
           "Values" -> {{
             "Column", "Table", "StringTake", "this is about strings", "List",
               "1", "21", "1"}}, "ID" -> 4635246341379078022]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> False]], 
      "TrainingTime" -> 2.790205, "MaxTrainingMemory" -> 14481536, 
      "DataMemory" -> 386168, "FunctionMemory" -> 101912, 
      "LanguageVersion" -> {11.3, 0}, "Date" -> 
      DateObject[{2018, 7, 9, 10, 50, 47.705104`8.431139823314673}, "Instant",
         "Gregorian", -4.], "ProcessorCount" -> 4, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.739978804581107*^9, 3.7399807567378273`*^9, 3.740061684596867*^9, 
   3.740078758138796*^9, {3.740079454779873*^9, 3.740079473376967*^9}, 
   3.740136647750185*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"6b873c6c-b416-46fc-b720-da75dad718dd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"groups", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "->", 
       RowBox[{"clusters", "@", "#"}]}], "&"}], ",", "cleanBags"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.739977677341282*^9, 3.7399777495483513`*^9}, {
  3.7399787822738876`*^9, 3.73997879378697*^9}, {3.7399807631425714`*^9, 
  3.7399807644080625`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"6611ddd0-6b3c-4dfb-96ab-d28c07554639"],

Cell[BoxData[
 RowBox[{
  RowBox[{"grouped", "=", 
   RowBox[{
    RowBox[{"GroupBy", "[", 
     RowBox[{"groups", ",", "Last"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7399777575463057`*^9, 3.739977790919878*^9}, {
   3.739977825644085*^9, 3.739977901731714*^9}, 3.7399807669385376`*^9},
 CellLabel->"In[73]:=",ExpressionUUID->"644252ff-a1e1-48d0-bc3b-ab4808048653"],

Cell[BoxData[
 RowBox[{
  RowBox[{"representatives", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"ReverseSort", "@", 
         RowBox[{"Counts", "@", 
          RowBox[{"grouped", "[", "#", "]"}]}]}], ",", 
        RowBox[{"UpTo", "@", "3"}]}], "]"}], "&"}], ",", 
     RowBox[{"Keys", "@", "grouped"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7399779062228255`*^9, 3.739978037422595*^9}, {
  3.7399780689465647`*^9, 3.7399781089202256`*^9}, {3.7399809086018605`*^9, 
  3.739980943496832*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"25faf5af-15d3-43ed-8cde-37f2dd860b8d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Union", "[", 
       RowBox[{"Flatten", "@", "#"}], "]"}], "&"}], "/@", "grouped"}], " ", "//",
     " ", "Normal"}], " ", "//", " ", "Column"}], ";"}]], "Input",
 CellChangeTimes->{{3.7399809696155043`*^9, 3.739981068300715*^9}, {
   3.740061743909761*^9, 3.740061751141489*^9}, 3.740136777562261*^9},
 CellLabel->"In[78]:=",ExpressionUUID->"0da69d2e-a1d5-4ffe-943b-381ed251fd13"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"bags", " ", "//", " ", "Flatten"}], " ", "//", " ", "Counts"}], 
    "  ", "//", " ", "Sort"}], " ", "//", " ", "Reverse"}], ";"}]], "Input",
 CellChangeTimes->{{3.740061858449588*^9, 3.74006191038897*^9}, 
   3.74013677868027*^9},
 CellLabel->"In[79]:=",ExpressionUUID->"87dabea5-bc36-4aa1-9fb5-6f5e4871430c"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Creating a function wrapper", "Subsection",
 CellChangeTimes->{{3.7399786848245087`*^9, 3.739978686839651*^9}, {
  3.740214186515505*^9, 3.740214195922049*^9}, {3.740249047948473*^9, 
  3.740249055792898*^9}},ExpressionUUID->"8ad6e9de-3a28-48f4-abe1-\
5959c193a751"],

Cell[CellGroupData[{

Cell["take in student submissions, output a classifier function", \
"Subsubsection",
 CellChangeTimes->{{3.739978672358926*^9, 3.739978674998866*^9}, {
  3.7399787241231046`*^9, 3.7399787272473497`*^9}, {3.740215069942616*^9, 
  3.7402150778935013`*^9}},ExpressionUUID->"1b167a1a-0d2d-420a-9597-\
67a3c84a6a97"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fillBags", "[", "expr_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Level", "[", 
      RowBox[{"expr", ",", 
       RowBox[{"{", 
        RowBox[{"-", "1"}], "}"}], ",", 
       RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}], "/.", 
     RowBox[{
      RowBox[{
      "ExpressionCell", "|", "HoldComplete", "|", "CompoundExpression", " ", 
       "|", "ErrorBox", " ", "|", "  ", "Null", "|", "\"\<[\>\"", "|", 
       "\"\<]\>\"", "|", "\"\<,\>\"", "|", "\"\< \>\"", "|", "RowBox"}], 
      "\[Rule]", "Nothing"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"submissionsToBags", "[", "submissions_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "submittedCells", ",", " ", "justCellData", ",", " ", "expressions", 
       ",", " ", "bags"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"submittedCells", "=", 
       RowBox[{"Normal", "@", 
        RowBox[{"submissions", "[", 
         RowBox[{"All", ",", "\"\<UserSubmission\>\""}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"justCellData", "=", 
       RowBox[{"submittedCells", "/.", 
        RowBox[{
         RowBox[{"Cell", "[", 
          RowBox[{"a_", ",", "___"}], "]"}], "\[RuleDelayed]", 
         RowBox[{"Cell", "[", "a", "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"expressions", "=", 
       RowBox[{"MakeExpression", "[", 
        RowBox[{"justCellData", ",", "StandardForm"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bags", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"ToString", ",", 
         RowBox[{"fillBags", "/@", "expressions"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "bags"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"classifyThese", "[", 
    RowBox[{"classifier_", ",", " ", "commonWords_"}], "]"}], "[", 
   "submissions_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "submittedCells", ",", "justCellData", ",", "  ", "expressions", ",", 
      " ", "bags", ",", " ", "cleanBags", ",", " ", "clusterNums"}], "}"}], 
    ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"bags", "=", 
      RowBox[{"submissionsToBags", "[", "submissions", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cleanBags", "=", 
      RowBox[{"Replace", "[", 
       RowBox[{"bags", ",", 
        RowBox[{
         RowBox[{"word_", "/;", 
          RowBox[{"Not", "@", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"commonWords", ",", "word"}], "]"}]}]}], "\[Rule]", 
         "Nothing"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"clusterNums", " ", "=", " ", 
      RowBox[{"classifier", " ", "/@", " ", "cleanBags"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"bags", ",", "cleanBags", ",", " ", "clusterNums"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.740215338043229*^9, 3.740215448449596*^9}, {
   3.740215489041768*^9, 3.740215523656178*^9}, 3.740215555749539*^9, {
   3.740215594076481*^9, 3.740215597059746*^9}, {3.740216220403799*^9, 
   3.740216333174816*^9}, {3.740216472032611*^9, 3.740216554772488*^9}, {
   3.7402170122339582`*^9, 3.740217014217557*^9}, {3.740217193419097*^9, 
   3.7402172140608187`*^9}, {3.74021761129812*^9, 3.740217623011524*^9}, {
   3.740217854946808*^9, 3.740217868304779*^9}, {3.740217900634581*^9, 
   3.740217901785638*^9}, 3.740228206317614*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"c6df268a-bd58-4567-a900-547b764a5d3a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"codeClassiferBuilder", "[", "submissions_", "]"}], " ", ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "submittedCells", ",", " ", "justCellData", ",", " ", "expressions", ",",
       " ", "goodSyntax", ",", " ", "bags", ",", " ", "words", ",", " ", 
      "howManyBagsAreYouIn", ",", " ", "commonWords", ",", " ", "cleanBags", 
      ",", " ", "myClassifier"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"bags", "=", 
      RowBox[{"submissionsToBags", "[", "submissions", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"goodSyntax", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"bags", ",", 
        RowBox[{"FreeQ", "[", "ErrorBox", "]"}]}], "]"}]}], ";", " ", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"words", " ", "=", "  ", 
      RowBox[{"Union", "@", 
       RowBox[{"Flatten", "@", "goodSyntax"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"howManyBagsAreYouIn", "=", 
      RowBox[{"AssociationMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Count", "[", 
          RowBox[{"bags", ",", 
           RowBox[{"{", 
            RowBox[{"___", ",", "#", ",", "___"}], "}"}], ",", 
           RowBox[{"{", "1", "}"}]}], "]"}], "&"}], ",", "words"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"commonWords", "=", 
      RowBox[{"Keys", "@", 
       RowBox[{"Select", "[", 
        RowBox[{"howManyBagsAreYouIn", ",", 
         RowBox[{
          RowBox[{"#", ">", 
           RowBox[{"0.03", 
            RowBox[{"Length", "@", "goodSyntax"}]}]}], "&"}]}], "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"cleanBags", "=", 
      RowBox[{"Replace", "[", 
       RowBox[{"bags", ",", 
        RowBox[{
         RowBox[{"word_", "/;", 
          RowBox[{"Not", "@", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"commonWords", ",", "word"}], "]"}]}]}], "\[Rule]", 
         "Nothing"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"myClassifier", " ", "=", " ", 
      RowBox[{"ClusterClassify", "[", "cleanBags", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"classifyThese", "[", 
      RowBox[{"myClassifier", ",", " ", "commonWords"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.740215099430396*^9, 3.740215330841464*^9}, {
  3.7402155485849743`*^9, 3.7402155999086313`*^9}, {3.740215757605654*^9, 
  3.740215759102676*^9}, {3.740216349304*^9, 3.7402163499747143`*^9}, {
  3.740216561591592*^9, 3.740216593968738*^9}, {3.7402174244271603`*^9, 
  3.740217448362365*^9}, {3.740234550470499*^9, 3.740234550586421*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"f8363bc8-c60a-4ce9-a290-ea9f68192642"]
}, Closed]],

Cell[CellGroupData[{

Cell["example of how this is used", "Subsubsection",
 CellChangeTimes->{{3.739978672358926*^9, 3.739978674998866*^9}, {
  3.7399787241231046`*^9, 3.7399787272473497`*^9}, {3.740215069942616*^9, 
  3.7402150778935013`*^9}, {3.740215635821165*^9, 
  3.7402156396770897`*^9}},ExpressionUUID->"b39f1234-6125-4c0d-93fc-\
6d1959b5221d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myclassifier", " ", "=", " ", 
   RowBox[{"codeClassiferBuilder", "[", "probdata", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739977677341282*^9, 3.7399777495483513`*^9}, {
  3.7399787822738876`*^9, 3.73997879378697*^9}, {3.7399807631425714`*^9, 
  3.7399807644080625`*^9}, {3.740215644712659*^9, 3.740215679757139*^9}, {
  3.7402174596336927`*^9, 3.7402174601651897`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"a4be365e-ea7c-400b-9cec-75a65223ab12"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"bags", ",", " ", "cleanBags", ",", " ", "clusterNums"}], "}"}], 
   " ", "=", " ", 
   RowBox[{"myclassifier", "[", "probdata", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7402163711950827`*^9, 3.740216378558198*^9}, {
  3.740217056062847*^9, 3.740217057444968*^9}, {3.740217164931431*^9, 
  3.740217175916561*^9}, {3.7402172287353287`*^9, 3.7402172415302753`*^9}, {
  3.74021763290385*^9, 3.7402176339749002`*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->
  "In[208]:=",ExpressionUUID->"20b0f97f-dd03-4154-8d67-3ff471b32e41"],

Cell[BoxData[
 RowBox[{
  RowBox[{"groupMap", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"cleanBags", "[", 
        RowBox[{"[", "#", "]"}], "]"}], "\[Rule]", 
       RowBox[{"clusterNums", "[", 
        RowBox[{"[", "#", "]"}], "]"}]}], "&"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "clusterNums", "]"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7402158115939817`*^9, 3.740215824098955*^9}, {
   3.740215911703989*^9, 3.740215946270644*^9}, {3.740215977466961*^9, 
   3.74021597936609*^9}, {3.740216045127236*^9, 3.740216045944427*^9}, {
   3.7402163409944983`*^9, 3.740216360497692*^9}, {3.740216455507968*^9, 
   3.740216465291183*^9}, 3.740217148820756*^9, {3.7402173457526617`*^9, 
   3.740217355251388*^9}, 3.740217705552347*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"8b9d89bf-ff5b-4b67-a0eb-30cf11d3cea2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"grouped", "=", 
   RowBox[{
    RowBox[{"GroupBy", "[", 
     RowBox[{"groupMap", ",", "Last"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7399777575463057`*^9, 3.739977790919878*^9}, {
   3.739977825644085*^9, 3.739977901731714*^9}, 3.7399807669385376`*^9, 
   3.740217362773679*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"71fead0a-e71d-44e6-9fb4-91eb4689a438"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Union", "[", 
      RowBox[{"Flatten", "@", "#"}], "]"}], "&"}], "/@", "grouped"}], " ", "//",
    " ", "Normal"}], " ", "//", " ", "Column"}]], "Input",
 CellChangeTimes->{{3.7399809696155043`*^9, 3.739981068300715*^9}, {
   3.740061743909761*^9, 3.740061751141489*^9}, 3.740136777562261*^9, 
   3.7402175779102583`*^9},
 CellLabel->
  "In[203]:=",ExpressionUUID->"72ec6e25-b971-400f-bf16-29fd375a532f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"3", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\<\"0\"\>", ",", "\<\"0.2\"\>", ",", "\<\"1\"\>", 
        ",", "\<\"Graphics3D\"\>", ",", "\<\"h\"\>", ",", "\<\"Hue\"\>", 
        ",", "\<\"ImageCollage\"\>", ",", "\<\"List\"\>", ",", "\<\"n\"\>", 
        ",", "\<\"Sphere\"\>", ",", "\<\"Style\"\>", ",", "\<\"Table\"\>"}], 
       "}"}]}]},
    {
     RowBox[{"4", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\<\"0\"\>", ",", "\<\"0.2\"\>", ",", "\<\"1\"\>", 
        ",", "\<\"Graphics\"\>", ",", "\<\"Graphics3D\"\>", ",", "\<\"h\"\>", 
        ",", "\<\"Hue\"\>", ",", "\<\"ImageCollage\"\>", ",", "\<\"List\"\>", 
        ",", "\<\"n\"\>", ",", "\<\"Sphere\"\>", ",", "\<\"Style\"\>", 
        ",", "\<\"Table\"\>", ",", "\<\"x\"\>"}], "}"}]}]},
    {
     RowBox[{"2", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\<\"0\"\>", ",", "\<\"0.2\"\>", ",", "\<\"1\"\>", 
        ",", "\<\"Graphics3D\"\>", ",", "\<\"Hue\"\>", 
        ",", "\<\"ImageCollage\"\>", ",", "\<\"List\"\>", 
        ",", "\<\"Sphere\"\>", ",", "\<\"Style\"\>", ",", "\<\"Table\"\>", 
        ",", "\<\"x\"\>"}], "}"}]}]},
    {
     RowBox[{"1", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\<\"0\"\>", ",", "\<\"0.2\"\>", ",", "\<\"1\"\>", 
        ",", "\<\"Graphics3D\"\>", ",", "\<\"h\"\>", ",", "\<\"Hue\"\>", 
        ",", "\<\"ImageCollage\"\>", ",", "\<\"List\"\>", 
        ",", "\<\"Sphere\"\>", ",", "\<\"Style\"\>", ",", "\<\"Table\"\>"}], 
       "}"}]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.7402503035316*^9},
 CellLabel->
  "Out[203]=",ExpressionUUID->"ca7e230a-2565-4a82-9515-3f8364d4421a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Union", "[", 
       RowBox[{"Flatten", "@", "#"}], "]"}], "&"}], "/@", "grouped"}], " ", 
    ")"}], "[", 
   RowBox[{"[", "3", "]"}], "]"}], " ", "//", " ", "InputForm"}]], "Input",
 CellChangeTimes->{{3.7402177579426928`*^9, 3.740217819833392*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"20f6747d-169c-48b4-91f0-61fed19ad82b"],

Cell["\<\
{\"0\", \"0.2\", \"1\", \"Graphics3D\", \"Hue\", \"ImageCollage\", \"List\", \
\"Sphere\", \"Style\", 
 \"Table\", \"x\"}\
\>", "Output",
 CellChangeTimes->{{3.740217759440092*^9, 3.7402177711829147`*^9}, {
   3.7402178082277308`*^9, 3.7402178201707497`*^9}, 3.740234067900428*^9, 
   3.7402503126928167`*^9},
 CellLabel->
  "Out[204]//InputForm=",ExpressionUUID->"2d1a34c0-40d3-436e-8253-\
d19d661dda98"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"bags", " ", "//", " ", "Flatten"}], " ", "//", " ", "Counts"}], 
   "  ", "//", " ", "Sort"}], " ", "//", " ", "Reverse"}]], "Input",
 CellChangeTimes->{{3.740061858449588*^9, 3.74006191038897*^9}, 
   3.74013677868027*^9, {3.7402503149077272`*^9, 3.7402503155653563`*^9}, 
   3.740250349081458*^9},
 CellLabel->
  "In[211]:=",ExpressionUUID->"720df06f-cb8f-4dd9-b89c-c7886f51069c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"List\"\>", "\[Rule]", "459"}], ",", 
   RowBox[{"\<\"0\"\>", "\[Rule]", "362"}], ",", 
   RowBox[{"\<\"Hue\"\>", "\[Rule]", "362"}], ",", 
   RowBox[{"\<\"ImageCollage\"\>", "\[Rule]", "362"}], ",", 
   RowBox[{"\<\"Sphere\"\>", "\[Rule]", "361"}], ",", 
   RowBox[{"\<\"1\"\>", "\[Rule]", "357"}], ",", 
   RowBox[{"\<\"Table\"\>", "\[Rule]", "356"}], ",", 
   RowBox[{"\<\"0.2\"\>", "\[Rule]", "355"}], ",", 
   RowBox[{"\<\"Graphics3D\"\>", "\[Rule]", "348"}], ",", 
   RowBox[{"\<\"Style\"\>", "\[Rule]", "317"}], ",", 
   RowBox[{"\<\"n\"\>", "\[Rule]", "267"}], ",", 
   RowBox[{"\<\"h\"\>", "\[Rule]", "225"}], ",", 
   RowBox[{"\<\"x\"\>", "\[Rule]", "138"}], ",", 
   RowBox[{"\<\"4\"\>", "\[Rule]", "20"}], ",", 
   RowBox[{"\<\"Graphics\"\>", "\[Rule]", "18"}], ",", 
   RowBox[{"\<\"hue\"\>", "\[Rule]", "15"}], ",", 
   RowBox[{"\<\"\[IndentingNewLine]\"\>", "\[Rule]", "13"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", "10"}], ",", 
   RowBox[{"\<\"t\"\>", "\[Rule]", "8"}], ",", 
   RowBox[{"\<\"r\"\>", "\[Rule]", "6"}], ",", 
   RowBox[{"\<\"Disk\"\>", "\[Rule]", "6"}], ",", 
   RowBox[{"\<\"{\"\>", "\[Rule]", "6"}], ",", 
   RowBox[{"\<\"k\"\>", "\[Rule]", "6"}], ",", 
   RowBox[{"\<\"}\"\>", "\[Rule]", "5"}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"RandomColor\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"Times\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"m\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"color\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"0.1\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"f\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"1.\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"p\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"Range\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"Slot\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"Function\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"Map\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"v\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\".2\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"Image\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"200\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"False\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"Boxed\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"Rule\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"0.8\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"0.6\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"0.4\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"0.\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"Grahics3D\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"DGraphics\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"3\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"  \"\>", "\[Rule]", "1"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.740250349594675*^9},
 CellLabel->
  "Out[211]=",ExpressionUUID->"41496260-5575-425a-adf7-0d162efcf6c7"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Getting cluster centers", "Subsection",
 CellChangeTimes->{{3.7399786848245087`*^9, 3.739978686839651*^9}, {
   3.740214186515505*^9, 3.740214195922049*^9}, {3.7402180072091846`*^9, 
   3.740218011835105*^9}, 
   3.7402506014788027`*^9},ExpressionUUID->"d10932e9-c835-486d-a820-\
e47f09513a0d"],

Cell[CellGroupData[{

Cell["Identifying cluster centers - starting with binaries", "Subsubsection",
 CellChangeTimes->{{3.740222197214349*^9, 3.740222199629609*^9}, {
  3.740250365327087*^9, 3.740250370174865*^9}, {3.7402505249077177`*^9, 
  3.740250527835404*^9}},ExpressionUUID->"e70d13bf-d8ae-403d-95cc-\
7476f913a01e"],

Cell["\<\
This association can actually be a first cut at cluster centers\
\>", "Text",
 CellChangeTimes->{{3.7402180342473288`*^9, 
  3.740218041151758*^9}},ExpressionUUID->"d932eb13-d5f8-4ebc-ae5b-\
c825e5651957"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"centers", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Union", "[", 
      RowBox[{"Flatten", "@", "#"}], "]"}], "&"}], "/@", "grouped"}], " ", "//",
    " ", "Normal", " "}]}]], "Input",
 CellChangeTimes->{{3.740218044896673*^9, 3.740218045666976*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"31187d30-e81b-4a2e-9c10-b1c803dccf1a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"1\"\>", ",", "\<\"100\"\>", ",", "\<\"99\"\>", 
      ",", "\<\"Join\"\>", ",", "\<\"List\"\>", ",", "\<\"ListPlot\"\>", 
      ",", "\<\"Range\"\>", ",", "\<\"Reverse\"\>", ",", "\<\"Times\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"1", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"1\"\>", ",", "\<\"100\"\>", ",", "\<\"Join\"\>", 
      ",", "\<\"ListPlot\"\>", ",", "\<\"Range\"\>", ",", "\<\"Reverse\"\>", 
      ",", "\<\"Times\"\>"}], "}"}]}], ",", 
   RowBox[{"6", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"1\"\>", ",", "\<\"100\"\>", ",", "\<\"99\"\>", 
      ",", "\<\"Join\"\>", ",", "\<\"List\"\>", ",", "\<\"ListLinePlot\"\>", 
      ",", "\<\"ListPlot\"\>", ",", "\<\"Plot\"\>", ",", "\<\"Range\"\>", 
      ",", "\<\"Reverse\"\>", ",", "\<\"Times\"\>"}], "}"}]}], ",", 
   RowBox[{"4", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"100\"\>", ",", "\<\"Join\"\>", ",", "\<\"Plot\"\>", 
      ",", "\<\"Range\"\>", ",", "\<\"Reverse\"\>", ",", "\<\"Times\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"5", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"100\"\>", ",", "\<\"99\"\>", ",", "\<\"Join\"\>", 
      ",", "\<\"List\"\>", ",", "\<\"Plot\"\>", ",", "\<\"Range\"\>", 
      ",", "\<\"Reverse\"\>"}], "}"}]}], ",", 
   RowBox[{"3", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"1\"\>", ",", "\<\"100\"\>", ",", "\<\"ListPlot\"\>", 
      ",", "\<\"Range\"\>", ",", "\<\"Reverse\"\>", ",", "\<\"Times\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "}"}], "\[Rule]", 
    RowBox[{"{", "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.740218046038826*^9},
 CellLabel->
  "Out[175]=",ExpressionUUID->"f4040d89-bf08-440d-8838-b6f06368f264"]
}, Open  ]],

Cell["\<\
We want to convert these lists to vectors / counts (and later move them to \
actual means over the sets and not binaries.  But for now -)\
\>", "Text",
 CellChangeTimes->{{3.740218061024139*^9, 
  3.7402180803477373`*^9}},ExpressionUUID->"d7d676dc-5259-4864-a365-\
d95667df764d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"keywords", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"centers", " ", "//", " ", "Values"}], " ", "//", " ", 
    "Flatten"}], " ", "//", " ", "Union"}]}]], "Input",
 CellChangeTimes->{{3.740218091124586*^9, 3.740218113549102*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"3848ba59-58e2-4f27-8ae8-8600fc554c2c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"1\"\>", ",", "\<\"100\"\>", ",", "\<\"99\"\>", 
   ",", "\<\"Join\"\>", ",", "\<\"List\"\>", ",", "\<\"ListLinePlot\"\>", 
   ",", "\<\"ListPlot\"\>", ",", "\<\"Plot\"\>", ",", "\<\"Range\"\>", 
   ",", "\<\"Reverse\"\>", ",", "\<\"Times\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.740218094191708*^9, 3.7402181147289133`*^9}},
 CellLabel->
  "Out[178]=",ExpressionUUID->"8169855a-c26b-48de-b54b-41b77c77b79c"]
}, Open  ]],

Cell["\<\
We want to map a list of words to a vector, indexed by the list of keywords, \
that indicates whether each keyword is contained in the list.  i.e. \
toVector[{a,b,c},{a,f,e,d,c}] = {1, 0, 1}\
\>", "Text",
 CellChangeTimes->{{3.740218145446129*^9, 
  3.740218209100659*^9}},ExpressionUUID->"1aab61be-0467-4490-a155-\
f8f21695596a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ContainsAny", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<1\>\"", ",", "\"\<100\>\"", ",", "\"\<99\>\"", ",", "\"\<Join\>\"",
        ",", "\"\<List\>\"", ",", "\"\<ListPlot\>\"", ",", "\"\<Range\>\"", 
       ",", "\"\<Reverse\>\"", ",", "\"\<Times\>\""}], "}"}], ",", 
     RowBox[{"{", "#", "}"}]}], "]"}], "&"}], " ", "/@", " ", 
  "keywords"}]], "Input",
 CellChangeTimes->{{3.740218224340287*^9, 3.7402183004640217`*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"3d81d2fc-23d0-4791-9eca-a725f7991108"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "False", 
   ",", "True", ",", "False", ",", "True", ",", "True", ",", "True"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7402182896344023`*^9, 3.740218301290682*^9}},
 CellLabel->
  "Out[180]=",ExpressionUUID->"fe8835c2-3c8f-435c-ae74-a6ca73900ba5"]
}, Open  ]],

Cell["Now want to map this again", "Text",
 CellChangeTimes->{{3.740218315809218*^9, 3.740218328980584*^9}, {
  3.740250377020406*^9, 
  3.740250379110182*^9}},ExpressionUUID->"350483af-ebe9-4dd9-b4a1-\
e68dbbf6817d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"binaries", " ", "=", " ", 
  RowBox[{"Outer", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ContainsAny", "[", 
      RowBox[{"#1", ",", 
       RowBox[{"{", "#2", "}"}]}], "]"}], "&"}], ",", 
    RowBox[{"(", 
     RowBox[{"centers", " ", "//", " ", "Values"}], ")"}], ",", "keywords", 
    ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.74021885213174*^9, {3.7402192738528013`*^9, 3.740219280615741*^9}, {
   3.740219407482892*^9, 3.740219423441524*^9}, {3.7402195085224857`*^9, 
   3.7402195092658873`*^9}, {3.740219555211749*^9, 3.740219596999947*^9}, {
   3.740219693237054*^9, 3.740219694193556*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"3641ea4c-91b2-4806-bfba-4f4747f82e19"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "False", 
     ",", "True", ",", "False", ",", "True", ",", "True", ",", "True"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "True", ",", "True", ",", "False", ",", "True", ",", "False", ",", 
     "False", ",", "True", ",", "False", ",", "True", ",", "True", ",", 
     "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "False", ",", "True", ",", "False", ",", "True", ",", "False", ",", 
     "False", ",", "False", ",", "True", ",", "True", ",", "True", ",", 
     "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "False", ",", "True", ",", "True", ",", "True", ",", "True", ",", "False",
      ",", "False", ",", "True", ",", "True", ",", "True", ",", "False"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "True", ",", "True", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "True", ",", "False", ",", "True", ",", "True", ",", 
     "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7402183449911003`*^9, 3.740218355211075*^9}, 
   3.7402194243043947`*^9, 3.740219509803787*^9, {3.74021958723075*^9, 
   3.740219597786827*^9}, 3.740219694723007*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"0da1e883-de25-405f-9d75-4e846e561889"]
}, Open  ]],

Cell["\<\
We need to compute a covariance matrix, take the eigenvectors, and truncate \
them to approximate sparse principal component analysis\
\>", "Text",
 CellChangeTimes->{{3.740250390296132*^9, 
  3.740250408074004*^9}},ExpressionUUID->"06eaa5df-3b85-481b-8301-\
ea2583f845a9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"(", 
   RowBox[{"cov", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Dot", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", "mat", "]"}], ",", "mat"}], "]"}], "/", 
      "6"}], "//", "N"}]}], " ", ")"}], "//", " ", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"space", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Eigenvectors", "[", 
     RowBox[{"cov", ",", "3"}], "]"}], " ", "//", " ", "N"}], "  ", "//", " ",
    "MatrixForm"}]}]}], "Input",
 CellChangeTimes->{{3.74021996702374*^9, 3.740220010873179*^9}, {
   3.7402200655910053`*^9, 3.7402200657362423`*^9}, 3.740220119316032*^9, {
   3.7402202847672567`*^9, 3.740220298160886*^9}, {3.740220423266616*^9, 
   3.7402204233606997`*^9}, {3.740220454527851*^9, 3.74022045665513*^9}, {
   3.740221746889123*^9, 
   3.740221747541147*^9}},ExpressionUUID->"a2a3e7e3-74c8-4418-a2d1-\
bde246cdfbd6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.28228648891417063`"}], 
      RowBox[{"-", "0.3954793458324589`"}], 
      RowBox[{"-", "0.21916923974500474`"}], 
      RowBox[{"-", "0.33949701223905127`"}], 
      RowBox[{"-", "0.21916923974500474`"}], 
      RowBox[{"-", "0.0843899567947806`"}], 
      RowBox[{"-", "0.28228648891417063`"}], 
      RowBox[{"-", "0.1975828137130688`"}], 
      RowBox[{"-", "0.3954793458324588`"}], 
      RowBox[{"-", "0.39547934583245936`"}], 
      RowBox[{"-", "0.3375318825091393`"}]},
     {
      RowBox[{"-", "0.40826916521758316`"}], 
      RowBox[{"-", "0.005174240838947745`"}], "0.3588192752734409`", 
      "0.2478210678005186`", "0.3588192752734409`", "0.08443068907225522`", 
      RowBox[{"-", "0.40826916521758316`"}], "0.48752561345089074`", 
      RowBox[{"-", "0.005174240838947908`"}], 
      RowBox[{"-", "0.005174240838947455`"}], 
      RowBox[{"-", "0.32066285701825586`"}]},
     {"0.3187795420512114`", 
      RowBox[{"-", "0.2119089401548125`"}], "0.4844825514241854`", 
      RowBox[{"-", "0.14064121988238243`"}], "0.48448255142418545`", 
      "0.2548052304072796`", "0.3187795420512112`", 
      RowBox[{"-", "0.2758832517987443`"}], 
      RowBox[{"-", "0.2119089401548124`"}], 
      RowBox[{"-", "0.21190894015481282`"}], 
      RowBox[{"-", "0.17826692997214602`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.740219970931579*^9, 3.740220011543439*^9}, 
   3.740220081760806*^9, 3.740220120034204*^9, {3.740220292923772*^9, 
   3.740220298737537*^9}, 3.7402204237710943`*^9, 3.7402204570987587`*^9},
 CellLabel->
  "Out[223]//MatrixForm=",ExpressionUUID->"e22182a7-27b1-4450-92a0-\
157bfaa3acbe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Chop", "[", 
  RowBox[{"space", ",", ".1"}], "]"}]], "Input",
 CellChangeTimes->{{3.74022051144431*^9, 3.740220512690563*^9}, {
  3.74022057717407*^9, 3.7402206001668262`*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"e2924550-a8d5-4e4a-8895-bd51cb28814d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.28228648891417063`"}], 
      RowBox[{"-", "0.3954793458324589`"}], 
      RowBox[{"-", "0.21916923974500474`"}], 
      RowBox[{"-", "0.33949701223905127`"}], 
      RowBox[{"-", "0.21916923974500474`"}], "0", 
      RowBox[{"-", "0.28228648891417063`"}], 
      RowBox[{"-", "0.1975828137130688`"}], 
      RowBox[{"-", "0.3954793458324588`"}], 
      RowBox[{"-", "0.39547934583245936`"}], 
      RowBox[{"-", "0.3375318825091393`"}]},
     {
      RowBox[{"-", "0.40826916521758316`"}], "0", "0.3588192752734409`", 
      "0.2478210678005186`", "0.3588192752734409`", "0", 
      RowBox[{"-", "0.40826916521758316`"}], "0.48752561345089074`", "0", "0", 
      RowBox[{"-", "0.32066285701825586`"}]},
     {"0.3187795420512114`", 
      RowBox[{"-", "0.2119089401548125`"}], "0.4844825514241854`", 
      RowBox[{"-", "0.14064121988238243`"}], "0.48448255142418545`", 
      "0.2548052304072796`", "0.3187795420512112`", 
      RowBox[{"-", "0.2758832517987443`"}], 
      RowBox[{"-", "0.2119089401548124`"}], 
      RowBox[{"-", "0.21190894015481282`"}], 
      RowBox[{"-", "0.17826692997214602`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.740220513224366*^9, 3.7402205527588053`*^9, {3.740220583604966*^9, 
   3.7402206008355503`*^9}},
 CellLabel->
  "Out[228]//MatrixForm=",ExpressionUUID->"33f43317-33a5-44d5-8637-\
ae0000b958f4"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Looking at fractions not binaries", "Subsubsection",
 CellChangeTimes->{{3.740221373391859*^9, 3.7402213817816668`*^9}, {
  3.740250532934245*^9, 
  3.740250536128894*^9}},ExpressionUUID->"0257705e-baea-44d9-b408-\
16194ef39648"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"centers", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Counts", "[", 
         RowBox[{"Flatten", "@", "#"}], "]"}], "/", " ", 
        RowBox[{"Length", "[", "#", "]"}]}], " ", "//", "N"}], ")"}], "&"}], "/@",
     "grouped"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"keywords", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"centers", " ", "//", " ", "Values"}], " ", "//", " ", 
     "Flatten"}], " ", "//", " ", "Union"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7402214001846848`*^9, 
  3.7402214599146233`*^9}},ExpressionUUID->"28ec9fc7-462b-47f2-a4a4-\
dbc9a5a65e91"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"centers", " ", "//", " ", "Values"}], " ", ")"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", "#", "]"}], "&"}], " ", "/@", " ", 
  "keywords"}]], "Input",
 CellChangeTimes->{{3.740221491752101*^9, 3.740221613321267*^9}},
 CellLabel->
  "In[262]:=",ExpressionUUID->"514c96c2-ee7c-4a70-82f1-a7ac70185ad6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"allCenters", " ", "=", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Outer", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "[", "#2", "]"}], "&"}], ",", 
        RowBox[{"(", 
         RowBox[{"centers", " ", "//", " ", "Values"}], ")"}], ",", 
        "keywords", ",", "1"}], "]"}], " ", "/.", " ", 
      RowBox[{
       RowBox[{"Missing", "[", "___", "]"}], "\[Rule]", " ", "0"}]}], " ", 
     ")"}]}], ")"}], "//", " ", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.740221629853047*^9, 3.740221719174979*^9}},
 CellLabel->
  "In[269]:=",ExpressionUUID->"d2980662-ab4d-400b-9cd3-aff18bcc41f8"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.008223684210526315`", "0.9835526315789473`", "0.9876644736842105`", 
      "0.9490131578947368`", "0.015625`", "0", "1.0016447368421053`", "0", 
      "1.9893092105263157`", "0.9950657894736842`", "0.009868421052631578`"},
     {"0.008909630886720407`", "1.9813322019516335`", "0", 
      "1.0029698769622402`", "0", "0", "1.0050912176495546`", "0", 
      "1.9919389053882053`", "0.996605854900297`", "0.009333899024183284`"},
     {"0.534621578099839`", "1.5636070853462158`", "0.17552334943639292`", 
      "0.605475040257649`", "2.618894256575416`", "0.10574342458400429`", 
      "0.6596886741814278`", "0.04938271604938271`", "1.6849168008588298`", 
      "0.8362855609232421`", "0.019860440150295224`"},
     {"0", "1.9782923299565847`", "0", "1.`", "0", "0", "0", 
      "0.0723589001447178`", "1.9927641099855282`", "0.9985528219971056`", 
      "0.004341534008683068`"},
     {"0", "0.9914712153518124`", "0.9914712153518124`", 
      "0.9594882729211087`", "0.02771855010660981`", "0", "0", 
      "0.07889125799573561`", "1.9658848614072495`", "0.9893390191897654`", 
      "0"},
     {"0.01728395061728395`", "1.980246913580247`", "0", "0", "0", "0", 
      "1.0246913580246915`", "0", "1.980246913580247`", "1.`", 
      "0.0962962962962963`"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.740221694710455*^9, 3.740221719663547*^9}},
 CellLabel->
  "Out[269]//MatrixForm=",ExpressionUUID->"960cbc0b-6b0c-4b9c-b411-\
18529de24db7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"cov", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Dot", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", "allCenters", "]"}], ",", "allCenters"}], 
        "]"}], "/", "6"}], "//", "N"}]}], " ", ")"}], "//", " ", 
   "MatrixForm"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"space", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Eigenvectors", "[", 
      RowBox[{"cov", ",", "3"}], "]"}], " ", "//", " ", "N"}], "  ", "//", 
    " ", "MatrixForm"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{"space", ",", ".3"}], "]"}]}], "Input",
 CellChangeTimes->{{3.740221772397208*^9, 3.7402218112661324`*^9}},
 CellLabel->
  "In[278]:=",ExpressionUUID->"4dc09e56-0973-4e28-abbc-ea5b7f5539f2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"-", "0.5497684830736441`"}], "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "0.6612734675460583`"}], 
      RowBox[{"-", "0.33135343908719783`"}], "0"},
     {"0", "0", "0", "0", 
      RowBox[{"-", "0.9562265614789731`"}], "0", "0", "0", "0", "0", "0"},
     {"0", "0.5165648120021791`", 
      RowBox[{"-", "0.6837965710755125`"}], 
      RowBox[{"-", "0.39803277637469764`"}], "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.740221775957547*^9, 3.740221811657818*^9}},
 CellLabel->
  "Out[280]//MatrixForm=",ExpressionUUID->"8acd4cf9-03e6-4373-b18f-\
3f2aecefa8dd"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting cluster centers", "Subsection",
 CellChangeTimes->{{3.7402307334728527`*^9, 3.740230736909107*^9}, {
  3.740250608576479*^9, 
  3.740250611030468*^9}},ExpressionUUID->"297c9767-62ea-41da-8d50-\
16744e95b717"],

Cell[CellGroupData[{

Cell["Collecting the problem data", "Subsubsection",
 CellChangeTimes->{{3.7402323994975863`*^9, 3.740232401840418*^9}, {
  3.740248937684238*^9, 
  3.7402489415539627`*^9}},ExpressionUUID->"b0013504-a883-4a46-8480-\
e4da68285d30"],

Cell[BoxData[
 RowBox[{
  RowBox[{"probList", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<3_6\>\"", ",", "\"\<5_6\>\"", ",", "\"\<10_10\>\""}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740230738518818*^9, 3.7402307696336193`*^9}, {
   3.740230865186166*^9, 3.74023086897681*^9}, {3.7402310402878237`*^9, 
   3.740231042264573*^9}, {3.740231546992394*^9, 3.7402315598110723`*^9}, {
   3.740231940367347*^9, 3.740231946022893*^9}, 3.7402341017030497`*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"cfad0ecf-114a-417f-87cf-1e3b4e47a845"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fileList", " ", "=", " ", 
   RowBox[{"Pick", "[", 
    RowBox[{"allFiles", ",", 
     RowBox[{"StringContainsQ", "[", 
      RowBox[{"allFiles", ",", 
       RowBox[{"Apply", "[", 
        RowBox[{"Alternatives", ",", " ", "probList"}], "]"}]}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740231564270171*^9, 3.7402315941540527`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"963f5644-8882-49f6-8c1a-46ff784f80b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Get", " ", "/@", " ", "fileList"}], ";"}]], "Input",
 CellChangeTimes->{{3.740231608415291*^9, 3.7402316115855207`*^9}, 
   3.740234097222197*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"fc18f92d-4a45-41ec-b4ad-9493ca4c61d7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"problems", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", 
    RowBox[{"Length", "[", "probList", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"file", " ", "=", " ", 
     RowBox[{
      RowBox[{"Pick", "[", 
       RowBox[{"allFiles", ",", 
        RowBox[{"StringContainsQ", "[", 
         RowBox[{"allFiles", ",", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"\"\</\>\"", ",", 
            RowBox[{"probList", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<.\>\""}], "]"}]}], 
         "]"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Get", "[", "file", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"problems", ",", " ", "probdata"}], "]"}], ";"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.740231682981339*^9, 3.740231765240142*^9}, {
   3.740231814123693*^9, 3.740231886420034*^9}, {3.740231917794986*^9, 
   3.740231934538991*^9}, 3.7402319649377527`*^9, {3.740232664429996*^9, 
   3.740232666276545*^9}, {3.7402326990151997`*^9, 3.740232711777103*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"569e809b-f4e7-4a99-a51f-8f22b71300aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Build all the classifiers", "Subsubsection",
 CellChangeTimes->{{3.7402323994975863`*^9, 
  3.740232401840418*^9}},ExpressionUUID->"da34e2a9-6816-415a-88ba-\
232114bd7614"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myclassifiers", " ", "=", " ", 
   RowBox[{"codeClassiferBuilder", " ", "/@", "problems"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.740232742957686*^9, 3.740232743750153*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[66]:=",ExpressionUUID->"4f9aa720-5fd5-4f1b-affd-098da6279511"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"Length", "[", "probList", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.740236442255331*^9, 3.740236454446184*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"c4455fb9-a0a4-4579-986e-87be3deebae8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{{3.7402364446893806`*^9, 3.7402364548448133`*^9}},
 CellLabel->
  "Out[152]=",ExpressionUUID->"80d22e9f-7312-4af5-940d-e1deae167d0c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"myresults", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"myclassifiers", "[", 
       RowBox[{"[", "#", "]"}], "]"}], "[", 
      RowBox[{"problems", "[", 
       RowBox[{"[", "#", "]"}], "]"}], "]"}], "&"}], " ", "/@", " ", 
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "probList", "]"}], "]"}]}]}], ";"}]], "Input",
 EmphasizeSyntaxErrors->True,
 CellLabel->
  "In[153]:=",ExpressionUUID->"778998ec-df61-4828-8e64-5999228bcd78"],

Cell[BoxData[
 RowBox[{
  RowBox[{"findPCs", "[", "probData_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "groupMap", ",", " ", "grouped", ",", " ", "numGroups", ",", " ", 
      "centers", ",", " ", "keywords", ",", " ", "allCenters", ",", " ", 
      "cov", ",", " ", "evectors", ",", " ", "loadings", ",", " ", "labels", 
      ",", " ", "tuples", ",", " ", "tupleMap"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"groupMap", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"probData", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "#", "]"}], "]"}], "\[Rule]", 
          RowBox[{
           RowBox[{"probData", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], "&"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", 
          RowBox[{"probData", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"grouped", "=", 
      RowBox[{
       RowBox[{"GroupBy", "[", 
        RowBox[{"groupMap", ",", "Last"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"grouped", " ", "=", " ", 
      RowBox[{"Drop", "[", 
       RowBox[{"grouped", ",", 
        RowBox[{"{", 
         RowBox[{"Length", "[", "grouped", "]"}], "}"}]}], "]"}]}], " ", ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"numGroups", " ", "=", " ", 
      RowBox[{"Length", "[", "grouped", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"maxPCindex", " ", "=", " ", "6"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"centers", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Counts", "[", 
            RowBox[{"Flatten", "@", "#"}], "]"}], "/", " ", 
           RowBox[{"Length", "[", "#", "]"}]}], " ", "//", "N"}], ")"}], 
        "&"}], "/@", "grouped"}]}], " ", ";", "\[IndentingNewLine]", 
     RowBox[{"keywords", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"centers", " ", "//", " ", "Values"}], "  ", "//", " ", 
          "Normal"}], " ", "//", " ", "Flatten"}], " ", "//", " ", "Keys"}], 
       " ", "//", " ", "Union"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"allCenters", " ", "=", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Outer", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#1", "[", "#2", "]"}], "&"}], ",", 
          RowBox[{"(", 
           RowBox[{"centers", " ", "//", " ", "Values"}], ")"}], ",", 
          "keywords", ",", "1"}], "]"}], " ", "/.", " ", 
        RowBox[{
         RowBox[{"Missing", "[", "___", "]"}], "\[Rule]", " ", "0"}]}], " ", 
       ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cov", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Dot", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "allCenters", "]"}], ",", "allCenters"}], 
         "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"numGroups", "-", "1"}], ")"}]}], "//", "N"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"evectors", " ", "=", " ", 
      RowBox[{
       RowBox[{"Eigenvectors", "[", 
        RowBox[{"cov", ",", "maxPCindex"}], "]"}], " ", "//", " ", "N"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"evectors", " ", "=", " ", 
      RowBox[{"Chop", "[", 
       RowBox[{
        RowBox[{"evectors", "//", " ", "N"}], ",", 
        RowBox[{
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"Abs", "[", "#", "]"}], "]"}], "&"}], " ", "/@", " ", 
           "evectors"}], "]"}], "*", ".8"}]}], "]"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Truncated", " ", "eigenvectors"}], " ", "-", " ", 
       RowBox[{
       "later", " ", "replace", " ", "with", " ", "good", " ", "SPCA", " ", 
        "method"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"evectors", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", " ", "/", " ", 
          RowBox[{"Norm", "[", "#", "]"}]}], ")"}], "&"}], " ", "/@", " ", 
       "evectors"}]}], ";", " ", 
     RowBox[{"(*", "Normalizing", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"loadings", " ", "=", " ", 
      RowBox[{"Outer", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Dot", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", "allCenters", ",", 
        " ", "evectors", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"labels", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Pick", "[", 
         RowBox[{"keywords", ",", "#", ",", 
          RowBox[{"b_", " ", "/;", 
           RowBox[{
            RowBox[{"Abs", "[", "b", "]"}], ">", "0"}]}]}], "]"}], "&"}], " ",
        "/@", " ", "evectors"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"tuples", " ", "=", " ", 
      RowBox[{"Subsets", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "evectors", "]"}], "]"}], ",", 
        RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tupleMap", " ", "=", " ", 
      RowBox[{"Thread", "[", 
       RowBox[{"tuples", "\[Rule]", " ", 
        RowBox[{"(", 
         RowBox[{"tuples", " ", "/.", " ", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"Union", "@", 
             RowBox[{"Flatten", "@", "tuples"}]}], "\[Rule]", " ", "labels"}],
            "]"}]}], ")"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "tupleMap", ",", " ", "loadings", " ", ",", " ", "labels", ",", " ", 
       "evectors"}], "}"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.740232802171193*^9, 3.74023299273453*^9}, {
  3.740236389526596*^9, 3.7402364156021547`*^9}, {3.7402364617694693`*^9, 
  3.740236678649457*^9}, {3.740236836415791*^9, 3.7402368392964163`*^9}, {
  3.740247821368074*^9, 3.740247861457451*^9}, {3.740249510969963*^9, 
  3.7402495113654137`*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"02f5f9c4-68b7-42c5-ba02-238125c04b4a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"plotPCs", "[", 
    RowBox[{"multiProblems_", ",", " ", "probList_"}], "]"}], " ", ":=", " ", 
   
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "plotData", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"plotData", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"findPCs", "[", "#", "]"}], "&"}], " ", "/@", " ", 
        "multiProblems"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ListPointPlot3D", " ", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"plotData", "[", 
             RowBox[{"[", 
              RowBox[{"probnum", ",", " ", "2"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "pcToShow"}], " ", "]"}], "]"}], "\[Rule]", 
           " ", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", 
             RowBox[{"plotData", "[", 
              RowBox[{"[", 
               RowBox[{"probnum", ",", " ", "2"}], "]"}], "]"}], "]"}], 
            "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"LabelingFunction", "\[Rule]", "Callout"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AxesLabel", "\[Rule]", " ", 
           RowBox[{"Part", "[", 
            RowBox[{
             RowBox[{"plotData", "[", 
              RowBox[{"[", 
               RowBox[{"probnum", ",", " ", "3"}], "]"}], "]"}], ",", 
             "pcToShow"}], " ", "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"pcToShow", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}], ",", 
          RowBox[{"plotData", "[", 
           RowBox[{"[", 
            RowBox[{"probnum", ",", " ", "1"}], "]"}], "]"}], ",", 
          RowBox[{"ControlType", "\[Rule]", " ", "PopupMenu"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"probnum", ",", "1"}], "}"}], ",", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"Length", "[", "multiProblems", "]"}], "]"}], "\[Rule]", 
            " ", "probList"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"SaveDefinitions", " ", "\[Rule]", " ", "True"}]}], "]"}]}]}],
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.740226945477497*^9, 3.740227166321618*^9}, {
   3.740227264890253*^9, 3.7402273302725573`*^9}, {3.740227469814789*^9, 
   3.740227498948369*^9}, {3.740227534800349*^9, 3.7402276295658913`*^9}, {
   3.740227683748848*^9, 3.740227726355397*^9}, 3.740227807399838*^9, {
   3.740227876213099*^9, 3.740227878438219*^9}, {3.7402279803499737`*^9, 
   3.740227981852811*^9}, {3.7402286545863934`*^9, 3.740228672128211*^9}, {
   3.740228720855091*^9, 3.7402287235158873`*^9}, {3.740228773529421*^9, 
   3.7402287805087547`*^9}, {3.740228940269623*^9, 3.7402289717307043`*^9}, {
   3.740229024016223*^9, 3.7402290525516453`*^9}, {3.7402292959397306`*^9, 
   3.740229300142315*^9}, {3.740229964824635*^9, 3.740229966840794*^9}, {
   3.740230075282839*^9, 3.7402301014739428`*^9}, 3.740230162761354*^9, {
   3.7402302025460787`*^9, 3.740230205672575*^9}, {3.740230264365903*^9, 
   3.7402302776332893`*^9}, {3.74023036396712*^9, 3.7402304136037188`*^9}, {
   3.740230482936141*^9, 3.740230599097239*^9}, {3.7402306324024057`*^9, 
   3.740230644253357*^9}, {3.740233217395306*^9, 3.740233279114966*^9}, {
   3.740234273202989*^9, 3.7402342735544024`*^9}, 3.740234399075923*^9, {
   3.740234835045162*^9, 3.740234848949615*^9}, {3.740234899094198*^9, 
   3.740234903144487*^9}, {3.7402349369576273`*^9, 3.740235002042804*^9}, {
   3.740235032497501*^9, 3.7402351039294147`*^9}, {3.740235674295024*^9, 
   3.740235744429641*^9}, {3.740235780965784*^9, 3.740235799126382*^9}, {
   3.740235847955249*^9, 3.740235870712598*^9}, {3.7402359048940372`*^9, 
   3.74023592305343*^9}, {3.7402360377708273`*^9, 3.740236057955871*^9}, {
   3.740236197231646*^9, 3.740236220640545*^9}, {3.740236691895061*^9, 
   3.740236776547266*^9}, {3.740236815168714*^9, 3.740236846205476*^9}, {
   3.740247711744381*^9, 3.740247746121517*^9}, {3.74024777866679*^9, 
   3.740247795683358*^9}, {3.74024932056979*^9, 3.7402493253499002`*^9}, {
   3.740249359371748*^9, 3.740249360953772*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"8168b8c2-0df0-4da9-bc9f-db5f93d1f3d8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Data Sources Links/References", "Subsection",
 CellChangeTimes->{
  3.736182217183381*^9},ExpressionUUID->"8d03133e-d036-4673-985c-\
415dd5ec88bb"],

Cell["\<\
Thanks to Stephen Wolfram and Richard Hennigan for  supplying us with this \
data set, and to Carl Woll and Kyle Keane for their help with this project!\
\>", "Text",
 CellChangeTimes->{{3.740250638135063*^9, 3.740250663570565*^9}, {
  3.7402507635438633`*^9, 3.7402507918082523`*^9}, {3.740250833886009*^9, 
  3.740250859758129*^9}},ExpressionUUID->"b1177315-be59-4b70-be44-\
55f313dcfabd"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "Subsection",
 CellChangeTimes->{
  3.73618224410275*^9},ExpressionUUID->"6668b03b-4180-4966-b673-b20f85cb5927"],

Cell[CellGroupData[{

Cell["Principal Component Analysis", "Item",
 CellChangeTimes->{{3.708096350583043*^9, 3.7080963544862823`*^9}, {
  3.708113540381196*^9, 3.708113546129714*^9}, {3.740248974647211*^9, 
  3.7402489780183372`*^9}},ExpressionUUID->"a0f68604-8bfc-4c6d-afb6-\
b6a38b6de7d0"],

Cell["Bag of Words", "Item",
 CellChangeTimes->{{3.708096350583043*^9, 3.7080963563232718`*^9}, {
  3.740248980800056*^9, 
  3.740248982336413*^9}},ExpressionUUID->"d4791c55-e7db-46a0-8162-\
0eebcfa1df4d"],

Cell["Educational Analytics", "Item",
 CellChangeTimes->{{3.708096350583043*^9, 3.7080963563232718`*^9}, {
  3.740248980800056*^9, 
  3.740248993211247*^9}},ExpressionUUID->"a5da2cfa-534f-46de-b133-\
30112712710b"]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
NotebookEventActions:>{
 "WindowClose" :> 
  Module[{$CellContext`dy, $CellContext`hr, $CellContext`mn}, \
{$CellContext`dy, $CellContext`hr, $CellContext`mn} = Map[(LinkWrite[
         First[$FrontEnd], 
         FrontEnd`Value[#]]; LinkRead[
         First[$FrontEnd]])& , {"DateLong", "Hour", "Minute"}]; 
    NotebookLocate["LastModified"]; NotebookWrite[
      InputNotebook[], 
      Cell[
       TextData[{
        "Last modified on: ", $CellContext`dy, " at ", $CellContext`hr, 
         ":", $CellContext`mn}], "TemplateInstructions", CellTags -> 
       "LastModified", Deployed -> True, Background -> 
       Lighter[Gray, 0.5]]]]},
WindowSize->{812, 752},
WindowMargins->{{223, Automatic}, {Automatic, 0}},
WindowFrameElements->{"CloseBox"},
DockedCells->Cell[
 "Wolfram Summer School 2018", FontFamily -> "Source Sans Pro", FontSize -> 
  42, FontVariations -> {"CapsType" -> "AllCaps"}, 
  RGBColor[0.25098039215686274`, 0.25098039215686274`, 0.25098039215686274`], 
  Background -> RGBColor[1., 0.807843137254902, 0.2549019607843137]],
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["TemplateProjectTitle", StyleDefinitions -> StyleData["Title"]],
     CellFrame -> True, CellMargins -> {{25, 20}, {5, 5}}, ShowCellLabel -> 
    True, CellFrameColor -> GrayLevel[0.85]], 
   Cell[
    StyleData["TemplateLabel", StyleDefinitions -> StyleData["Text"]], 
    FontSize -> 14, FontWeight -> Bold, FontColor -> 
    RGBColor[0.25098039215686274`, 0.25098039215686274`, 
      0.25098039215686274`], Background -> None], 
   Cell[
    StyleData["TemplateInstructions", StyleDefinitions -> StyleData["Text"]], 
    Editable -> False, ShowCellBracket -> False, FontSize -> 16], 
   Cell[
    StyleData["TemplateAuthorInfo", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> True, CellMargins -> {{25, 20}, {5, 5}}, ShowCellLabel -> 
    True, CellFrameColor -> GrayLevel[0.85]], 
   Cell[
    StyleData[
    "TemplateSectionHeaders", StyleDefinitions -> StyleData["Section"]], 
    Editable -> False, Selectable -> False, Deletable -> False, 
    ShowCellBracket -> False, Deployed -> True], 
   Cell[
    StyleData[
    "TemplateSectionSubHeaders", StyleDefinitions -> StyleData["Subsection"]],
     Editable -> False, ShowCellBracket -> False], 
   Cell[
    StyleData[
    "TemplateSectionSubSubHeaders", StyleDefinitions -> 
     StyleData["Subsubsection"]], Editable -> False, ShowCellBracket -> 
    False], 
   Cell[
    StyleData[
    "TemplateEditableHeader", StyleDefinitions -> StyleData["Subsubsection"]],
     FontColor -> RGBColor[1., 0.5058823529411764, 0.]], 
   Cell[
    StyleData[
    "TemplateEditableContent", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> True, ShowCellBracket -> False, 
    CellMargins -> {{25, 20}, {5, 5}}, Evaluatable -> False, ShowCellLabel -> 
    True, CellFrameColor -> GrayLevel[0.85]], 
   Cell[
    StyleData[
    "TemplateEditableInput", StyleDefinitions -> StyleData["Input"]], 
    Editable -> True, CellFrame -> True, CellMargins -> {{25, 20}, {5, 5}}, 
    Evaluatable -> True, ShowCellLabel -> True, CellFrameColor -> 
    GrayLevel[0.85]], 
   Cell[
    StyleData["TemplateDivider", StyleDefinitions -> StyleData["Text"]], 
    Editable -> False, Selectable -> False, Deletable -> False, PageWidth -> 
    WindowWidth, CellFrame -> {{False, False}, {8, False}}, ShowCellBracket -> 
    False, CellMargins -> {{0, -10}, {0, 0}}, 
    CellBracketOptions -> {"OverlapContent" -> True}, Deployed -> True, 
    CellFrameMargins -> {{10, 10}, {1, 1}}, CellFrameColor -> 
    RGBColor[1, 0.5, 0], Background -> 
    RGBColor[1., 0.807843137254902, 0.2549019607843137]]}, Visible -> False, 
  FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "LastModified"->{
  Cell[400, 13, 226, 5, 52, "TemplateInstructions",ExpressionUUID->"73a75361-035f-4cef-9b11-0db0d08ce299",
   CellTags->"LastModified"]},
 "AuthorInfo"->{
  Cell[651, 22, 218, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"47541fce-e5a1-4793-b8e1-e1340b437ca6",
   CellTags->"AuthorInfo"]},
 "PosterContent"->{
  Cell[1937, 62, 234, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"e3c11918-b62c-4e4f-bc19-a4aa32cba637",
   CellTags->"PosterContent"]},
 "PresentationContent"->{
  Cell[65408, 1168, 252, 6, 67, "TemplateSectionHeaders",ExpressionUUID->"8e028c0c-7cb5-4cea-9aaf-57044e03e425",
   CellTags->"PresentationContent"]},
 "ProjectNotes"->{
  Cell[154097, 2729, 231, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"d0702cda-4649-4987-a5e2-607be4aa4f6e",
   CellTags->"ProjectNotes"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"LastModified", 306602, 6374},
 {"AuthorInfo", 306757, 6377},
 {"PosterContent", 306915, 6380},
 {"PresentationContent", 307083, 6383},
 {"ProjectNotes", 307253, 6386}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 226, 5, 52, "TemplateInstructions",ExpressionUUID->"73a75361-035f-4cef-9b11-0db0d08ce299",
 CellTags->"LastModified"],
Cell[CellGroupData[{
Cell[651, 22, 218, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"47541fce-e5a1-4793-b8e1-e1340b437ca6",
 CellTags->"AuthorInfo"],
Cell[872, 29, 340, 8, 48, "TemplateAuthorInfo",ExpressionUUID->"2214bf82-cb91-41b2-a79f-ecd872282532"],
Cell[1215, 39, 341, 8, 48, "TemplateAuthorInfo",ExpressionUUID->"1d803eb4-64f6-4601-a1a0-49b5afc9692c"],
Cell[1559, 49, 341, 8, 48, "TemplateAuthorInfo",ExpressionUUID->"f3f2c56d-6554-49c0-a8f0-7c8d2bae5215"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1937, 62, 234, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"e3c11918-b62c-4e4f-bc19-a4aa32cba637",
 CellTags->"PosterContent"],
Cell[2174, 69, 422, 8, 49, "TemplateEditableContent",ExpressionUUID->"16215b85-c481-4f11-8175-b0652d7bbfad"],
Cell[2599, 79, 915, 16, 140, "TemplateEditableContent",ExpressionUUID->"c662dd0a-9849-40e8-bc89-a9f688107475"],
Cell[3517, 97, 331, 8, 60, "TemplateInstructions",ExpressionUUID->"ec924e65-f9fc-4678-8fe3-95cd292f053c"],
Cell[3851, 107, 57839, 963, 291, "TemplateEditableContent",ExpressionUUID->"32f16ef4-646e-45ed-a15a-a912cfc9ecd6"],
Cell[61693, 1072, 739, 14, 117, "TemplateEditableContent",ExpressionUUID->"ba2205bf-d701-4ef5-aa12-c7a7f1002441"],
Cell[62435, 1088, 762, 16, 117, "TemplateEditableContent",ExpressionUUID->"e44105f6-e95a-4d28-9e4d-8a40b3d4e596"],
Cell[63200, 1106, 99, 1, 19, "Input",ExpressionUUID->"4a721f19-623c-47ad-bb58-c6de867557f0",
 CellOpen->False],
Cell[63302, 1109, 2069, 54, 38, "TemplateDivider",ExpressionUUID->"3dd6c29c-0c7c-4de9-8e57-c12593f67d71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65408, 1168, 252, 6, 67, "TemplateSectionHeaders",ExpressionUUID->"8e028c0c-7cb5-4cea-9aaf-57044e03e425",
 CellTags->"PresentationContent"],
Cell[65663, 1176, 1395, 29, 90, "TemplateInstructions",ExpressionUUID->"a415c0fc-f692-474a-a3a1-95fb4df9ef20"],
Cell[CellGroupData[{
Cell[67083, 1209, 218, 4, 45, "TemplateEditableHeader",ExpressionUUID->"a82eb68b-c55f-495d-ac5a-d97167784e73"],
Cell[67304, 1215, 453, 10, 81, "TemplateEditableContent",ExpressionUUID->"c93624b0-8e9f-452c-9c74-674d9e990fed"],
Cell[67760, 1227, 573, 15, 55, "TemplateEditableInput",ExpressionUUID->"283ab55b-6478-4daa-8238-695cb52adfd3"],
Cell[68336, 1244, 312, 8, 58, "TemplateEditableContent",ExpressionUUID->"2b7f7107-e4a1-4d04-ac14-d2df7d5f2a68"],
Cell[68651, 1254, 20365, 341, 129, "TemplateEditableInput",ExpressionUUID->"d0e9053b-d531-4448-96a4-98286b0c326d"],
Cell[89019, 1597, 758, 13, 127, "TemplateEditableContent",ExpressionUUID->"26739f8a-acd2-4245-b5eb-77569a9a925a"],
Cell[89780, 1612, 50711, 839, 150, "TemplateEditableInput",ExpressionUUID->"3f280a5f-6a6c-47a6-b479-de8f94f3c840"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140528, 2456, 222, 4, 45, "TemplateEditableHeader",ExpressionUUID->"d81a2f92-5f84-4614-aee9-dcb6b7eeac79"],
Cell[CellGroupData[{
Cell[140775, 2464, 482, 10, 55, "TemplateEditableInput",ExpressionUUID->"20197eb1-0a2c-4e3a-a068-01939f0a01f0"],
Cell[141260, 2476, 9552, 165, 389, "Output",ExpressionUUID->"c0a6a6c2-8fde-4a15-ba78-f3e53def8e58"]
}, Open  ]],
Cell[150827, 2644, 99, 1, 19, "Input",ExpressionUUID->"5ddaca3b-16c4-4ddd-a510-a603177f7695",
 CellOpen->False],
Cell[150929, 2647, 3119, 76, 38, "TemplateDivider",ExpressionUUID->"01c4256e-42d0-42b4-b6a6-4fa4583bf2f0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[154097, 2729, 231, 5, 67, "TemplateSectionHeaders",ExpressionUUID->"d0702cda-4649-4987-a5e2-607be4aa4f6e",
 CellTags->"ProjectNotes"],
Cell[CellGroupData[{
Cell[154353, 2738, 293, 5, 54, "Subsection",ExpressionUUID->"c45a16de-9738-456b-865b-77b7afa38345"],
Cell[CellGroupData[{
Cell[154671, 2747, 159, 3, 45, "Subsubsection",ExpressionUUID->"97e41bb9-2171-4366-9230-089ac9f8cec0"],
Cell[154833, 2752, 420, 10, 30, "Input",ExpressionUUID->"f87a1c61-f95f-40d9-b7a3-b461343c2c41"]
}, Closed]],
Cell[CellGroupData[{
Cell[155290, 2767, 330, 5, 37, "Subsubsection",ExpressionUUID->"9ce95bc5-33ed-406f-a0bd-9ef972532db9"],
Cell[155623, 2774, 274, 5, 30, "Input",ExpressionUUID->"7092f90d-0bc7-47c8-b741-a50ed47927f0"],
Cell[155900, 2781, 289, 6, 35, "Text",ExpressionUUID->"f11ccf8e-a395-4e71-b3ee-a49578b70cdb"],
Cell[CellGroupData[{
Cell[156214, 2791, 410, 7, 30, "Input",ExpressionUUID->"d9f36dd1-e5db-4034-a85c-2d91e9e9463a"],
Cell[156627, 2800, 512, 9, 34, "Output",ExpressionUUID->"77e41f8d-0862-42d5-bbad-65e56cd85fec"]
}, Open  ]],
Cell[157154, 2812, 270, 6, 58, "Text",ExpressionUUID->"7cebe4aa-a339-49bf-8223-7e8ecc5e816a"],
Cell[157427, 2820, 383, 9, 30, "Input",ExpressionUUID->"5ed7831f-7185-47f3-ae8e-ddff595bdeb7"],
Cell[157813, 2831, 420, 8, 58, "Text",ExpressionUUID->"497c00aa-cdea-48c5-8219-55d90e5829cc"],
Cell[158236, 2841, 538, 12, 52, "Input",ExpressionUUID->"445bf1b6-fa08-41b6-9bc2-5a54081deb89"],
Cell[158777, 2855, 303, 6, 30, "Input",ExpressionUUID->"fb5c6361-fcb1-4a2d-9aba-c2f9b264701a"],
Cell[159083, 2863, 1613, 34, 178, "Input",ExpressionUUID->"db8779aa-4ac2-4f6f-b016-63a15eefafb7"],
Cell[160699, 2899, 160, 2, 30, "Input",ExpressionUUID->"357b418a-0590-4673-ab29-47803b15c114"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[160908, 2907, 286, 5, 38, "Subsection",ExpressionUUID->"7f49224d-084b-4ecb-94af-652caa5bdedc"],
Cell[161197, 2914, 470, 11, 30, "Input",ExpressionUUID->"7100f337-f59a-4834-aa25-d08d7cf28a41"],
Cell[161670, 2927, 352, 7, 30, "Input",ExpressionUUID->"2128bca0-bba2-4022-9083-102f2fc2b25f"],
Cell[162025, 2936, 644, 12, 73, "Input",ExpressionUUID->"9c7fa3de-2096-4567-82f0-ea9865e09887"]
}, Closed]],
Cell[CellGroupData[{
Cell[162706, 2953, 215, 4, 38, "Subsection",ExpressionUUID->"0df0d251-5a18-48d8-9fbe-45dd16b914c8"],
Cell[CellGroupData[{
Cell[162946, 2961, 237, 4, 45, "Subsubsection",ExpressionUUID->"0be78511-1a0c-4847-b8b4-563d845dc1ce"],
Cell[163186, 2967, 417, 9, 30, "Input",ExpressionUUID->"9112b72b-c66c-4cf4-ae5d-4d09397015e3"],
Cell[163606, 2978, 547, 11, 30, "Input",ExpressionUUID->"14965535-0190-4a8e-ab3b-ca016b1aa3ae"],
Cell[164156, 2991, 417, 8, 30, "Input",ExpressionUUID->"1cf3d394-d8ab-4e8c-9d47-13b695a9ecfd"],
Cell[164576, 3001, 477, 9, 30, "Input",ExpressionUUID->"d1aaad35-e510-42b5-a115-5d50c559b50c"],
Cell[CellGroupData[{
Cell[165078, 3014, 119, 2, 30, "Input",ExpressionUUID->"bc0115fa-3577-472b-88b4-3d9dc856fa3a"],
Cell[165200, 3018, 41379, 983, 949, "Output",ExpressionUUID->"ecc87ab6-d9dd-4205-a0d9-fa42128b183f"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[206628, 4007, 171, 3, 37, "Subsubsection",ExpressionUUID->"feae0108-d961-4532-8744-07d8dbaabc3e"],
Cell[206802, 4012, 857, 18, 53, "Input",ExpressionUUID->"b1d30cd4-c9f6-4a4a-a8ff-212e82ecf23f"],
Cell[207662, 4032, 403, 8, 30, "Input",ExpressionUUID->"85712d68-e86b-43a8-a5cb-9282220d1126"],
Cell[208068, 4042, 465, 10, 30, "Input",ExpressionUUID->"9a785636-f950-469d-8c6d-86f915939314"],
Cell[208536, 4054, 324, 7, 30, "Input",ExpressionUUID->"f896fcd2-12bb-4e55-b5b0-99d90433915b"]
}, Closed]],
Cell[CellGroupData[{
Cell[208897, 4066, 168, 3, 37, "Subsubsection",ExpressionUUID->"cceda057-0c8c-4521-9323-a58e7fa06db2"],
Cell[209068, 4071, 502, 10, 30, "Input",ExpressionUUID->"f6607d28-7522-41ce-8192-ac8f220b05ed"],
Cell[209573, 4083, 283, 6, 58, "Text",ExpressionUUID->"cbd0d927-547e-49b4-b13b-85102cdc7396"],
Cell[CellGroupData[{
Cell[209881, 4093, 249, 4, 32, "Item",ExpressionUUID->"a0884e70-13db-46ae-893e-353bf4590d95"],
Cell[210133, 4099, 245, 4, 32, "Item",ExpressionUUID->"76d85504-2d77-4ddf-82a8-ab30100b62a9"]
}, Open  ]],
Cell[210393, 4106, 330, 7, 30, "Input",ExpressionUUID->"59df0de0-9b74-469d-bf13-1b1590286752"],
Cell[210726, 4115, 560, 14, 30, "Input",ExpressionUUID->"f05db410-b955-4bd6-85fb-92beb4196cfa"],
Cell[211289, 4131, 602, 14, 30, "Input",ExpressionUUID->"b1b069f3-2817-45d7-9fda-f2bb3b4837c7"],
Cell[CellGroupData[{
Cell[211916, 4149, 223, 4, 30, "Input",ExpressionUUID->"736f2846-5ed6-46f5-ab5b-4509ad163aee"],
Cell[212142, 4155, 1090, 17, 98, "Output",ExpressionUUID->"da0301f7-0c0d-468f-83c6-6ba29bad7544"]
}, Open  ]],
Cell[213247, 4175, 506, 13, 30, "Input",ExpressionUUID->"2a105273-1fcf-4a46-8e66-1679b0986b32"],
Cell[CellGroupData[{
Cell[213778, 4192, 230, 4, 30, "Input",ExpressionUUID->"362ff0d7-16a4-4962-9e32-5b547013346e"],
Cell[214011, 4198, 570, 10, 56, "Output",ExpressionUUID->"e2c56cd8-3aae-4f33-86cb-f45af74fa6b7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[214630, 4214, 168, 3, 37, "Subsubsection",ExpressionUUID->"dc68f418-cc9e-45ab-a092-f335a26bea45"],
Cell[CellGroupData[{
Cell[214823, 4221, 303, 5, 30, "Input",ExpressionUUID->"4e3923d4-2fa9-4505-aaa2-83e47c8672ad"],
Cell[215129, 4228, 30441, 589, 62, "Output",ExpressionUUID->"6b873c6c-b416-46fc-b720-da75dad718dd"]
}, Open  ]],
Cell[245585, 4820, 473, 12, 30, "Input",ExpressionUUID->"6611ddd0-6b3c-4dfb-96ab-d28c07554639"],
Cell[246061, 4834, 458, 10, 30, "Input",ExpressionUUID->"644252ff-a1e1-48d0-bc3b-ab4808048653"],
Cell[246522, 4846, 655, 16, 30, "Input",ExpressionUUID->"25faf5af-15d3-43ed-8cde-37f2dd860b8d"],
Cell[247180, 4864, 470, 11, 30, "Input",ExpressionUUID->"0da69d2e-a1d5-4ffe-943b-381ed251fd13"],
Cell[247653, 4877, 384, 9, 30, "Input",ExpressionUUID->"87dabea5-bc36-4aa1-9fb5-6f5e4871430c"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[248086, 4892, 272, 4, 38, "Subsection",ExpressionUUID->"8ad6e9de-3a28-48f4-abe1-5959c193a751"],
Cell[CellGroupData[{
Cell[248383, 4900, 311, 5, 45, "Subsubsection",ExpressionUUID->"1b167a1a-0d2d-420a-9597-67a3c84a6a97"],
Cell[248697, 4907, 3894, 91, 472, "Input",ExpressionUUID->"c6df268a-bd58-4567-a900-547b764a5d3a"],
Cell[252594, 5000, 2862, 65, 325, "Input",ExpressionUUID->"f8363bc8-c60a-4ce9-a290-ea9f68192642"]
}, Closed]],
Cell[CellGroupData[{
Cell[255493, 5070, 330, 5, 37, "Subsubsection",ExpressionUUID->"b39f1234-6125-4c0d-93fc-6d1959b5221d"],
Cell[255826, 5077, 491, 8, 30, "Input",ExpressionUUID->"a4be365e-ea7c-400b-9cec-75a65223ab12"],
Cell[256320, 5087, 597, 13, 30, "Input",ExpressionUUID->"20b0f97f-dd03-4154-8d67-3ff471b32e41"],
Cell[256920, 5102, 900, 20, 30, "Input",ExpressionUUID->"8b9d89bf-ff5b-4b67-a0eb-30cf11d3cea2"],
Cell[257823, 5124, 485, 11, 30, "Input",ExpressionUUID->"71fead0a-e71d-44e6-9fb4-91eb4689a438"],
Cell[CellGroupData[{
Cell[258333, 5139, 478, 12, 30, "Input",ExpressionUUID->"72ec6e25-b971-400f-bf16-29fd375a532f"],
Cell[258814, 5153, 1821, 41, 111, "Output",ExpressionUUID->"ca7e230a-2565-4a82-9515-3f8364d4421a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260672, 5199, 428, 12, 30, "Input",ExpressionUUID->"20f6747d-169c-48b4-91f0-61fed19ad82b"],
Cell[261103, 5213, 415, 10, 63, "Output",ExpressionUUID->"2d1a34c0-40d3-436e-8253-d19d661dda98"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261555, 5228, 442, 10, 30, "Input",ExpressionUUID->"720df06f-cb8f-4dd9-b89c-c7886f51069c"],
Cell[262000, 5240, 2892, 58, 164, "Output",ExpressionUUID->"41496260-5575-425a-adf7-0d162efcf6c7"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[264953, 5305, 300, 5, 38, "Subsection",ExpressionUUID->"d10932e9-c835-486d-a820-e47f09513a0d"],
Cell[CellGroupData[{
Cell[265278, 5314, 300, 4, 45, "Subsubsection",ExpressionUUID->"e70d13bf-d8ae-403d-95cc-7476f913a01e"],
Cell[265581, 5320, 215, 5, 35, "Text",ExpressionUUID->"d932eb13-d5f8-4ebc-ae5b-c825e5651957"],
Cell[CellGroupData[{
Cell[265821, 5329, 381, 10, 30, "Input",ExpressionUUID->"31187d30-e81b-4a2e-9c10-b1c803dccf1a"],
Cell[266205, 5341, 1774, 40, 140, "Output",ExpressionUUID->"f4040d89-bf08-440d-8838-b6f06368f264"]
}, Open  ]],
Cell[267994, 5384, 289, 6, 58, "Text",ExpressionUUID->"d7d676dc-5259-4864-a365-d95667df764d"],
Cell[CellGroupData[{
Cell[268308, 5394, 346, 8, 30, "Input",ExpressionUUID->"3848ba59-58e2-4f27-8ae8-8600fc554c2c"],
Cell[268657, 5404, 458, 8, 34, "Output",ExpressionUUID->"8169855a-c26b-48de-b54b-41b77c77b79c"]
}, Open  ]],
Cell[269130, 5415, 340, 7, 58, "Text",ExpressionUUID->"1aab61be-0467-4490-a155-f8f21695596a"],
Cell[CellGroupData[{
Cell[269495, 5426, 577, 14, 52, "Input",ExpressionUUID->"3d81d2fc-23d0-4791-9eca-a725f7991108"],
Cell[270075, 5442, 359, 8, 34, "Output",ExpressionUUID->"fe8835c2-3c8f-435c-ae74-a6ca73900ba5"]
}, Open  ]],
Cell[270449, 5453, 217, 4, 35, "Text",ExpressionUUID->"350483af-ebe9-4dd9-b4a1-e68dbbf6817d"],
Cell[CellGroupData[{
Cell[270691, 5461, 720, 17, 30, "Input",ExpressionUUID->"3641ea4c-91b2-4806-bfba-4f4747f82e19"],
Cell[271414, 5480, 1745, 42, 161, "Output",ExpressionUUID->"0da1e883-de25-405f-9d75-4e846e561889"]
}, Open  ]],
Cell[273174, 5525, 283, 6, 58, "Text",ExpressionUUID->"06eaa5df-3b85-481b-8301-ea2583f845a9"],
Cell[CellGroupData[{
Cell[273482, 5535, 917, 23, 52, "Input",ExpressionUUID->"a2a3e7e3-74c8-4418-a2d1-bde246cdfbd6"],
Cell[274402, 5560, 2181, 49, 76, "Output",ExpressionUUID->"e22182a7-27b1-4450-92a0-157bfaa3acbe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276620, 5614, 283, 6, 30, "Input",ExpressionUUID->"e2924550-a8d5-4e4a-8895-bd51cb28814d"],
Cell[276906, 5622, 1905, 45, 76, "Output",ExpressionUUID->"33f43317-33a5-44d5-8637-ae0000b958f4"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[278860, 5673, 235, 4, 37, "Subsubsection",ExpressionUUID->"0257705e-baea-44d9-b408-16194ef39648"],
Cell[279098, 5679, 702, 20, 52, "Input",ExpressionUUID->"28ec9fc7-462b-47f2-a4a4-dbc9a5a65e91"],
Cell[279803, 5701, 402, 11, 30, "Input",ExpressionUUID->"514c96c2-ee7c-4a70-82f1-a7ac70185ad6"],
Cell[CellGroupData[{
Cell[280230, 5716, 673, 18, 73, "Input",ExpressionUUID->"d2980662-ab4d-400b-9cd3-aff18bcc41f8"],
Cell[280906, 5736, 2044, 40, 144, "Output",ExpressionUUID->"960cbc0b-6b0c-4b9c-b411-18529de24db7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282987, 5781, 818, 23, 73, "Input",ExpressionUUID->"4dc09e56-0973-4e28-abbc-ea5b7f5539f2"],
Cell[283808, 5806, 1160, 28, 76, "Output",ExpressionUUID->"8acd4cf9-03e6-4373-b18f-3f2aecefa8dd"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[285029, 5841, 223, 4, 38, "Subsection",ExpressionUUID->"297c9767-62ea-41da-8d50-16744e95b717"],
Cell[CellGroupData[{
Cell[285277, 5849, 231, 4, 45, "Subsubsection",ExpressionUUID->"b0013504-a883-4a46-8480-e4da68285d30"],
Cell[285511, 5855, 550, 10, 30, "Input",ExpressionUUID->"cfad0ecf-114a-417f-87cf-1e3b4e47a845"],
Cell[286064, 5867, 468, 11, 30, "Input",ExpressionUUID->"963f5644-8882-49f6-8c1a-46ff784f80b7"],
Cell[286535, 5880, 260, 5, 30, "Input",ExpressionUUID->"fc18f92d-4a45-41ec-b4ad-9493ca4c61d7"],
Cell[286798, 5887, 1387, 31, 157, "Input",ExpressionUUID->"569e809b-f4e7-4a99-a51f-8f22b71300aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288222, 5923, 178, 3, 45, "Subsubsection",ExpressionUUID->"da34e2a9-6816-415a-88ba-232114bd7614"],
Cell[288403, 5928, 322, 7, 30, "Input",ExpressionUUID->"4f9aa720-5fd5-4f1b-affd-098da6279511"],
Cell[CellGroupData[{
Cell[288750, 5939, 247, 5, 30, "Input",ExpressionUUID->"c4455fb9-a0a4-4579-986e-87be3deebae8"],
Cell[289000, 5946, 236, 5, 34, "Output",ExpressionUUID->"80d22e9f-7312-4af5-940d-e1deae167d0c"]
}, Open  ]],
Cell[289251, 5954, 500, 14, 30, "Input",ExpressionUUID->"778998ec-df61-4828-8e64-5999228bcd78"],
Cell[289754, 5970, 6529, 164, 619, "Input",ExpressionUUID->"02f5f9c4-68b7-42c5-ba02-238125c04b4a"],
Cell[296286, 6136, 4705, 96, 346, "Input",ExpressionUUID->"8168b8c2-0df0-4da9-bc9f-db5f93d1f3d8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[301040, 6238, 153, 3, 38, "Subsection",ExpressionUUID->"8d03133e-d036-4673-985c-415dd5ec88bb"],
Cell[301196, 6243, 401, 7, 58, "Text",ExpressionUUID->"b1177315-be59-4b70-be44-55f313dcfabd"]
}, Closed]],
Cell[CellGroupData[{
Cell[301634, 6255, 129, 2, 38, "Subsection",ExpressionUUID->"6668b03b-4180-4966-b673-b20f85cb5927"],
Cell[CellGroupData[{
Cell[301788, 6261, 269, 4, 32, "Item",ExpressionUUID->"a0f68604-8bfc-4c6d-afb6-b6a38b6de7d0"],
Cell[302060, 6267, 205, 4, 32, "Item",ExpressionUUID->"d4791c55-e7db-46a0-8162-0eebcfa1df4d"],
Cell[302268, 6273, 214, 4, 32, "Item",ExpressionUUID->"a5da2cfa-534f-46de-b133-30112712710b"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

